function e(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}var t,r,n=globalThis,i={},a={},s=n.parcelRequire9513;null==s&&((s=function(e){if(e in i)return i[e].exports;if(e in a){var t=a[e];delete a[e];var r={id:e,exports:{}};return i[e]=r,t.call(r.exports,r,r.exports),r.exports}var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){a[e]=t},n.parcelRequire9513=s);var o=s.register;o("ilwiq",function(t,r){let n,i,a;e(t.exports,"MOUSE",()=>s),e(t.exports,"TOUCH",()=>o),e(t.exports,"FrontSide",()=>l),e(t.exports,"BackSide",()=>h),e(t.exports,"DoubleSide",()=>u),e(t.exports,"LinearFilter",()=>c),e(t.exports,"RGBADepthPacking",()=>d),e(t.exports,"EventDispatcher",()=>S),e(t.exports,"MathUtils",()=>I),e(t.exports,"Vector2",()=>O),e(t.exports,"Matrix3",()=>N),e(t.exports,"Texture",()=>ee),e(t.exports,"Vector4",()=>et),e(t.exports,"Quaternion",()=>ea),e(t.exports,"Vector3",()=>es),e(t.exports,"Box3",()=>eh),e(t.exports,"Sphere",()=>eA),e(t.exports,"Ray",()=>eO),e(t.exports,"Matrix4",()=>eN),e(t.exports,"Color",()=>tf),e(t.exports,"MeshBasicMaterial",()=>t_),e(t.exports,"Float32BufferAttribute",()=>tE),e(t.exports,"BufferGeometry",()=>tL),e(t.exports,"Mesh",()=>tJ),e(t.exports,"UniformsUtils",()=>t2),e(t.exports,"ShaderMaterial",()=>t3),e(t.exports,"PerspectiveCamera",()=>t5),e(t.exports,"Plane",()=>rr),e(t.exports,"PlaneGeometry",()=>rl),e(t.exports,"ShaderChunk",()=>rh),e(t.exports,"UniformsLib",()=>ru),e(t.exports,"ShaderLib",()=>rc),e(t.exports,"MeshDepthMaterial",()=>ir),e(t.exports,"MeshDistanceMaterial",()=>ii),e(t.exports,"WebGLRenderer",()=>i_),e(t.exports,"Scene",()=>ix),e(t.exports,"InterleavedBufferAttribute",()=>iM),e(t.exports,"InstancedBufferAttribute",()=>ib),e(t.exports,"LineBasicMaterial",()=>iE),e(t.exports,"Line",()=>iU),e(t.exports,"EllipseCurve",()=>iO),e(t.exports,"CylinderGeometry",()=>i1),e(t.exports,"SphereGeometry",()=>aS),e(t.exports,"WireframeGeometry",()=>aw),e(t.exports,"MeshStandardMaterial",()=>aR),e(t.exports,"LineDashedMaterial",()=>aC),e(t.exports,"InstancedBufferGeometry",()=>ak),e(t.exports,"InstancedInterleavedBuffer",()=>aZ),e(t.exports,"Spherical",()=>aJ),e(t.exports,"Line3",()=>aQ),e(t.exports,"GridHelper",()=>a0),e(t.exports,"BoxHelper",()=>a2),e(t.exports,"ArrowHelper",()=>a4);let s={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},o={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},l=0,h=1,u=2,c=1006,d=3201,p="srgb",f="srgb-linear",m="display-p3",g="display-p3-linear",v="linear",_="srgb",x="rec709",y="300 es";class S{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let r=this._listeners[e];if(void 0!==r){let e=r.indexOf(t);-1!==e&&r.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners[e.type];if(void 0!==t){e.target=this;let r=t.slice(0);for(let t=0,n=r.length;t<n;t++)r[t].call(this,e);e.target=null}}}let M=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],b=1234567,E=Math.PI/180,T=180/Math.PI;function w(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(M[255&e]+M[e>>8&255]+M[e>>16&255]+M[e>>24&255]+"-"+M[255&t]+M[t>>8&255]+"-"+M[t>>16&15|64]+M[t>>24&255]+"-"+M[63&r|128]+M[r>>8&255]+"-"+M[r>>16&255]+M[r>>24&255]+M[255&n]+M[n>>8&255]+M[n>>16&255]+M[n>>24&255]).toLowerCase()}function A(e,t,r){return Math.max(t,Math.min(r,e))}function R(e,t){return(e%t+t)%t}function C(e,t,r){return(1-r)*e+r*t}function U(e){return(e&e-1)==0&&0!==e}function P(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function L(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw Error("Invalid component type.")}}function D(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw Error("Invalid component type.")}}let I={DEG2RAD:E,RAD2DEG:T,generateUUID:w,clamp:A,euclideanModulo:R,mapLinear:function(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)},inverseLerp:function(e,t,r){return e!==t?(r-e)/(t-e):0},lerp:C,damp:function(e,t,r,n){return C(e,t,1-Math.exp(-r*n))},pingpong:function(e,t=1){return t-Math.abs(R(e,2*t)-t)},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(b=e);let t=b+=1831565813;return t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967296},degToRad:function(e){return e*E},radToDeg:function(e){return e*T},isPowerOfTwo:U,ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:P,setQuaternionFromProperEuler:function(e,t,r,n,i){let a=Math.cos,s=Math.sin,o=a(r/2),l=s(r/2),h=a((t+n)/2),u=s((t+n)/2),c=a((t-n)/2),d=s((t-n)/2),p=a((n-t)/2),f=s((n-t)/2);switch(i){case"XYX":e.set(o*u,l*c,l*d,o*h);break;case"YZY":e.set(l*d,o*u,l*c,o*h);break;case"ZXZ":e.set(l*c,l*d,o*u,o*h);break;case"XZX":e.set(o*u,l*f,l*p,o*h);break;case"YXY":e.set(l*p,o*u,l*f,o*h);break;case"ZYZ":e.set(l*f,l*p,o*u,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}},normalize:D,denormalize:L};class O{constructor(e=0,t=0){O.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,r=this.y,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6],this.y=n[1]*t+n[4]*r+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(A(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,r=this.y-e.y;return t*t+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let r=Math.cos(t),n=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*r-a*n+e.x,this.y=i*n+a*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class N{constructor(e,t,r,n,i,a,s,o,l){N.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,r,n,i,a,s,o,l)}set(e,t,r,n,i,a,s,o,l){let h=this.elements;return h[0]=e,h[1]=n,h[2]=s,h[3]=t,h[4]=i,h[5]=o,h[6]=r,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let r=e.elements,n=t.elements,i=this.elements,a=r[0],s=r[3],o=r[6],l=r[1],h=r[4],u=r[7],c=r[2],d=r[5],p=r[8],f=n[0],m=n[3],g=n[6],v=n[1],_=n[4],x=n[7],y=n[2],S=n[5],M=n[8];return i[0]=a*f+s*v+o*y,i[3]=a*m+s*_+o*S,i[6]=a*g+s*x+o*M,i[1]=l*f+h*v+u*y,i[4]=l*m+h*_+u*S,i[7]=l*g+h*x+u*M,i[2]=c*f+d*v+p*y,i[5]=c*m+d*_+p*S,i[8]=c*g+d*x+p*M,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8];return t*a*h-t*s*l-r*i*h+r*s*o+n*i*l-n*a*o}invert(){let e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],u=h*a-s*l,c=s*o-h*i,d=l*i-a*o,p=t*u+r*c+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=u*f,e[1]=(n*l-h*r)*f,e[2]=(s*r-n*a)*f,e[3]=c*f,e[4]=(h*t-n*o)*f,e[5]=(n*i-s*t)*f,e[6]=d*f,e[7]=(r*o-l*t)*f,e[8]=(a*t-r*i)*f,this}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,n,i,a,s){let o=Math.cos(i),l=Math.sin(i);return this.set(r*o,r*l,-r*(o*a+l*s)+a+e,-n*l,n*o,-n*(-l*a+o*s)+s+t,0,0,1),this}scale(e,t){return this.premultiply(F.makeScale(e,t)),this}rotate(e){return this.premultiply(F.makeRotation(-e)),this}translate(e,t){return this.premultiply(F.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){let t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,r,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){let t=this.elements,r=e.elements;for(let e=0;e<9;e++)if(t[e]!==r[e])return!1;return!0}fromArray(e,t=0){for(let r=0;r<9;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){let r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return new this.constructor().fromArray(this.elements)}}let F=new N;function B(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function z(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let k={};function G(e){e in k||(k[e]=!0,console.warn(e))}let V=new N().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),H=new N().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),W={[f]:{transfer:v,primaries:x,toReference:e=>e,fromReference:e=>e},[p]:{transfer:_,primaries:x,toReference:e=>e.convertSRGBToLinear(),fromReference:e=>e.convertLinearToSRGB()},[g]:{transfer:v,primaries:"p3",toReference:e=>e.applyMatrix3(H),fromReference:e=>e.applyMatrix3(V)},[m]:{transfer:_,primaries:"p3",toReference:e=>e.convertSRGBToLinear().applyMatrix3(H),fromReference:e=>e.applyMatrix3(V).convertLinearToSRGB()}},j=new Set([f,g]),X={enabled:!0,_workingColorSpace:f,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(legacyMode){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!legacyMode},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(colorSpace){if(!j.has(colorSpace))throw Error(`Unsupported working color space, "${colorSpace}".`);this._workingColorSpace=colorSpace},convert:function(e,t,r){if(!1===this.enabled||t===r||!t||!r)return e;let n=W[t].toReference;return(0,W[r].fromReference)(n(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this._workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this._workingColorSpace)},getPrimaries:function(e){return W[e].primaries},getTransfer:function(e){return""===e?v:W[e].transfer}};function q(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Y(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class Z{static getDataURL(e){let t;if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;if(e instanceof HTMLCanvasElement)t=e;else{void 0===n&&(n=z("canvas")),n.width=e.width,n.height=e.height;let r=n.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=n}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let t=z("canvas");t.width=e.width,t.height=e.height;let r=t.getContext("2d");r.drawImage(e,0,0,e.width,e.height);let n=r.getImageData(0,0,e.width,e.height),i=n.data;for(let e=0;e<i.length;e++)i[e]=255*q(i[e]/255);return r.putImageData(n,0,0),t}if(!e.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e;{let t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*q(t[e]/255)):t[e]=q(t[e]);return{data:t,width:e.width,height:e.height}}}}let J=0;class K{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:J++}),this.uuid=w(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];let r={uuid:this.uuid,url:""},n=this.data;if(null!==n){let e;if(Array.isArray(n)){e=[];for(let t=0,r=n.length;t<r;t++)n[t].isDataTexture?e.push($(n[t].image)):e.push($(n[t]))}else e=$(n);r.url=e}return t||(e.images[this.uuid]=r),r}}function $(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Z.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Q=0;class ee extends S{constructor(e=ee.DEFAULT_IMAGE,t=ee.DEFAULT_MAPPING,r=1001,n=1001,i=c,a=1008,s=1023,o=1009,l=ee.DEFAULT_ANISOTROPY,h=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Q++}),this.uuid=w(),this.name="",this.source=new K(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=r,this.wrapT=n,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new O(0,0),this.repeat=new O(1,1),this.center=new O(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new N,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof h?this.colorSpace=h:(G("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=3001===h?p:""),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let r={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(r.userData=this.userData),t||(e.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return G("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===p?3001:3e3}set encoding(e){G("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=3001===e?p:""}}ee.DEFAULT_IMAGE=null,ee.DEFAULT_MAPPING=300,ee.DEFAULT_ANISOTROPY=1;class et{constructor(e=0,t=0,r=0,n=1){et.prototype.isVector4=!0,this.x=e,this.y=t,this.z=r,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,r=this.y,n=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*n+a[12]*i,this.y=a[1]*t+a[5]*r+a[9]*n+a[13]*i,this.z=a[2]*t+a[6]*r+a[10]*n+a[14]*i,this.w=a[3]*t+a[7]*r+a[11]*n+a[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,r,n;let i=e.elements,a=i[0],s=i[4],o=i[8],l=i[1],h=i[5],u=i[9],c=i[2],d=i[6],p=i[10];if(.01>Math.abs(s-l)&&.01>Math.abs(o-c)&&.01>Math.abs(u-d)){if(.1>Math.abs(s+l)&&.1>Math.abs(o+c)&&.1>Math.abs(u+d)&&.1>Math.abs(a+h+p-3))return this.set(1,0,0,0),this;let e=(a+1)/2,i=(h+1)/2,f=(p+1)/2,m=(s+l)/4,g=(o+c)/4,v=(u+d)/4;return e>i&&e>f?e<.01?(t=0,r=.707106781,n=.707106781):(r=m/(t=Math.sqrt(e)),n=g/t):i>f?i<.01?(t=.707106781,r=0,n=.707106781):(t=m/(r=Math.sqrt(i)),n=v/r):f<.01?(t=.707106781,r=.707106781,n=0):(t=g/(n=Math.sqrt(f)),r=v/n),this.set(t,r,n,Math.PI),this}let f=Math.sqrt((d-u)*(d-u)+(o-c)*(o-c)+(l-s)*(l-s));return .001>Math.abs(f)&&(f=1),this.x=(d-u)/f,this.y=(o-c)/f,this.z=(l-s)/f,this.w=Math.acos((a+h+p-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class er extends S{constructor(e=1,t=1,r={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new et(0,0,e,t),this.scissorTest=!1,this.viewport=new et(0,0,e,t),void 0!==r.encoding&&(G("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),r.colorSpace=3001===r.encoding?p:""),r=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:c,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},r),this.texture=new ee({width:e,height:t,depth:1},r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=r.generateMipmaps,this.texture.internalFormat=r.internalFormat,this.depthBuffer=r.depthBuffer,this.stencilBuffer=r.stencilBuffer,this.depthTexture=r.depthTexture,this.samples=r.samples}setSize(e,t,r=1){(this.width!==e||this.height!==t||this.depth!==r)&&(this.width=e,this.height=t,this.depth=r,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=r,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;let t=Object.assign({},e.texture.image);return this.texture.source=new K(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class en extends er{constructor(e=1,t=1,r={}){super(e,t,r),this.isWebGLRenderTarget=!0}}class ei extends ee{constructor(e=null,t=1,r=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:r,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ea{constructor(e=0,t=0,r=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=r,this._w=n}static slerpFlat(e,t,r,n,i,a,s){let o=r[n+0],l=r[n+1],h=r[n+2],u=r[n+3],c=i[a+0],d=i[a+1],p=i[a+2],f=i[a+3];if(0===s){e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(1===s){e[t+0]=c,e[t+1]=d,e[t+2]=p,e[t+3]=f;return}if(u!==f||o!==c||l!==d||h!==p){let e=1-s,t=o*c+l*d+h*p+u*f,r=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){let i=Math.sqrt(n),a=Math.atan2(i,t*r);e=Math.sin(e*a)/i,s=Math.sin(s*a)/i}let i=s*r;if(o=o*e+c*i,l=l*e+d*i,h=h*e+p*i,u=u*e+f*i,e===1-s){let e=1/Math.sqrt(o*o+l*l+h*h+u*u);o*=e,l*=e,h*=e,u*=e}}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,r,n,i,a){let s=r[n],o=r[n+1],l=r[n+2],h=r[n+3],u=i[a],c=i[a+1],d=i[a+2],p=i[a+3];return e[t]=s*p+h*u+o*d-l*c,e[t+1]=o*p+h*c+l*u-s*d,e[t+2]=l*p+h*d+s*c-o*u,e[t+3]=h*p-s*u-o*c-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){let r=e._x,n=e._y,i=e._z,a=e._order,s=Math.cos,o=Math.sin,l=s(r/2),h=s(n/2),u=s(i/2),c=o(r/2),d=o(n/2),p=o(i/2);switch(a){case"XYZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"YXZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"ZXY":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"ZYX":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"YZX":this._x=c*h*u+l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u-c*d*p;break;case"XZY":this._x=c*h*u-l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let r=t/2,n=Math.sin(r);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,r=t[0],n=t[4],i=t[8],a=t[1],s=t[5],o=t[9],l=t[2],h=t[6],u=t[10],c=r+s+u;if(c>0){let e=.5/Math.sqrt(c+1);this._w=.25/e,this._x=(h-o)*e,this._y=(i-l)*e,this._z=(a-n)*e}else if(r>s&&r>u){let e=2*Math.sqrt(1+r-s-u);this._w=(h-o)/e,this._x=.25*e,this._y=(n+a)/e,this._z=(i+l)/e}else if(s>u){let e=2*Math.sqrt(1+s-r-u);this._w=(i-l)/e,this._x=(n+a)/e,this._y=.25*e,this._z=(o+h)/e}else{let e=2*Math.sqrt(1+u-r-s);this._w=(a-n)/e,this._x=(i+l)/e,this._y=(o+h)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=r,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(A(this.dot(e),-1,1)))}rotateTowards(e,t){let r=this.angleTo(e);return 0===r||this.slerp(e,Math.min(1,t/r)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let r=e._x,n=e._y,i=e._z,a=e._w,s=t._x,o=t._y,l=t._z,h=t._w;return this._x=r*h+a*s+n*l-i*o,this._y=n*h+a*o+i*s-r*l,this._z=i*h+a*l+r*o-n*s,this._w=a*h-r*s-n*o-i*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let r=this._x,n=this._y,i=this._z,a=this._w,s=a*e._w+r*e._x+n*e._y+i*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=r,this._y=n,this._z=i,this;let o=1-s*s;if(o<=Number.EPSILON){let e=1-t;return this._w=e*a+t*this._w,this._x=e*r+t*this._x,this._y=e*n+t*this._y,this._z=e*i+t*this._z,this.normalize(),this._onChangeCallback(),this}let l=Math.sqrt(o),h=Math.atan2(l,s),u=Math.sin((1-t)*h)/l,c=Math.sin(t*h)/l;return this._w=a*u+this._w*c,this._x=r*u+this._x*c,this._y=n*u+this._y*c,this._z=i*u+this._z*c,this._onChangeCallback(),this}slerpQuaternions(e,t,r){return this.copy(e).slerp(t,r)}random(){let e=Math.random(),t=Math.sqrt(1-e),r=Math.sqrt(e),n=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(n),r*Math.sin(i),r*Math.cos(i),t*Math.sin(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class es{constructor(e=0,t=0,r=0){es.prototype.isVector3=!0,this.x=e,this.y=t,this.z=r}set(e,t,r){return void 0===r&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(el.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(el.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*n,this.y=i[1]*t+i[4]*r+i[7]*n,this.z=i[2]*t+i[5]*r+i[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,r=this.y,n=this.z,i=e.elements,a=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*a,this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*a,this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*a,this}applyQuaternion(e){let t=this.x,r=this.y,n=this.z,i=e.x,a=e.y,s=e.z,o=e.w,l=2*(a*n-s*r),h=2*(s*t-i*n),u=2*(i*r-a*t);return this.x=t+o*l+a*u-s*h,this.y=r+o*h+s*l-i*u,this.z=n+o*u+i*h-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n,this.y=i[1]*t+i[5]*r+i[9]*n,this.z=i[2]*t+i[6]*r+i[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let r=e.x,n=e.y,i=e.z,a=t.x,s=t.y,o=t.z;return this.x=n*o-i*s,this.y=i*a-r*o,this.z=r*s-n*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)}projectOnPlane(e){return eo.copy(this).projectOnVector(e),this.sub(eo)}reflect(e){return this.sub(eo.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());return 0===t?Math.PI/2:Math.acos(A(this.dot(e)/t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){let n=Math.sin(t)*e;return this.x=n*Math.sin(r),this.y=Math.cos(t)*e,this.z=n*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,r=Math.sqrt(1-e**2);return this.x=r*Math.cos(t),this.y=r*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let eo=new es,el=new ea;class eh{constructor(e=new es(1/0,1/0,1/0),t=new es(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t+=3)this.expandByPoint(ec.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,r=e.count;t<r;t++)this.expandByPoint(ec.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let r=ec.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let r=e.geometry;if(void 0!==r){let n=r.getAttribute("position");if(!0===t&&void 0!==n&&!0!==e.isInstancedMesh)for(let t=0,r=n.count;t<r;t++)!0===e.isMesh?e.getVertexPosition(t,ec):ec.fromBufferAttribute(n,t),ec.applyMatrix4(e.matrixWorld),this.expandByPoint(ec);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),ed.copy(e.boundingBox)):(null===r.boundingBox&&r.computeBoundingBox(),ed.copy(r.boundingBox)),ed.applyMatrix4(e.matrixWorld),this.union(ed)}let n=e.children;for(let e=0,r=n.length;e<r;e++)this.expandByObject(n[e],t);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ec),ec.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ex),ey.subVectors(this.max,ex),ep.subVectors(e.a,ex),ef.subVectors(e.b,ex),em.subVectors(e.c,ex),eg.subVectors(ef,ep),ev.subVectors(em,ef),e_.subVectors(ep,em);let t=[0,-eg.z,eg.y,0,-ev.z,ev.y,0,-e_.z,e_.y,eg.z,0,-eg.x,ev.z,0,-ev.x,e_.z,0,-e_.x,-eg.y,eg.x,0,-ev.y,ev.x,0,-e_.y,e_.x,0];return!!(eb(t,ep,ef,em,ey)&&eb(t=[1,0,0,0,1,0,0,0,1],ep,ef,em,ey))&&(eS.crossVectors(eg,ev),eb(t=[eS.x,eS.y,eS.z],ep,ef,em,ey))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ec).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(ec).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(eu[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),eu[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),eu[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),eu[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),eu[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),eu[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),eu[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),eu[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(eu)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}let eu=[new es,new es,new es,new es,new es,new es,new es,new es],ec=new es,ed=new eh,ep=new es,ef=new es,em=new es,eg=new es,ev=new es,e_=new es,ex=new es,ey=new es,eS=new es,eM=new es;function eb(e,t,r,n,i){for(let a=0,s=e.length-3;a<=s;a+=3){eM.fromArray(e,a);let s=i.x*Math.abs(eM.x)+i.y*Math.abs(eM.y)+i.z*Math.abs(eM.z),o=t.dot(eM),l=r.dot(eM),h=n.dot(eM);if(Math.max(-Math.max(o,l,h),Math.min(o,l,h))>s)return!1}return!0}let eE=new eh,eT=new es,ew=new es;class eA{constructor(e=new es,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let r=this.center;void 0!==t?r.copy(t):eE.setFromPoints(e).getCenter(r);let n=0;for(let t=0,i=e.length;t<i;t++)n=Math.max(n,r.distanceToSquared(e[t]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let r=this.center.distanceToSquared(e);return t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;eT.subVectors(e,this.center);let t=eT.lengthSq();if(t>this.radius*this.radius){let e=Math.sqrt(t),r=(e-this.radius)*.5;this.center.addScaledVector(eT,r/e),this.radius+=r}return this}union(e){return e.isEmpty()||(this.isEmpty()?this.copy(e):!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(ew.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(eT.copy(e.center).add(ew)),this.expandByPoint(eT.copy(e.center).sub(ew)))),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}let eR=new es,eC=new es,eU=new es,eP=new es,eL=new es,eD=new es,eI=new es;class eO{constructor(e=new es,t=new es(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,eR)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,r)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=eR.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(eR.copy(this.origin).addScaledVector(this.direction,t),eR.distanceToSquared(e))}distanceSqToSegment(e,t,r,n){let i,a,s,o;eC.copy(e).add(t).multiplyScalar(.5),eU.copy(t).sub(e).normalize(),eP.copy(this.origin).sub(eC);let l=.5*e.distanceTo(t),h=-this.direction.dot(eU),u=eP.dot(this.direction),c=-eP.dot(eU),d=eP.lengthSq(),p=Math.abs(1-h*h);if(p>0){if(i=h*c-u,a=h*u-c,o=l*p,i>=0){if(a>=-o){if(a<=o){let e=1/p;i*=e,a*=e,s=i*(i+h*a+2*u)+a*(h*i+a+2*c)+d}else s=-(i=Math.max(0,-(h*(a=l)+u)))*i+a*(a+2*c)+d}else s=-(i=Math.max(0,-(h*(a=-l)+u)))*i+a*(a+2*c)+d}else a<=-o?(a=(i=Math.max(0,-(-h*l+u)))>0?-l:Math.min(Math.max(-l,-c),l),s=-i*i+a*(a+2*c)+d):a<=o?(i=0,s=(a=Math.min(Math.max(-l,-c),l))*(a+2*c)+d):(a=(i=Math.max(0,-(h*l+u)))>0?l:Math.min(Math.max(-l,-c),l),s=-i*i+a*(a+2*c)+d)}else a=h>0?-l:l,s=-(i=Math.max(0,-(h*a+u)))*i+a*(a+2*c)+d;return r&&r.copy(this.origin).addScaledVector(this.direction,i),n&&n.copy(eC).addScaledVector(eU,a),s}intersectSphere(e,t){eR.subVectors(e.center,this.origin);let r=eR.dot(this.direction),n=eR.dot(eR)-r*r,i=e.radius*e.radius;if(n>i)return null;let a=Math.sqrt(i-n),s=r-a,o=r+a;return o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null}intersectPlane(e,t){let r=this.distanceToPlane(e);return null===r?null:this.at(r,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);return!!(0===t||e.normal.dot(this.direction)*t<0)}intersectBox(e,t){let r,n,i,a,s,o;let l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,c=this.origin;return(l>=0?(r=(e.min.x-c.x)*l,n=(e.max.x-c.x)*l):(r=(e.max.x-c.x)*l,n=(e.min.x-c.x)*l),h>=0?(i=(e.min.y-c.y)*h,a=(e.max.y-c.y)*h):(i=(e.max.y-c.y)*h,a=(e.min.y-c.y)*h),r>a||i>n)?null:((i>r||isNaN(r))&&(r=i),(a<n||isNaN(n))&&(n=a),u>=0?(s=(e.min.z-c.z)*u,o=(e.max.z-c.z)*u):(s=(e.max.z-c.z)*u,o=(e.min.z-c.z)*u),r>o||s>n)?null:((s>r||r!=r)&&(r=s),(o<n||n!=n)&&(n=o),n<0)?null:this.at(r>=0?r:n,t)}intersectsBox(e){return null!==this.intersectBox(e,eR)}intersectTriangle(e,t,r,n,i){let a;eL.subVectors(t,e),eD.subVectors(r,e),eI.crossVectors(eL,eD);let s=this.direction.dot(eI);if(s>0){if(n)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}eP.subVectors(this.origin,e);let o=a*this.direction.dot(eD.crossVectors(eP,eD));if(o<0)return null;let l=a*this.direction.dot(eL.cross(eP));if(l<0||o+l>s)return null;let h=-a*eP.dot(eI);return h<0?null:this.at(h/s,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class eN{constructor(e,t,r,n,i,a,s,o,l,h,u,c,d,p,f,m){eN.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,r,n,i,a,s,o,l,h,u,c,d,p,f,m)}set(e,t,r,n,i,a,s,o,l,h,u,c,d,p,f,m){let g=this.elements;return g[0]=e,g[4]=t,g[8]=r,g[12]=n,g[1]=i,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=u,g[14]=c,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new eN().fromArray(this.elements)}copy(e){let t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this}copyPosition(e){let t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,r=e.elements,n=1/eF.setFromMatrixColumn(e,0).length(),i=1/eF.setFromMatrixColumn(e,1).length(),a=1/eF.setFromMatrixColumn(e,2).length();return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*a,t[9]=r[9]*a,t[10]=r[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,r=e.x,n=e.y,i=e.z,a=Math.cos(r),s=Math.sin(r),o=Math.cos(n),l=Math.sin(n),h=Math.cos(i),u=Math.sin(i);if("XYZ"===e.order){let e=a*h,r=a*u,n=s*h,i=s*u;t[0]=o*h,t[4]=-o*u,t[8]=l,t[1]=r+n*l,t[5]=e-i*l,t[9]=-s*o,t[2]=i-e*l,t[6]=n+r*l,t[10]=a*o}else if("YXZ"===e.order){let e=o*h,r=o*u,n=l*h,i=l*u;t[0]=e+i*s,t[4]=n*s-r,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-s,t[2]=r*s-n,t[6]=i+e*s,t[10]=a*o}else if("ZXY"===e.order){let e=o*h,r=o*u,n=l*h,i=l*u;t[0]=e-i*s,t[4]=-a*u,t[8]=n+r*s,t[1]=r+n*s,t[5]=a*h,t[9]=i-e*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){let e=a*h,r=a*u,n=s*h,i=s*u;t[0]=o*h,t[4]=n*l-r,t[8]=e*l+i,t[1]=o*u,t[5]=i*l+e,t[9]=r*l-n,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){let e=a*o,r=a*l,n=s*o,i=s*l;t[0]=o*h,t[4]=i-e*u,t[8]=n*u+r,t[1]=u,t[5]=a*h,t[9]=-s*h,t[2]=-l*h,t[6]=r*u+n,t[10]=e-i*u}else if("XZY"===e.order){let e=a*o,r=a*l,n=s*o,i=s*l;t[0]=o*h,t[4]=-u,t[8]=l*h,t[1]=e*u+i,t[5]=a*h,t[9]=r*u-n,t[2]=n*u-r,t[6]=s*h,t[10]=i*u+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ez,e,ek)}lookAt(e,t,r){let n=this.elements;return eH.subVectors(e,t),0===eH.lengthSq()&&(eH.z=1),eH.normalize(),eG.crossVectors(r,eH),0===eG.lengthSq()&&(1===Math.abs(r.z)?eH.x+=1e-4:eH.z+=1e-4,eH.normalize(),eG.crossVectors(r,eH)),eG.normalize(),eV.crossVectors(eH,eG),n[0]=eG.x,n[4]=eV.x,n[8]=eH.x,n[1]=eG.y,n[5]=eV.y,n[9]=eH.y,n[2]=eG.z,n[6]=eV.z,n[10]=eH.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let r=e.elements,n=t.elements,i=this.elements,a=r[0],s=r[4],o=r[8],l=r[12],h=r[1],u=r[5],c=r[9],d=r[13],p=r[2],f=r[6],m=r[10],g=r[14],v=r[3],_=r[7],x=r[11],y=r[15],S=n[0],M=n[4],b=n[8],E=n[12],T=n[1],w=n[5],A=n[9],R=n[13],C=n[2],U=n[6],P=n[10],L=n[14],D=n[3],I=n[7],O=n[11],N=n[15];return i[0]=a*S+s*T+o*C+l*D,i[4]=a*M+s*w+o*U+l*I,i[8]=a*b+s*A+o*P+l*O,i[12]=a*E+s*R+o*L+l*N,i[1]=h*S+u*T+c*C+d*D,i[5]=h*M+u*w+c*U+d*I,i[9]=h*b+u*A+c*P+d*O,i[13]=h*E+u*R+c*L+d*N,i[2]=p*S+f*T+m*C+g*D,i[6]=p*M+f*w+m*U+g*I,i[10]=p*b+f*A+m*P+g*O,i[14]=p*E+f*R+m*L+g*N,i[3]=v*S+_*T+x*C+y*D,i[7]=v*M+_*w+x*U+y*I,i[11]=v*b+_*A+x*P+y*O,i[15]=v*E+_*R+x*L+y*N,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],u=e[6],c=e[10],d=e[14],p=e[3];return p*(+i*o*u-n*l*u-i*s*c+r*l*c+n*s*d-r*o*d)+e[7]*(+t*o*d-t*l*c+i*a*c-n*a*d+n*l*h-i*o*h)+e[11]*(+t*l*u-t*s*d-i*a*u+r*a*d+i*s*h-r*l*h)+e[15]*(-n*s*h-t*o*u+t*s*c+n*a*u-r*a*c+r*o*h)}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(e,t,r){let n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=r),this}invert(){let e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],u=e[9],c=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],v=u*m*l-f*c*l+f*o*d-s*m*d-u*o*g+s*c*g,_=p*c*l-h*m*l-p*o*d+a*m*d+h*o*g-a*c*g,x=h*f*l-p*u*l+p*s*d-a*f*d-h*s*g+a*u*g,y=p*u*o-h*f*o-p*s*c+a*f*c+h*s*m-a*u*m,S=t*v+r*_+n*x+i*y;if(0===S)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let M=1/S;return e[0]=v*M,e[1]=(f*c*i-u*m*i-f*n*d+r*m*d+u*n*g-r*c*g)*M,e[2]=(s*m*i-f*o*i+f*n*l-r*m*l-s*n*g+r*o*g)*M,e[3]=(u*o*i-s*c*i-u*n*l+r*c*l+s*n*d-r*o*d)*M,e[4]=_*M,e[5]=(h*m*i-p*c*i+p*n*d-t*m*d-h*n*g+t*c*g)*M,e[6]=(p*o*i-a*m*i-p*n*l+t*m*l+a*n*g-t*o*g)*M,e[7]=(a*c*i-h*o*i+h*n*l-t*c*l-a*n*d+t*o*d)*M,e[8]=x*M,e[9]=(p*u*i-h*f*i-p*r*d+t*f*d+h*r*g-t*u*g)*M,e[10]=(a*f*i-p*s*i+p*r*l-t*f*l-a*r*g+t*s*g)*M,e[11]=(h*s*i-a*u*i-h*r*l+t*u*l+a*r*d-t*s*d)*M,e[12]=y*M,e[13]=(h*f*n-p*u*n+p*r*c-t*f*c-h*r*m+t*u*m)*M,e[14]=(p*s*n-a*f*n-p*r*o+t*f*o+a*r*m-t*s*m)*M,e[15]=(a*u*n-h*s*n+h*r*o-t*u*o-a*r*c+t*s*c)*M,this}scale(e){let t=this.elements,r=e.x,n=e.y,i=e.z;return t[0]*=r,t[4]*=n,t[8]*=i,t[1]*=r,t[5]*=n,t[9]*=i,t[2]*=r,t[6]*=n,t[10]*=i,t[3]*=r,t[7]*=n,t[11]*=i,this}getMaxScaleOnAxis(){let e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,r){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let r=Math.cos(t),n=Math.sin(t),i=1-r,a=e.x,s=e.y,o=e.z,l=i*a,h=i*s;return this.set(l*a+r,l*s-n*o,l*o+n*s,0,l*s+n*o,h*s+r,h*o-n*a,0,l*o-n*s,h*o+n*a,i*o*o+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,n,i,a){return this.set(1,r,i,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,r){let n=this.elements,i=t._x,a=t._y,s=t._z,o=t._w,l=i+i,h=a+a,u=s+s,c=i*l,d=i*h,p=i*u,f=a*h,m=a*u,g=s*u,v=o*l,_=o*h,x=o*u,y=r.x,S=r.y,M=r.z;return n[0]=(1-(f+g))*y,n[1]=(d+x)*y,n[2]=(p-_)*y,n[3]=0,n[4]=(d-x)*S,n[5]=(1-(c+g))*S,n[6]=(m+v)*S,n[7]=0,n[8]=(p+_)*M,n[9]=(m-v)*M,n[10]=(1-(c+f))*M,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,r){let n=this.elements,i=eF.set(n[0],n[1],n[2]).length(),a=eF.set(n[4],n[5],n[6]).length(),s=eF.set(n[8],n[9],n[10]).length();0>this.determinant()&&(i=-i),e.x=n[12],e.y=n[13],e.z=n[14],eB.copy(this);let o=1/i,l=1/a,h=1/s;return eB.elements[0]*=o,eB.elements[1]*=o,eB.elements[2]*=o,eB.elements[4]*=l,eB.elements[5]*=l,eB.elements[6]*=l,eB.elements[8]*=h,eB.elements[9]*=h,eB.elements[10]*=h,t.setFromRotationMatrix(eB),r.x=i,r.y=a,r.z=s,this}makePerspective(e,t,r,n,i,a,s=2e3){let o,l;let h=this.elements;if(2e3===s)o=-(a+i)/(a-i),l=-2*a*i/(a-i);else if(2001===s)o=-a/(a-i),l=-a*i/(a-i);else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+s);return h[0]=2*i/(t-e),h[4]=0,h[8]=(t+e)/(t-e),h[12]=0,h[1]=0,h[5]=2*i/(r-n),h[9]=(r+n)/(r-n),h[13]=0,h[2]=0,h[6]=0,h[10]=o,h[14]=l,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(e,t,r,n,i,a,s=2e3){let o,l;let h=this.elements,u=1/(t-e),c=1/(r-n),d=1/(a-i);if(2e3===s)o=(a+i)*d,l=-2*d;else if(2001===s)o=i*d,l=-1*d;else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+s);return h[0]=2*u,h[4]=0,h[8]=0,h[12]=-((t+e)*u),h[1]=0,h[5]=2*c,h[9]=0,h[13]=-((r+n)*c),h[2]=0,h[6]=0,h[10]=l,h[14]=-o,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(e){let t=this.elements,r=e.elements;for(let e=0;e<16;e++)if(t[e]!==r[e])return!1;return!0}fromArray(e,t=0){for(let r=0;r<16;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){let r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}let eF=new es,eB=new eN,ez=new es(0,0,0),ek=new es(1,1,1),eG=new es,eV=new es,eH=new es,eW=new eN,ej=new ea;class eX{constructor(e=0,t=0,r=0,n=eX.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=r,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,n=this._order){return this._x=e,this._y=t,this._z=r,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,r=!0){let n=e.elements,i=n[0],a=n[4],s=n[8],o=n[1],l=n[5],h=n[9],u=n[2],c=n[6],d=n[10];switch(t){case"XYZ":this._y=Math.asin(A(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(c,l),this._z=0);break;case"YXZ":this._x=Math.asin(-A(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,i),this._z=0);break;case"ZXY":this._x=Math.asin(A(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,i));break;case"ZYX":this._y=Math.asin(-A(u,-1,1)),.9999999>Math.abs(u)?(this._x=Math.atan2(c,d),this._z=Math.atan2(o,i)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(A(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,i)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-A(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(c,l),this._y=Math.atan2(s,i)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===r&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return eW.makeRotationFromQuaternion(e),this.setFromRotationMatrix(eW,t,r)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ej.setFromEuler(this),this.setFromQuaternion(ej,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}eX.DEFAULT_ORDER="XYZ";class eq{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let eY=0,eZ=new es,eJ=new ea,eK=new eN,e$=new es,eQ=new es,e0=new es,e1=new ea,e2=new es(1,0,0),e3=new es(0,1,0),e4=new es(0,0,1),e5={type:"added"},e6={type:"removed"};class e8 extends S{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:eY++}),this.uuid=w(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=e8.DEFAULT_UP.clone();let e=new es,t=new eX,r=new ea,n=new es(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new eN},normalMatrix:{value:new N}}),this.matrix=new eN,this.matrixWorld=new eN,this.matrixAutoUpdate=e8.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=e8.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new eq,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return eJ.setFromAxisAngle(e,t),this.quaternion.multiply(eJ),this}rotateOnWorldAxis(e,t){return eJ.setFromAxisAngle(e,t),this.quaternion.premultiply(eJ),this}rotateX(e){return this.rotateOnAxis(e2,e)}rotateY(e){return this.rotateOnAxis(e3,e)}rotateZ(e){return this.rotateOnAxis(e4,e)}translateOnAxis(e,t){return eZ.copy(e).applyQuaternion(this.quaternion),this.position.add(eZ.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(e2,e)}translateY(e){return this.translateOnAxis(e3,e)}translateZ(e){return this.translateOnAxis(e4,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(eK.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?e$.copy(e):e$.set(e,t,r);let n=this.parent;this.updateWorldMatrix(!0,!1),eQ.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?eK.lookAt(eQ,e$,this.up):eK.lookAt(e$,eQ,this.up),this.quaternion.setFromRotationMatrix(eK),n&&(eK.extractRotation(n.matrixWorld),eJ.setFromRotationMatrix(eK),this.quaternion.premultiply(eJ.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(e5)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}let t=this.children.indexOf(e);return -1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(e6)),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),eK.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),eK.multiply(e.parent.matrixWorld)),e.applyMatrix4(eK),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let r=0,n=this.children.length;r<n;r++){let n=this.children[r].getObjectByProperty(e,t);if(void 0!==n)return n}}getObjectsByProperty(e,t){let r=[];this[e]===t&&r.push(this);for(let n=0,i=this.children.length;n<i;n++){let i=this.children[n].getObjectsByProperty(e,t);i.length>0&&(r=r.concat(i))}return r}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eQ,e,e0),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eQ,e1,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let r=0,n=t.length;r<n;r++){let n=t[r];(!0===n.matrixWorldAutoUpdate||!0===e)&&n.updateMatrixWorld(e)}}updateWorldMatrix(e,t){let r=this.parent;if(!0===e&&null!==r&&!0===r.matrixWorldAutoUpdate&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let e=this.children;for(let t=0,r=e.length;t<r;t++){let r=e[t];!0===r.matrixWorldAutoUpdate&&r.updateWorldMatrix(!1,!0)}}}toJSON(e){let t=void 0===e||"string"==typeof e,r={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},r.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});let n={};function i(t,r){return void 0===t[r.uuid]&&(t[r.uuid]=r.toJSON(e)),r.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=i(e.geometries,this.geometry);let t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){let r=t.shapes;if(Array.isArray(r))for(let t=0,n=r.length;t<n;t++){let n=r[t];i(e.shapes,n)}else i(e.shapes,r)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let t=[];for(let r=0,n=this.material.length;r<n;r++)t.push(i(e.materials,this.material[r]));n.material=t}else n.material=i(e.materials,this.material)}if(this.children.length>0){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let t=0;t<this.animations.length;t++){let r=this.animations[t];n.animations.push(i(e.animations,r))}}if(t){let t=a(e.geometries),n=a(e.materials),i=a(e.textures),s=a(e.images),o=a(e.shapes),l=a(e.skeletons),h=a(e.animations),u=a(e.nodes);t.length>0&&(r.geometries=t),n.length>0&&(r.materials=n),i.length>0&&(r.textures=i),s.length>0&&(r.images=s),o.length>0&&(r.shapes=o),l.length>0&&(r.skeletons=l),h.length>0&&(r.animations=h),u.length>0&&(r.nodes=u)}return r.object=n,r;function a(e){let t=[];for(let r in e){let n=e[r];delete n.metadata,t.push(n)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){let r=e.children[t];this.add(r.clone())}return this}}e8.DEFAULT_UP=new es(0,1,0),e8.DEFAULT_MATRIX_AUTO_UPDATE=!0,e8.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;let e7=new es,e9=new es,te=new es,tt=new es,tr=new es,tn=new es,ti=new es,ta=new es,ts=new es,to=new es,tl=!1;class th{constructor(e=new es,t=new es,r=new es){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,n){n.subVectors(r,t),e7.subVectors(e,t),n.cross(e7);let i=n.lengthSq();return i>0?n.multiplyScalar(1/Math.sqrt(i)):n.set(0,0,0)}static getBarycoord(e,t,r,n,i){e7.subVectors(n,t),e9.subVectors(r,t),te.subVectors(e,t);let a=e7.dot(e7),s=e7.dot(e9),o=e7.dot(te),l=e9.dot(e9),h=e9.dot(te),u=a*l-s*s;if(0===u)return i.set(-2,-1,-1);let c=1/u,d=(l*o-s*h)*c,p=(a*h-s*o)*c;return i.set(1-d-p,p,d)}static containsPoint(e,t,r,n){return this.getBarycoord(e,t,r,n,tt),tt.x>=0&&tt.y>=0&&tt.x+tt.y<=1}static getUV(e,t,r,n,i,a,s,o){return!1===tl&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),tl=!0),this.getInterpolation(e,t,r,n,i,a,s,o)}static getInterpolation(e,t,r,n,i,a,s,o){return this.getBarycoord(e,t,r,n,tt),o.setScalar(0),o.addScaledVector(i,tt.x),o.addScaledVector(a,tt.y),o.addScaledVector(s,tt.z),o}static isFrontFacing(e,t,r,n){return e7.subVectors(r,t),e9.subVectors(e,t),0>e7.cross(e9).dot(n)}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,r,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,r),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return e7.subVectors(this.c,this.b),e9.subVectors(this.a,this.b),.5*e7.cross(e9).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return th.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return th.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,n,i){return!1===tl&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),tl=!0),th.getInterpolation(e,this.a,this.b,this.c,t,r,n,i)}getInterpolation(e,t,r,n,i){return th.getInterpolation(e,this.a,this.b,this.c,t,r,n,i)}containsPoint(e){return th.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return th.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let r,n;let i=this.a,a=this.b,s=this.c;tr.subVectors(a,i),tn.subVectors(s,i),ta.subVectors(e,i);let o=tr.dot(ta),l=tn.dot(ta);if(o<=0&&l<=0)return t.copy(i);ts.subVectors(e,a);let h=tr.dot(ts),u=tn.dot(ts);if(h>=0&&u<=h)return t.copy(a);let c=o*u-h*l;if(c<=0&&o>=0&&h<=0)return r=o/(o-h),t.copy(i).addScaledVector(tr,r);to.subVectors(e,s);let d=tr.dot(to),p=tn.dot(to);if(p>=0&&d<=p)return t.copy(s);let f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return n=l/(l-p),t.copy(i).addScaledVector(tn,n);let m=h*p-d*u;if(m<=0&&u-h>=0&&d-p>=0)return ti.subVectors(s,a),n=(u-h)/(u-h+(d-p)),t.copy(a).addScaledVector(ti,n);let g=1/(m+f+c);return r=f*g,n=c*g,t.copy(i).addScaledVector(tr,r).addScaledVector(tn,n)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let tu={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},tc={h:0,s:0,l:0},td={h:0,s:0,l:0};function tp(e,t,r){return(r<0&&(r+=1),r>1&&(r-=1),r<1/6)?e+(t-e)*6*r:r<.5?t:r<2/3?e+(t-e)*6*(2/3-r):e}class tf{constructor(e,t,r){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,r)}set(e,t,r){return void 0===t&&void 0===r?e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e):this.setRGB(e,t,r),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=p){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,X.toWorkingColorSpace(this,t),this}setRGB(e,t,r,n=X.workingColorSpace){return this.r=e,this.g=t,this.b=r,X.toWorkingColorSpace(this,n),this}setHSL(e,t,r,n=X.workingColorSpace){if(e=R(e,1),t=A(t,0,1),r=A(r,0,1),0===t)this.r=this.g=this.b=r;else{let n=r<=.5?r*(1+t):r+t-r*t,i=2*r-n;this.r=tp(i,n,e+1/3),this.g=tp(i,n,e),this.b=tp(i,n,e-1/3)}return X.toWorkingColorSpace(this,n),this}setStyle(e,t=p){let r;function n(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let i;let a=r[1],s=r[2];switch(a){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(i[4]),this.setRGB(Math.min(255,parseInt(i[1],10))/255,Math.min(255,parseInt(i[2],10))/255,Math.min(255,parseInt(i[3],10))/255,t);if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(i[4]),this.setRGB(Math.min(100,parseInt(i[1],10))/100,Math.min(100,parseInt(i[2],10))/100,Math.min(100,parseInt(i[3],10))/100,t);break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(i[4]),this.setHSL(parseFloat(i[1])/360,parseFloat(i[2])/100,parseFloat(i[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){let n=r[1],i=n.length;if(3===i)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,t);if(6===i)return this.setHex(parseInt(n,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=p){let r=tu[e.toLowerCase()];return void 0!==r?this.setHex(r,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=q(e.r),this.g=q(e.g),this.b=q(e.b),this}copyLinearToSRGB(e){return this.r=Y(e.r),this.g=Y(e.g),this.b=Y(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=p){return X.fromWorkingColorSpace(tm.copy(this),e),65536*Math.round(A(255*tm.r,0,255))+256*Math.round(A(255*tm.g,0,255))+Math.round(A(255*tm.b,0,255))}getHexString(e=p){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=X.workingColorSpace){let r,n;X.fromWorkingColorSpace(tm.copy(this),t);let i=tm.r,a=tm.g,s=tm.b,o=Math.max(i,a,s),l=Math.min(i,a,s),h=(l+o)/2;if(l===o)r=0,n=0;else{let e=o-l;switch(n=h<=.5?e/(o+l):e/(2-o-l),o){case i:r=(a-s)/e+(a<s?6:0);break;case a:r=(s-i)/e+2;break;case s:r=(i-a)/e+4}r/=6}return e.h=r,e.s=n,e.l=h,e}getRGB(e,t=X.workingColorSpace){return X.fromWorkingColorSpace(tm.copy(this),t),e.r=tm.r,e.g=tm.g,e.b=tm.b,e}getStyle(e=p){X.fromWorkingColorSpace(tm.copy(this),e);let t=tm.r,r=tm.g,n=tm.b;return e!==p?`color(${e} ${t.toFixed(3)} ${r.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*r)},${Math.round(255*n)})`}offsetHSL(e,t,r){return this.getHSL(tc),this.setHSL(tc.h+e,tc.s+t,tc.l+r)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(tc),e.getHSL(td);let r=C(tc.h,td.h,t),n=C(tc.s,td.s,t),i=C(tc.l,td.l,t);return this.setHSL(r,n,i),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){let t=this.r,r=this.g,n=this.b,i=e.elements;return this.r=i[0]*t+i[3]*r+i[6]*n,this.g=i[1]*t+i[4]*r+i[7]*n,this.b=i[2]*t+i[5]*r+i[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let tm=new tf;tf.NAMES=tu;let tg=0;class tv extends S{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:tg++}),this.uuid=w(),this.name="",this.type="Material",this.blending=1,this.side=l,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new tf(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let r=e[t];if(void 0===r){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}let n=this[t];if(void 0===n){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(r):n&&n.isVector3&&r&&r.isVector3?n.copy(r):this[t]=r}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let r={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function n(e){let t=[];for(let r in e){let n=e[r];delete n.metadata,t.push(n)}return t}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),void 0!==this.sheen&&(r.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(r.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(r.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(r.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(r.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(r.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(r.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(r.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(r.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(r.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(r.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(r.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(r.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(r.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(r.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(r.combine=this.combine)),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(r.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(r.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(r.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(r.size=this.size),null!==this.shadowSide&&(r.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(r.blending=this.blending),this.side!==l&&(r.side=this.side),!0===this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=!0),204!==this.blendSrc&&(r.blendSrc=this.blendSrc),205!==this.blendDst&&(r.blendDst=this.blendDst),100!==this.blendEquation&&(r.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(r.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(r.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(r.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(r.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(r.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(r.depthFunc=this.depthFunc),!1===this.depthTest&&(r.depthTest=this.depthTest),!1===this.depthWrite&&(r.depthWrite=this.depthWrite),!1===this.colorWrite&&(r.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(r.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(r.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(r.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(r.stencilFuncMask=this.stencilFuncMask),7680!==this.stencilFail&&(r.stencilFail=this.stencilFail),7680!==this.stencilZFail&&(r.stencilZFail=this.stencilZFail),7680!==this.stencilZPass&&(r.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(r.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.alphaHash&&(r.alphaHash=!0),!0===this.alphaToCoverage&&(r.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=!0),!0===this.forceSinglePass&&(r.forceSinglePass=!0),!0===this.wireframe&&(r.wireframe=!0),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(r.flatShading=!0),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),!1===this.fog&&(r.fog=!1),Object.keys(this.userData).length>0&&(r.userData=this.userData),t){let t=n(e.textures),i=n(e.images);t.length>0&&(r.textures=t),i.length>0&&(r.images=i)}return r}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,r=null;if(null!==t){let e=t.length;r=Array(e);for(let n=0;n!==e;++n)r[n]=t[n].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class t_ extends tv{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new tf(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}let tx=new es,ty=new O;class tS{constructor(e,t,r=!1){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=r,this.usage=35044,this.updateRange={offset:0,count:-1},this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let n=0,i=this.itemSize;n<i;n++)this.array[e+n]=t.array[r+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,r=this.count;t<r;t++)ty.fromBufferAttribute(this,t),ty.applyMatrix3(e),this.setXY(t,ty.x,ty.y);else if(3===this.itemSize)for(let t=0,r=this.count;t<r;t++)tx.fromBufferAttribute(this,t),tx.applyMatrix3(e),this.setXYZ(t,tx.x,tx.y,tx.z);return this}applyMatrix4(e){for(let t=0,r=this.count;t<r;t++)tx.fromBufferAttribute(this,t),tx.applyMatrix4(e),this.setXYZ(t,tx.x,tx.y,tx.z);return this}applyNormalMatrix(e){for(let t=0,r=this.count;t<r;t++)tx.fromBufferAttribute(this,t),tx.applyNormalMatrix(e),this.setXYZ(t,tx.x,tx.y,tx.z);return this}transformDirection(e){for(let t=0,r=this.count;t<r;t++)tx.fromBufferAttribute(this,t),tx.transformDirection(e),this.setXYZ(t,tx.x,tx.y,tx.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let r=this.array[e*this.itemSize+t];return this.normalized&&(r=L(r,this.array)),r}setComponent(e,t,r){return this.normalized&&(r=D(r,this.array)),this.array[e*this.itemSize+t]=r,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=L(t,this.array)),t}setX(e,t){return this.normalized&&(t=D(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=L(t,this.array)),t}setY(e,t){return this.normalized&&(t=D(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=L(t,this.array)),t}setZ(e,t){return this.normalized&&(t=D(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=L(t,this.array)),t}setW(e,t){return this.normalized&&(t=D(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.normalized&&(t=D(t,this.array),r=D(r,this.array)),this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,n){return e*=this.itemSize,this.normalized&&(t=D(t,this.array),r=D(r,this.array),n=D(n,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this}setXYZW(e,t,r,n,i){return e*=this.itemSize,this.normalized&&(t=D(t,this.array),r=D(r,this.array),n=D(n,this.array),i=D(i,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}class tM extends tS{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class tb extends tS{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class tE extends tS{constructor(e,t,r){super(new Float32Array(e),t,r)}}let tT=0,tw=new eN,tA=new e8,tR=new es,tC=new eh,tU=new eh,tP=new es;class tL extends S{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:tT++}),this.uuid=w(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(B(e)?tb:tM)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let r=this.attributes.normal;if(void 0!==r){let t=new N().getNormalMatrix(e);r.applyNormalMatrix(t),r.needsUpdate=!0}let n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return tw.makeRotationFromQuaternion(e),this.applyMatrix4(tw),this}rotateX(e){return tw.makeRotationX(e),this.applyMatrix4(tw),this}rotateY(e){return tw.makeRotationY(e),this.applyMatrix4(tw),this}rotateZ(e){return tw.makeRotationZ(e),this.applyMatrix4(tw),this}translate(e,t,r){return tw.makeTranslation(e,t,r),this.applyMatrix4(tw),this}scale(e,t,r){return tw.makeScale(e,t,r),this.applyMatrix4(tw),this}lookAt(e){return tA.lookAt(e),tA.updateMatrix(),this.applyMatrix4(tA.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(tR).negate(),this.translate(tR.x,tR.y,tR.z),this}setFromPoints(e){let t=[];for(let r=0,n=e.length;r<n;r++){let n=e[r];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new tE(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new eh);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new es(-1/0,-1/0,-1/0),new es(1/0,1/0,1/0));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){let r=t[e];tC.setFromBufferAttribute(r),this.morphTargetsRelative?(tP.addVectors(this.boundingBox.min,tC.min),this.boundingBox.expandByPoint(tP),tP.addVectors(this.boundingBox.max,tC.max),this.boundingBox.expandByPoint(tP)):(this.boundingBox.expandByPoint(tC.min),this.boundingBox.expandByPoint(tC.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new eA);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new es,1/0);return}if(e){let r=this.boundingSphere.center;if(tC.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){let r=t[e];tU.setFromBufferAttribute(r),this.morphTargetsRelative?(tP.addVectors(tC.min,tU.min),tC.expandByPoint(tP),tP.addVectors(tC.max,tU.max),tC.expandByPoint(tP)):(tC.expandByPoint(tU.min),tC.expandByPoint(tU.max))}tC.getCenter(r);let n=0;for(let t=0,i=e.count;t<i;t++)tP.fromBufferAttribute(e,t),n=Math.max(n,r.distanceToSquared(tP));if(t)for(let i=0,a=t.length;i<a;i++){let a=t[i],s=this.morphTargetsRelative;for(let t=0,i=a.count;t<i;t++)tP.fromBufferAttribute(a,t),s&&(tR.fromBufferAttribute(e,t),tP.add(tR)),n=Math.max(n,r.distanceToSquared(tP))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let r=e.array,n=t.position.array,i=t.normal.array,a=t.uv.array,s=n.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new tS(new Float32Array(4*s),4));let o=this.getAttribute("tangent").array,l=[],h=[];for(let e=0;e<s;e++)l[e]=new es,h[e]=new es;let u=new es,c=new es,d=new es,p=new O,f=new O,m=new O,g=new es,v=new es,_=this.groups;0===_.length&&(_=[{start:0,count:r.length}]);for(let e=0,t=_.length;e<t;++e){let t=_[e],i=t.start,s=t.count;for(let e=i,t=i+s;e<t;e+=3)!function(e,t,r){u.fromArray(n,3*e),c.fromArray(n,3*t),d.fromArray(n,3*r),p.fromArray(a,2*e),f.fromArray(a,2*t),m.fromArray(a,2*r),c.sub(u),d.sub(u),f.sub(p),m.sub(p);let i=1/(f.x*m.y-m.x*f.y);isFinite(i)&&(g.copy(c).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(i),v.copy(d).multiplyScalar(f.x).addScaledVector(c,-m.x).multiplyScalar(i),l[e].add(g),l[t].add(g),l[r].add(g),h[e].add(v),h[t].add(v),h[r].add(v))}(r[e+0],r[e+1],r[e+2])}let x=new es,y=new es,S=new es,M=new es;function b(e){S.fromArray(i,3*e),M.copy(S);let t=l[e];x.copy(t),x.sub(S.multiplyScalar(S.dot(t))).normalize(),y.crossVectors(M,t);let r=y.dot(h[e]);o[4*e]=x.x,o[4*e+1]=x.y,o[4*e+2]=x.z,o[4*e+3]=r<0?-1:1}for(let e=0,t=_.length;e<t;++e){let t=_[e],n=t.start,i=t.count;for(let e=n,t=n+i;e<t;e+=3)b(r[e+0]),b(r[e+1]),b(r[e+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let r=this.getAttribute("normal");if(void 0===r)r=new tS(new Float32Array(3*t.count),3),this.setAttribute("normal",r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);let n=new es,i=new es,a=new es,s=new es,o=new es,l=new es,h=new es,u=new es;if(e)for(let c=0,d=e.count;c<d;c+=3){let d=e.getX(c+0),p=e.getX(c+1),f=e.getX(c+2);n.fromBufferAttribute(t,d),i.fromBufferAttribute(t,p),a.fromBufferAttribute(t,f),h.subVectors(a,i),u.subVectors(n,i),h.cross(u),s.fromBufferAttribute(r,d),o.fromBufferAttribute(r,p),l.fromBufferAttribute(r,f),s.add(h),o.add(h),l.add(h),r.setXYZ(d,s.x,s.y,s.z),r.setXYZ(p,o.x,o.y,o.z),r.setXYZ(f,l.x,l.y,l.z)}else for(let e=0,s=t.count;e<s;e+=3)n.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),h.subVectors(a,i),u.subVectors(n,i),h.cross(u),r.setXYZ(e+0,h.x,h.y,h.z),r.setXYZ(e+1,h.x,h.y,h.z),r.setXYZ(e+2,h.x,h.y,h.z);this.normalizeNormals(),r.needsUpdate=!0}}normalizeNormals(){let e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)tP.fromBufferAttribute(e,t),tP.normalize(),e.setXYZ(t,tP.x,tP.y,tP.z)}toNonIndexed(){function e(e,t){let r=e.array,n=e.itemSize,i=e.normalized,a=new r.constructor(t.length*n),s=0,o=0;for(let i=0,l=t.length;i<l;i++){s=e.isInterleavedBufferAttribute?t[i]*e.data.stride+e.offset:t[i]*n;for(let e=0;e<n;e++)a[o++]=r[s++]}return new tS(a,n,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new tL,r=this.index.array,n=this.attributes;for(let i in n){let a=e(n[i],r);t.setAttribute(i,a)}let i=this.morphAttributes;for(let n in i){let a=[],s=i[n];for(let t=0,n=s.length;t<n;t++){let n=e(s[t],r);a.push(n)}t.morphAttributes[n]=a}t.morphTargetsRelative=this.morphTargetsRelative;let a=this.groups;for(let e=0,r=a.length;e<r;e++){let r=a[e];t.addGroup(r.start,r.count,r.materialIndex)}return t}toJSON(){let e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};let t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let r=this.attributes;for(let t in r){let n=r[t];e.data.attributes[t]=n.toJSON(e.data)}let n={},i=!1;for(let t in this.morphAttributes){let r=this.morphAttributes[t],a=[];for(let t=0,n=r.length;t<n;t++){let n=r[t];a.push(n.toJSON(e.data))}a.length>0&&(n[t]=a,i=!0)}i&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);let a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));let s=this.boundingSphere;return null!==s&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let r=e.index;null!==r&&this.setIndex(r.clone(t));let n=e.attributes;for(let e in n){let r=n[e];this.setAttribute(e,r.clone(t))}let i=e.morphAttributes;for(let e in i){let r=[],n=i[e];for(let e=0,i=n.length;e<i;e++)r.push(n[e].clone(t));this.morphAttributes[e]=r}this.morphTargetsRelative=e.morphTargetsRelative;let a=e.groups;for(let e=0,t=a.length;e<t;e++){let t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}let s=e.boundingBox;null!==s&&(this.boundingBox=s.clone());let o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}let tD=new eN,tI=new eO,tO=new eA,tN=new es,tF=new es,tB=new es,tz=new es,tk=new es,tG=new es,tV=new O,tH=new O,tW=new O,tj=new es,tX=new es,tq=new es,tY=new es,tZ=new es;class tJ extends e8{constructor(e=new tL,t=new t_){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let r=e[t[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){let t=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){let r=this.geometry,n=r.attributes.position,i=r.morphAttributes.position,a=r.morphTargetsRelative;t.fromBufferAttribute(n,e);let s=this.morphTargetInfluences;if(i&&s){tG.set(0,0,0);for(let r=0,n=i.length;r<n;r++){let n=s[r],o=i[r];0!==n&&(tk.fromBufferAttribute(o,e),a?tG.addScaledVector(tk,n):tG.addScaledVector(tk.sub(t),n))}t.add(tG)}return t}raycast(e,t){let r=this.geometry,n=this.material,i=this.matrixWorld;if(void 0!==n){if(null===r.boundingSphere&&r.computeBoundingSphere(),tO.copy(r.boundingSphere),tO.applyMatrix4(i),tI.copy(e.ray).recast(e.near),!1===tO.containsPoint(tI.origin)&&(null===tI.intersectSphere(tO,tN)||tI.origin.distanceToSquared(tN)>(e.far-e.near)**2)||(tD.copy(i).invert(),tI.copy(e.ray).applyMatrix4(tD),null!==r.boundingBox&&!1===tI.intersectsBox(r.boundingBox)))return;this._computeIntersections(e,t,tI)}}_computeIntersections(e,t,r){let n;let i=this.geometry,a=this.material,s=i.index,o=i.attributes.position,l=i.attributes.uv,h=i.attributes.uv1,u=i.attributes.normal,c=i.groups,d=i.drawRange;if(null!==s){if(Array.isArray(a))for(let i=0,o=c.length;i<o;i++){let o=c[i],p=a[o.materialIndex],f=Math.max(o.start,d.start),m=Math.min(s.count,Math.min(o.start+o.count,d.start+d.count));for(let i=f;i<m;i+=3)(n=tK(this,p,e,r,l,h,u,s.getX(i),s.getX(i+1),s.getX(i+2)))&&(n.faceIndex=Math.floor(i/3),n.face.materialIndex=o.materialIndex,t.push(n))}else{let i=Math.max(0,d.start),o=Math.min(s.count,d.start+d.count);for(let c=i;c<o;c+=3)(n=tK(this,a,e,r,l,h,u,s.getX(c),s.getX(c+1),s.getX(c+2)))&&(n.faceIndex=Math.floor(c/3),t.push(n))}}else if(void 0!==o){if(Array.isArray(a))for(let i=0,s=c.length;i<s;i++){let s=c[i],p=a[s.materialIndex],f=Math.max(s.start,d.start),m=Math.min(o.count,Math.min(s.start+s.count,d.start+d.count));for(let i=f;i<m;i+=3)(n=tK(this,p,e,r,l,h,u,i,i+1,i+2))&&(n.faceIndex=Math.floor(i/3),n.face.materialIndex=s.materialIndex,t.push(n))}else{let i=Math.max(0,d.start),s=Math.min(o.count,d.start+d.count);for(let o=i;o<s;o+=3)(n=tK(this,a,e,r,l,h,u,o,o+1,o+2))&&(n.faceIndex=Math.floor(o/3),t.push(n))}}}}function tK(e,t,r,n,i,a,s,o,u,c){e.getVertexPosition(o,tF),e.getVertexPosition(u,tB),e.getVertexPosition(c,tz);let d=function(e,t,r,n,i,a,s,o){if(null===(t.side===h?n.intersectTriangle(s,a,i,!0,o):n.intersectTriangle(i,a,s,t.side===l,o)))return null;tZ.copy(o),tZ.applyMatrix4(e.matrixWorld);let u=r.ray.origin.distanceTo(tZ);return u<r.near||u>r.far?null:{distance:u,point:tZ.clone(),object:e}}(e,t,r,n,tF,tB,tz,tY);if(d){i&&(tV.fromBufferAttribute(i,o),tH.fromBufferAttribute(i,u),tW.fromBufferAttribute(i,c),d.uv=th.getInterpolation(tY,tF,tB,tz,tV,tH,tW,new O)),a&&(tV.fromBufferAttribute(a,o),tH.fromBufferAttribute(a,u),tW.fromBufferAttribute(a,c),d.uv1=th.getInterpolation(tY,tF,tB,tz,tV,tH,tW,new O),d.uv2=d.uv1),s&&(tj.fromBufferAttribute(s,o),tX.fromBufferAttribute(s,u),tq.fromBufferAttribute(s,c),d.normal=th.getInterpolation(tY,tF,tB,tz,tj,tX,tq,new es),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));let e={a:o,b:u,c:c,normal:new es,materialIndex:0};th.getNormal(tF,tB,tz,e.normal),d.face=e}return d}class t$ extends tL{constructor(e=1,t=1,r=1,n=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:a};let s=this;n=Math.floor(n),i=Math.floor(i);let o=[],l=[],h=[],u=[],c=0,d=0;function p(e,t,r,n,i,a,p,f,m,g,v){let _=a/m,x=p/g,y=a/2,S=p/2,M=f/2,b=m+1,E=g+1,T=0,w=0,A=new es;for(let a=0;a<E;a++){let s=a*x-S;for(let o=0;o<b;o++){let c=o*_-y;A[e]=c*n,A[t]=s*i,A[r]=M,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[r]=f>0?1:-1,h.push(A.x,A.y,A.z),u.push(o/m),u.push(1-a/g),T+=1}}for(let e=0;e<g;e++)for(let t=0;t<m;t++){let r=c+t+b*e,n=c+t+b*(e+1),i=c+(t+1)+b*(e+1),a=c+(t+1)+b*e;o.push(r,n,a),o.push(n,i,a),w+=6}s.addGroup(d,w,v),d+=w,c+=T}p("z","y","x",-1,-1,r,t,e,a=Math.floor(a),i,0),p("z","y","x",1,-1,r,t,-e,a,i,1),p("x","z","y",1,1,e,r,t,n,a,2),p("x","z","y",1,-1,e,r,-t,n,a,3),p("x","y","z",1,-1,e,t,r,n,i,4),p("x","y","z",-1,-1,e,t,-r,n,i,5),this.setIndex(o),this.setAttribute("position",new tE(l,3)),this.setAttribute("normal",new tE(h,3)),this.setAttribute("uv",new tE(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new t$(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function tQ(e){let t={};for(let r in e)for(let n in t[r]={},e[r]){let i=e[r][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[r][n]=null):t[r][n]=i.clone():Array.isArray(i)?t[r][n]=i.slice():t[r][n]=i}return t}function t0(e){let t={};for(let r=0;r<e.length;r++){let n=tQ(e[r]);for(let e in n)t[e]=n[e]}return t}function t1(e){return null===e.getRenderTarget()?e.outputColorSpace:X.workingColorSpace}let t2={clone:tQ,merge:t0};class t3 extends tv{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=tQ(e.uniforms),this.uniformsGroups=function(e){let t=[];for(let r=0;r<e.length;r++)t.push(e[r].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let r in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let n=this.uniforms[r].value;n&&n.isTexture?t.uniforms[r]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[r]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[r]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[r]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[r]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[r]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[r]={type:"m4",value:n.toArray()}:t.uniforms[r]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;let r={};for(let e in this.extensions)!0===this.extensions[e]&&(r[e]=!0);return Object.keys(r).length>0&&(t.extensions=r),t}}class t4 extends e8{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new eN,this.projectionMatrix=new eN,this.projectionMatrixInverse=new eN,this.coordinateSystem=2e3}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class t5 extends t4{constructor(e=50,t=1,r=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*T*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*E*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*T*Math.atan(Math.tan(.5*E*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,r,n,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*E*this.fov)/this.zoom,r=2*t,n=this.aspect*r,i=-.5*n,a=this.view;if(null!==this.view&&this.view.enabled){let e=a.fullWidth,s=a.fullHeight;i+=a.offsetX*n/e,t-=a.offsetY*r/s,n*=a.width/e,r*=a.height/s}let s=this.filmOffset;0!==s&&(i+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+n,t,t-r,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class t6 extends e8{constructor(e,t,r){super(),this.type="CubeCamera",this.renderTarget=r,this.coordinateSystem=null,this.activeMipmapLevel=0;let n=new t5(-90,1,e,t);n.layers=this.layers,this.add(n);let i=new t5(-90,1,e,t);i.layers=this.layers,this.add(i);let a=new t5(-90,1,e,t);a.layers=this.layers,this.add(a);let s=new t5(-90,1,e,t);s.layers=this.layers,this.add(s);let o=new t5(-90,1,e,t);o.layers=this.layers,this.add(o);let l=new t5(-90,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){let e=this.coordinateSystem,t=this.children.concat(),[r,n,i,a,s,o]=t;for(let e of t)this.remove(e);if(2e3===e)r.up.set(0,1,0),r.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),i.up.set(0,0,-1),i.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),s.up.set(0,1,0),s.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else if(2001===e)r.up.set(0,-1,0),r.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),i.up.set(0,0,1),i.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),s.up.set(0,-1,0),s.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1);else throw Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(let e of t)this.add(e),e.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();let{renderTarget:r,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());let[i,a,s,o,l,h]=this.children,u=e.getRenderTarget(),c=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;let f=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0,n),e.render(t,i),e.setRenderTarget(r,1,n),e.render(t,a),e.setRenderTarget(r,2,n),e.render(t,s),e.setRenderTarget(r,3,n),e.render(t,o),e.setRenderTarget(r,4,n),e.render(t,l),r.texture.generateMipmaps=f,e.setRenderTarget(r,5,n),e.render(t,h),e.setRenderTarget(u,c,d),e.xr.enabled=p,r.texture.needsPMREMUpdate=!0}}class t8 extends ee{constructor(e,t,r,n,i,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:301,r,n,i,a,s,o,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class t7 extends en{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;let r={width:e,height:e,depth:1};void 0!==t.encoding&&(G("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=3001===t.encoding?p:""),this.texture=new t8([r,r,r,r,r,r],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:c}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let r={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new t$(5,5,5),i=new t3({name:"CubemapFromEquirect",uniforms:tQ(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:h,blending:0});i.uniforms.tEquirect.value=t;let a=new tJ(n,i),s=t.minFilter;return 1008===t.minFilter&&(t.minFilter=c),new t6(1,10,this).update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,r,n){let i=e.getRenderTarget();for(let i=0;i<6;i++)e.setRenderTarget(this,i),e.clear(t,r,n);e.setRenderTarget(i)}}let t9=new es,re=new es,rt=new N;class rr{constructor(e=new es(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){let n=t9.subVectors(r,t).cross(re.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){let r=e.delta(t9),n=this.normal.dot(r);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let i=-(e.start.dot(this.normal)+this.constant)/n;return i<0||i>1?null:t.copy(e.start).addScaledVector(r,i)}intersectsLine(e){let t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let r=t||rt.getNormalMatrix(e),n=this.coplanarPoint(t9).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-n.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}let rn=new eA,ri=new es;class ra{constructor(e=new rr,t=new rr,r=new rr,n=new rr,i=new rr,a=new rr){this.planes=[e,t,r,n,i,a]}set(e,t,r,n,i,a){let s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(r),s[3].copy(n),s[4].copy(i),s[5].copy(a),this}copy(e){let t=this.planes;for(let r=0;r<6;r++)t[r].copy(e.planes[r]);return this}setFromProjectionMatrix(e,t=2e3){let r=this.planes,n=e.elements,i=n[0],a=n[1],s=n[2],o=n[3],l=n[4],h=n[5],u=n[6],c=n[7],d=n[8],p=n[9],f=n[10],m=n[11],g=n[12],v=n[13],_=n[14],x=n[15];if(r[0].setComponents(o-i,c-l,m-d,x-g).normalize(),r[1].setComponents(o+i,c+l,m+d,x+g).normalize(),r[2].setComponents(o+a,c+h,m+p,x+v).normalize(),r[3].setComponents(o-a,c-h,m-p,x-v).normalize(),r[4].setComponents(o-s,c-u,m-f,x-_).normalize(),2e3===t)r[5].setComponents(o+s,c+u,m+f,x+_).normalize();else if(2001===t)r[5].setComponents(s,u,f,_).normalize();else throw Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),rn.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{let t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),rn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(rn)}intersectsSprite(e){return rn.center.set(0,0,0),rn.radius=.7071067811865476,rn.applyMatrix4(e.matrixWorld),this.intersectsSphere(rn)}intersectsSphere(e){let t=this.planes,r=e.center,n=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(r)<n)return!1;return!0}intersectsBox(e){let t=this.planes;for(let r=0;r<6;r++){let n=t[r];if(ri.x=n.normal.x>0?e.max.x:e.min.x,ri.y=n.normal.y>0?e.max.y:e.min.y,ri.z=n.normal.z>0?e.max.z:e.min.z,0>n.distanceToPoint(ri))return!1}return!0}containsPoint(e){let t=this.planes;for(let r=0;r<6;r++)if(0>t[r].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function rs(){let e=null,t=!1,r=null,n=null;function i(t,a){r(t,a),n=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==r&&(n=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){r=e},setContext:function(t){e=t}}}function ro(e,t){let r=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);let r=n.get(t);r&&(e.deleteBuffer(r.buffer),n.delete(t))},update:function(t,i){if(t.isGLBufferAttribute){let e=n.get(t);(!e||e.version<t.version)&&n.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version});return}t.isInterleavedBufferAttribute&&(t=t.data);let a=n.get(t);void 0===a?n.set(t,function(t,n){let i;let a=t.array,s=t.usage,o=e.createBuffer();if(e.bindBuffer(n,o),e.bufferData(n,a,s),t.onUploadCallback(),a instanceof Float32Array)i=e.FLOAT;else if(a instanceof Uint16Array){if(t.isFloat16BufferAttribute){if(r)i=e.HALF_FLOAT;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}else i=e.UNSIGNED_SHORT}else if(a instanceof Int16Array)i=e.SHORT;else if(a instanceof Uint32Array)i=e.UNSIGNED_INT;else if(a instanceof Int32Array)i=e.INT;else if(a instanceof Int8Array)i=e.BYTE;else if(a instanceof Uint8Array)i=e.UNSIGNED_BYTE;else if(a instanceof Uint8ClampedArray)i=e.UNSIGNED_BYTE;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+a);return{buffer:o,type:i,bytesPerElement:a.BYTES_PER_ELEMENT,version:t.version}}(t,i)):a.version<t.version&&(function(t,n,i){let a=n.array,s=n.updateRange;e.bindBuffer(i,t),-1===s.count?e.bufferSubData(i,0,a):(r?e.bufferSubData(i,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):e.bufferSubData(i,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1),n.onUploadCallback()}(a.buffer,t,i),a.version=t.version)}}}class rl extends tL{constructor(e=1,t=1,r=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};let i=e/2,a=t/2,s=Math.floor(r),o=Math.floor(n),l=s+1,h=o+1,u=e/s,c=t/o,d=[],p=[],f=[],m=[];for(let e=0;e<h;e++){let t=e*c-a;for(let r=0;r<l;r++){let n=r*u-i;p.push(n,-t,0),f.push(0,0,1),m.push(r/s),m.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<s;t++){let r=t+l*e,n=t+l*(e+1),i=t+1+l*(e+1),a=t+1+l*e;d.push(r,n,a),d.push(n,i,a)}this.setIndex(d),this.setAttribute("position",new tE(p,3)),this.setAttribute("normal",new tE(f,3)),this.setAttribute("uv",new tE(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rl(e.width,e.height,e.widthSegments,e.heightSegments)}}let rh={alphahash_fragment:"#ifdef USE_ALPHAHASH\n	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n	const float ALPHA_HASH_SCALE = 0.05;\n	float hash2D( vec2 value ) {\n		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n	}\n	float hash3D( vec3 value ) {\n		return hash2D( vec2( hash2D( value.xy ), value.z ) );\n	}\n	float getAlphaHashThreshold( vec3 position ) {\n		float maxDeriv = max(\n			length( dFdx( position.xyz ) ),\n			length( dFdy( position.xyz ) )\n		);\n		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n		vec2 pixScales = vec2(\n			exp2( floor( log2( pixScale ) ) ),\n			exp2( ceil( log2( pixScale ) ) )\n		);\n		vec2 alpha = vec2(\n			hash3D( floor( pixScales.x * position.xyz ) ),\n			hash3D( floor( pixScales.y * position.xyz ) )\n		);\n		float lerpFactor = fract( log2( pixScale ) );\n		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n		float a = min( lerpFactor, 1.0 - lerpFactor );\n		vec3 cases = vec3(\n			x * x / ( 2.0 * a * ( 1.0 - a ) ),\n			( x - 0.5 * a ) / ( 1.0 - a ),\n			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n		);\n		float threshold = ( x < ( 1.0 - a ) )\n			? ( ( x < a ) ? cases.x : cases.y )\n			: cases.z;\n		return clamp( threshold , 1.0e-6, 1.0 );\n	}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_CLEARCOAT ) \n		clearcoatSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_SHEEN ) \n		sheenSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n	vPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vBumpMapUv );\n		vec2 dSTdy = dFdy( vBumpMapUv );\n		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n	varying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_v0 0.339\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_v1 0.276\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_v4 0.046\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_v5 0.016\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_v6 0.0038\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n	vec3( 0.8224621, 0.177538, 0.0 ),\n	vec3( 0.0331941, 0.9668058, 0.0 ),\n	vec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n	vec3( 1.2249401, - 0.2249404, 0.0 ),\n	vec3( - 0.0420569, 1.0420571, 0.0 ),\n	vec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n	return value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return sRGBTransferOETF( value );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	#ifdef USE_ANISOTROPY\n		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n			#ifdef ENVMAP_TYPE_CUBE_UV\n				vec3 bentNormal = cross( bitangent, viewDir );\n				bentNormal = normalize( cross( bentNormal, bitangent ) );\n				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n				return getIBLRadiance( viewDir, bentNormal, roughness );\n			#else\n				return vec3( 0.0 );\n			#endif\n		}\n	#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n	uniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( LEGACY_LIGHTS )\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#else\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef USE_SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULAR_COLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n		#endif\n		#ifdef USE_SPECULAR_INTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEEN_COLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	#ifdef USE_ANISOTROPYMAP\n		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n	#else\n		vec2 anisotropyV = anisotropyVector;\n	#endif\n	material.anisotropy = length( anisotropyV );\n	anisotropyV /= material.anisotropy;\n	material.anisotropy = saturate( material.anisotropy );\n	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\n	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n	#ifdef USE_ANISOTROPY\n		float anisotropy;\n		float alphaT;\n		vec3 anisotropyT;\n		vec3 anisotropyB;\n	#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n		float v = 0.5 / ( gv + gl );\n		return saturate(v);\n	}\n	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n		float a2 = alphaT * alphaB;\n		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n		highp float v2 = dot( v, v );\n		float w2 = a2 / v2;\n		return RECIPROCAL_PI * a2 * pow2 ( w2 );\n	}\n#endif\n#ifdef USE_CLEARCOAT\n	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n		vec3 f0 = material.clearcoatF0;\n		float f90 = material.clearcoatF90;\n		float roughness = material.clearcoatRoughness;\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = F_Schlick( f0, f90, dotVH );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n	vec3 f0 = material.specularColor;\n	float f90 = material.specularF90;\n	float roughness = material.roughness;\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	#ifdef USE_IRIDESCENCE\n		F = mix( F, material.iridescenceFresnel, material.iridescence );\n	#endif\n	#ifdef USE_ANISOTROPY\n		float dotTL = dot( material.anisotropyT, lightDir );\n		float dotTV = dot( material.anisotropyT, viewDir );\n		float dotTH = dot( material.anisotropyT, halfDir );\n		float dotBL = dot( material.anisotropyB, lightDir );\n		float dotBV = dot( material.anisotropyB, viewDir );\n		float dotBH = dot( material.anisotropyB, halfDir );\n		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n	#else\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n	#endif\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometryNormal;\n		vec3 viewDir = geometryViewDir;\n		vec3 position = geometryPosition;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n	geometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometryViewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometryPosition, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometryPosition, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#if defined( USE_LIGHT_PROBES )\n		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometryNormal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	#ifdef USE_ANISOTROPY\n		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n	#else\n		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n	#endif\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	#if defined( USE_POINTS_UV )\n		vec2 uv = vUv;\n	#else\n		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	#endif\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n	varying vec2 vUv;\n#else\n	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n		uniform mat3 uvTransform;\n	#endif\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal *= faceDirection;\n	#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n	#ifdef USE_TANGENT\n		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn = getTangentFrame( - vViewPosition, normal,\n		#if defined( USE_NORMALMAP )\n			vNormalMapUv\n		#elif defined( USE_CLEARCOAT_NORMALMAP )\n			vClearcoatNormalMapUv\n		#else\n			vUv\n		#endif\n		);\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn[0] *= faceDirection;\n		tbn[1] *= faceDirection;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn2[0] *= faceDirection;\n		tbn2[1] *= faceDirection;\n	#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	normal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( uv.st );\n		vec2 st1 = dFdy( uv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n		return mat3( T * scale, B * scale, N );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	clearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n	return packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	uniform int boneTextureSize;\n	mat4 getBoneMatrix( const in float i ) {\n		float j = i * 4.0;\n		float x = mod( j, float( boneTextureSize ) );\n		float y = floor( j / float( boneTextureSize ) );\n		float dx = 1.0 / float( boneTextureSize );\n		float dy = 1.0 / float( boneTextureSize );\n		y = dy * ( y + 0.5 );\n		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n		mat4 bone = mat4( v1, v2, v3, v4 );\n		return bone;\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmitted = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return vec3( 1.0 );\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 attenuatedColor = transmittance * transmittedLight.rgb;\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n	}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform mat3 mapTransform;\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform mat3 alphaMapTransform;\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	uniform mat3 lightMapTransform;\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	uniform mat3 aoMapTransform;\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	uniform mat3 bumpMapTransform;\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	uniform mat3 normalMapTransform;\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	uniform mat3 displacementMapTransform;\n	varying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	uniform mat3 emissiveMapTransform;\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	uniform mat3 metalnessMapTransform;\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	uniform mat3 roughnessMapTransform;\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	uniform mat3 anisotropyMapTransform;\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	uniform mat3 clearcoatMapTransform;\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform mat3 clearcoatNormalMapTransform;\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform mat3 clearcoatRoughnessMapTransform;\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	uniform mat3 sheenColorMapTransform;\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	uniform mat3 sheenRoughnessMapTransform;\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	uniform mat3 iridescenceMapTransform;\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform mat3 iridescenceThicknessMapTransform;\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	uniform mat3 specularMapTransform;\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	uniform mat3 specularColorMapTransform;\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	uniform mat3 specularIntensityMapTransform;\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	vUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"},ru={common:{diffuse:{value:new tf(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new N},alphaMap:{value:null},alphaMapTransform:{value:new N},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new N}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new N}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new N}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new N},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new N},normalScale:{value:new O(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new N},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new N}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new N}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new N}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new tf(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new tf(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new N},alphaTest:{value:0},uvTransform:{value:new N}},sprite:{diffuse:{value:new tf(16777215)},opacity:{value:1},center:{value:new O(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new N},alphaMap:{value:null},alphaMapTransform:{value:new N},alphaTest:{value:0}}},rc={basic:{uniforms:t0([ru.common,ru.specularmap,ru.envmap,ru.aomap,ru.lightmap,ru.fog]),vertexShader:rh.meshbasic_vert,fragmentShader:rh.meshbasic_frag},lambert:{uniforms:t0([ru.common,ru.specularmap,ru.envmap,ru.aomap,ru.lightmap,ru.emissivemap,ru.bumpmap,ru.normalmap,ru.displacementmap,ru.fog,ru.lights,{emissive:{value:new tf(0)}}]),vertexShader:rh.meshlambert_vert,fragmentShader:rh.meshlambert_frag},phong:{uniforms:t0([ru.common,ru.specularmap,ru.envmap,ru.aomap,ru.lightmap,ru.emissivemap,ru.bumpmap,ru.normalmap,ru.displacementmap,ru.fog,ru.lights,{emissive:{value:new tf(0)},specular:{value:new tf(1118481)},shininess:{value:30}}]),vertexShader:rh.meshphong_vert,fragmentShader:rh.meshphong_frag},standard:{uniforms:t0([ru.common,ru.envmap,ru.aomap,ru.lightmap,ru.emissivemap,ru.bumpmap,ru.normalmap,ru.displacementmap,ru.roughnessmap,ru.metalnessmap,ru.fog,ru.lights,{emissive:{value:new tf(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:rh.meshphysical_vert,fragmentShader:rh.meshphysical_frag},toon:{uniforms:t0([ru.common,ru.aomap,ru.lightmap,ru.emissivemap,ru.bumpmap,ru.normalmap,ru.displacementmap,ru.gradientmap,ru.fog,ru.lights,{emissive:{value:new tf(0)}}]),vertexShader:rh.meshtoon_vert,fragmentShader:rh.meshtoon_frag},matcap:{uniforms:t0([ru.common,ru.bumpmap,ru.normalmap,ru.displacementmap,ru.fog,{matcap:{value:null}}]),vertexShader:rh.meshmatcap_vert,fragmentShader:rh.meshmatcap_frag},points:{uniforms:t0([ru.points,ru.fog]),vertexShader:rh.points_vert,fragmentShader:rh.points_frag},dashed:{uniforms:t0([ru.common,ru.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:rh.linedashed_vert,fragmentShader:rh.linedashed_frag},depth:{uniforms:t0([ru.common,ru.displacementmap]),vertexShader:rh.depth_vert,fragmentShader:rh.depth_frag},normal:{uniforms:t0([ru.common,ru.bumpmap,ru.normalmap,ru.displacementmap,{opacity:{value:1}}]),vertexShader:rh.meshnormal_vert,fragmentShader:rh.meshnormal_frag},sprite:{uniforms:t0([ru.sprite,ru.fog]),vertexShader:rh.sprite_vert,fragmentShader:rh.sprite_frag},background:{uniforms:{uvTransform:{value:new N},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:rh.background_vert,fragmentShader:rh.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:rh.backgroundCube_vert,fragmentShader:rh.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:rh.cube_vert,fragmentShader:rh.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:rh.equirect_vert,fragmentShader:rh.equirect_frag},distanceRGBA:{uniforms:t0([ru.common,ru.displacementmap,{referencePosition:{value:new es},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:rh.distanceRGBA_vert,fragmentShader:rh.distanceRGBA_frag},shadow:{uniforms:t0([ru.lights,ru.fog,{color:{value:new tf(0)},opacity:{value:1}}]),vertexShader:rh.shadow_vert,fragmentShader:rh.shadow_frag}};rc.physical={uniforms:t0([rc.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new N},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new N},clearcoatNormalScale:{value:new O(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new N},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new N},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new N},sheen:{value:0},sheenColor:{value:new tf(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new N},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new N},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new N},transmissionSamplerSize:{value:new O},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new N},attenuationDistance:{value:0},attenuationColor:{value:new tf(0)},specularColor:{value:new tf(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new N},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new N},anisotropyVector:{value:new O},anisotropyMap:{value:null},anisotropyMapTransform:{value:new N}}]),vertexShader:rh.meshphysical_vert,fragmentShader:rh.meshphysical_frag};let rd={r:0,b:0,g:0};function rp(e,t,r,n,i,a,s){let o,u;let c=new tf(0),d=!0===a?0:1,p=null,f=0,m=null;function g(t,r){t.getRGB(rd,t1(e)),n.buffers.color.setClear(rd.r,rd.g,rd.b,r,s)}return{getClearColor:function(){return c},setClearColor:function(e,t=1){c.set(e),g(c,d=t)},getClearAlpha:function(){return d},setClearAlpha:function(e){g(c,d=e)},render:function(a,v){let x=!1,y=!0===v.isScene?v.background:null;y&&y.isTexture&&(y=(v.backgroundBlurriness>0?r:t).get(y)),null===y?g(c,d):y&&y.isColor&&(g(y,1),x=!0);let S=e.xr.getEnvironmentBlendMode();"additive"===S?n.buffers.color.setClear(0,0,0,1,s):"alpha-blend"===S&&n.buffers.color.setClear(0,0,0,0,s),(e.autoClear||x)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),y&&(y.isCubeTexture||306===y.mapping)?(void 0===u&&((u=new tJ(new t$(1,1,1),new t3({name:"BackgroundCubeMaterial",uniforms:tQ(rc.backgroundCube.uniforms),vertexShader:rc.backgroundCube.vertexShader,fragmentShader:rc.backgroundCube.fragmentShader,side:h,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=y,u.material.uniforms.flipEnvMap.value=y.isCubeTexture&&!1===y.isRenderTargetTexture?-1:1,u.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,u.material.toneMapped=X.getTransfer(y.colorSpace)!==_,(p!==y||f!==y.version||m!==e.toneMapping)&&(u.material.needsUpdate=!0,p=y,f=y.version,m=e.toneMapping),u.layers.enableAll(),a.unshift(u,u.geometry,u.material,0,0,null)):y&&y.isTexture&&(void 0===o&&((o=new tJ(new rl(2,2),new t3({name:"BackgroundMaterial",uniforms:tQ(rc.background.uniforms),vertexShader:rc.background.vertexShader,fragmentShader:rc.background.fragmentShader,side:l,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(o)),o.material.uniforms.t2D.value=y,o.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,o.material.toneMapped=X.getTransfer(y.colorSpace)!==_,!0===y.matrixAutoUpdate&&y.updateMatrix(),o.material.uniforms.uvTransform.value.copy(y.matrix),(p!==y||f!==y.version||m!==e.toneMapping)&&(o.material.needsUpdate=!0,p=y,f=y.version,m=e.toneMapping),o.layers.enableAll(),a.unshift(o,o.geometry,o.material,0,0,null))}}}function rf(e,t,r,n){let i=e.getParameter(e.MAX_VERTEX_ATTRIBS),a=n.isWebGL2?null:t.get("OES_vertex_array_object"),s=n.isWebGL2||null!==a,o={},l=p(null),h=l,u=!1;function c(t){return n.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function d(t){return n.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function p(e){let t=[],r=[],n=[];for(let e=0;e<i;e++)t[e]=0,r[e]=0,n[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:r,attributeDivisors:n,object:e,attributes:{},index:null}}function f(){let e=h.newAttributes;for(let t=0,r=e.length;t<r;t++)e[t]=0}function m(e){g(e,0)}function g(r,i){let a=h.newAttributes,s=h.enabledAttributes,o=h.attributeDivisors;a[r]=1,0===s[r]&&(e.enableVertexAttribArray(r),s[r]=1),o[r]!==i&&((n.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](r,i),o[r]=i)}function v(){let t=h.newAttributes,r=h.enabledAttributes;for(let n=0,i=r.length;n<i;n++)r[n]!==t[n]&&(e.disableVertexAttribArray(n),r[n]=0)}function _(t,r,n,i,a,s,o){!0===o?e.vertexAttribIPointer(t,r,n,a,s):e.vertexAttribPointer(t,r,n,i,a,s)}function x(){y(),u=!0,h!==l&&c((h=l).object)}function y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,d,x,y){let S=!1;if(s){let t=function(t,r,i){let s=!0===i.wireframe,l=o[t.id];void 0===l&&(l={},o[t.id]=l);let h=l[r.id];void 0===h&&(h={},l[r.id]=h);let u=h[s];return void 0===u&&(u=p(n.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),h[s]=u),u}(x,d,l);h!==t&&c((h=t).object),(S=function(e,t,r,n){let i=h.attributes,a=t.attributes,s=0,o=r.getAttributes();for(let t in o)if(o[t].location>=0){let r=i[t],n=a[t];if(void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor)),void 0===r||r.attribute!==n||n&&r.data!==n.data)return!0;s++}return h.attributesNum!==s||h.index!==n}(i,x,d,y))&&function(e,t,r,n){let i={},a=t.attributes,s=0,o=r.getAttributes();for(let t in o)if(o[t].location>=0){let r=a[t];void 0===r&&("instanceMatrix"===t&&e.instanceMatrix&&(r=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(r=e.instanceColor));let n={};n.attribute=r,r&&r.data&&(n.data=r.data),i[t]=n,s++}h.attributes=i,h.attributesNum=s,h.index=n}(i,x,d,y)}else{let e=!0===l.wireframe;(h.geometry!==x.id||h.program!==d.id||h.wireframe!==e)&&(h.geometry=x.id,h.program=d.id,h.wireframe=e,S=!0)}null!==y&&r.update(y,e.ELEMENT_ARRAY_BUFFER),(S||u)&&(u=!1,function(i,a,s,o){if(!1===n.isWebGL2&&(i.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;f();let l=o.attributes,h=s.getAttributes(),u=a.defaultAttributeValues;for(let t in h){let a=h[t];if(a.location>=0){let s=l[t];if(void 0===s&&("instanceMatrix"===t&&i.instanceMatrix&&(s=i.instanceMatrix),"instanceColor"===t&&i.instanceColor&&(s=i.instanceColor)),void 0!==s){let t=s.normalized,l=s.itemSize,h=r.get(s);if(void 0===h)continue;let u=h.buffer,c=h.type,d=h.bytesPerElement,p=!0===n.isWebGL2&&(c===e.INT||c===e.UNSIGNED_INT||1013===s.gpuType);if(s.isInterleavedBufferAttribute){let r=s.data,n=r.stride,h=s.offset;if(r.isInstancedInterleavedBuffer){for(let e=0;e<a.locationSize;e++)g(a.location+e,r.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=r.meshPerAttribute*r.count)}else for(let e=0;e<a.locationSize;e++)m(a.location+e);e.bindBuffer(e.ARRAY_BUFFER,u);for(let e=0;e<a.locationSize;e++)_(a.location+e,l/a.locationSize,c,t,n*d,(h+l/a.locationSize*e)*d,p)}else{if(s.isInstancedBufferAttribute){for(let e=0;e<a.locationSize;e++)g(a.location+e,s.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=s.meshPerAttribute*s.count)}else for(let e=0;e<a.locationSize;e++)m(a.location+e);e.bindBuffer(e.ARRAY_BUFFER,u);for(let e=0;e<a.locationSize;e++)_(a.location+e,l/a.locationSize,c,t,l*d,l/a.locationSize*e*d,p)}}else if(void 0!==u){let r=u[t];if(void 0!==r)switch(r.length){case 2:e.vertexAttrib2fv(a.location,r);break;case 3:e.vertexAttrib3fv(a.location,r);break;case 4:e.vertexAttrib4fv(a.location,r);break;default:e.vertexAttrib1fv(a.location,r)}}}}v()}(i,l,d,x),null!==y&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r.get(y).buffer))},reset:x,resetDefaultState:y,dispose:function(){for(let e in x(),o){let t=o[e];for(let e in t){let r=t[e];for(let e in r)d(r[e].object),delete r[e];delete t[e]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;let t=o[e.id];for(let e in t){let r=t[e];for(let e in r)d(r[e].object),delete r[e];delete t[e]}delete o[e.id]},releaseStatesOfProgram:function(e){for(let t in o){let r=o[t];if(void 0===r[e.id])continue;let n=r[e.id];for(let e in n)d(n[e].object),delete n[e];delete r[e.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:v}}function rm(e,t,r,n){let i;let a=n.isWebGL2;this.setMode=function(e){i=e},this.render=function(t,n){e.drawArrays(i,t,n),r.update(n,i,1)},this.renderInstances=function(n,s,o){let l,h;if(0!==o){if(a)l=e,h="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",null===l){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}l[h](i,n,s,o),r.update(s,i,o)}}}function rg(e,t,r){let n;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===e.constructor.name,s=void 0!==r.precision?r.precision:"highp",o=i(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);let l=a||t.has("WEBGL_draw_buffers"),h=!0===r.logarithmicDepthBuffer,u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),c=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),f=e.getParameter(e.MAX_VERTEX_ATTRIBS),m=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),g=e.getParameter(e.MAX_VARYING_VECTORS),v=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),_=c>0,x=a||t.has("OES_texture_float"),y=a?e.getParameter(e.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===t.has("EXT_texture_filter_anisotropic")){let r=t.get("EXT_texture_filter_anisotropic");n=e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:c,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:_,floatFragmentTextures:x,floatVertexTextures:_&&x,maxSamples:y}}function rv(e){let t=this,r=null,n=0,i=!1,a=!1,s=new rr,o=new N,l={value:null,needsUpdate:!1};function h(e,r,n,i){let a=null!==e?e.length:0,h=null;if(0!==a){if(h=l.value,!0!==i||null===h){let t=n+4*a,i=r.matrixWorldInverse;o.getNormalMatrix(i),(null===h||h.length<t)&&(h=new Float32Array(t));for(let t=0,r=n;t!==a;++t,r+=4)s.copy(e[t]).applyMatrix4(i,o),s.normal.toArray(h,r),h[r+3]=s.constant}l.value=h,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){let r=0!==e.length||t||0!==n||i;return i=t,n=e.length,r},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){r=h(e,t,0)},this.setState=function(s,o,u){let c=s.clippingPlanes,d=s.clipIntersection,p=s.clipShadows,f=e.get(s);if(i&&null!==c&&0!==c.length&&(!a||p)){let e=a?0:n,t=4*e,i=f.clippingState||null;l.value=i,i=h(c,o,t,u);for(let e=0;e!==t;++e)i[e]=r[e];f.clippingState=i,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}else a?h(null):(l.value!==r&&(l.value=r,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0)}}function r_(e){let t=new WeakMap;function r(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function n(e){let r=e.target;r.removeEventListener("dispose",n);let i=t.get(r);void 0!==i&&(t.delete(r),i.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){let a=i.mapping;if(303===a||304===a){if(t.has(i))return r(t.get(i).texture,i.mapping);{let a=i.image;if(!a||!(a.height>0))return null;{let s=new t7(a.height/2);return s.fromEquirectangularTexture(e,i),t.set(i,s),i.addEventListener("dispose",n),r(s.texture,i.mapping)}}}}return i},dispose:function(){t=new WeakMap}}}let rx=[.125,.215,.35,.446,.526,.582],ry=new class extends t4{constructor(e=-1,t=1,r=1,n=-1,i=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=n,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,r,n,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2,i=r-e,a=r+e,s=n+t,o=n-t;if(null!==this.view&&this.view.enabled){let e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,a=i+e*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height}this.projectionMatrix.makeOrthographic(i,a,s,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}},rS=new tf,rM=null,rb=0,rE=0,rT=(1+Math.sqrt(5))/2,rw=1/rT,rA=[new es(1,1,1),new es(-1,1,1),new es(1,1,-1),new es(-1,1,-1),new es(0,rT,rw),new es(0,rT,-rw),new es(rw,0,rT),new es(-rw,0,rT),new es(rT,rw,0),new es(-rT,rw,0)];class rR{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,n=100){rM=this._renderer.getRenderTarget(),rb=this._renderer.getActiveCubeFace(),rE=this._renderer.getActiveMipmapLevel(),this._setSize(256);let i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,r,n,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=rL(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=rP(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(rM,rb,rE),e.scissorTest=!1,rU(e,0,0,e.width,e.height)}_fromTexture(e,t){301===e.mapping||302===e.mapping?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),rM=this._renderer.getRenderTarget(),rb=this._renderer.getActiveCubeFace(),rE=this._renderer.getActiveMipmapLevel();let r=t||this._allocateTargets();return this._textureToCubeUV(e,r),this._applyPMREM(r),this._cleanup(r),r}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:c,minFilter:c,generateMipmaps:!1,type:1016,format:1023,colorSpace:f,depthBuffer:!1},n=rC(e,t,r);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=rC(e,t,r);let{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){let t=[],r=[],n=[],i=e,a=e-4+1+rx.length;for(let s=0;s<a;s++){let a=Math.pow(2,i);r.push(a);let o=1/a;s>e-4?o=rx[s-e+4-1]:0===s&&(o=0),n.push(o);let l=1/(a-2),h=-l,u=1+l,c=[h,h,u,h,u,u,h,h,u,u,h,u],d=new Float32Array(108),p=new Float32Array(72),f=new Float32Array(36);for(let e=0;e<6;e++){let t=e%3*2/3-1,r=e>2?0:-1,n=[t,r,0,t+2/3,r,0,t+2/3,r+1,0,t,r,0,t+2/3,r+1,0,t,r+1,0];d.set(n,18*e),p.set(c,12*e);let i=[e,e,e,e,e,e];f.set(i,6*e)}let m=new tL;m.setAttribute("position",new tS(d,3)),m.setAttribute("uv",new tS(p,2)),m.setAttribute("faceIndex",new tS(f,1)),t.push(m),i>4&&i--}return{lodPlanes:t,sizeLods:r,sigmas:n}}(n)),this._blurMaterial=new t3({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:new Float32Array(20)},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:new es(0,1,0)}},vertexShader:rD(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}return n}_compileMaterial(e){let t=new tJ(this._lodPlanes[0],e);this._renderer.compile(t,ry)}_sceneToCubeUV(e,t,r,n){let i=new t5(90,1,t,r),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,u=o.toneMapping;o.getClearColor(rS),o.toneMapping=0,o.autoClear=!1;let c=new t_({name:"PMREM.Background",side:h,depthWrite:!1,depthTest:!1}),d=new tJ(new t$,c),p=!1,f=e.background;f?f.isColor&&(c.color.copy(f),e.background=null,p=!0):(c.color.copy(rS),p=!0);for(let t=0;t<6;t++){let r=t%3;0===r?(i.up.set(0,a[t],0),i.lookAt(s[t],0,0)):1===r?(i.up.set(0,0,a[t]),i.lookAt(0,s[t],0)):(i.up.set(0,a[t],0),i.lookAt(0,0,s[t]));let l=this._cubeSize;rU(n,r*l,t>2?l:0,l,l),o.setRenderTarget(n),p&&o.render(d,i),o.render(e,i)}d.geometry.dispose(),d.material.dispose(),o.toneMapping=u,o.autoClear=l,e.background=f}_textureToCubeUV(e,t){let r=this._renderer,n=301===e.mapping||302===e.mapping;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=rL()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=rP());let i=n?this._cubemapMaterial:this._equirectMaterial,a=new tJ(this._lodPlanes[0],i);i.uniforms.envMap.value=e;let s=this._cubeSize;rU(t,0,0,3*s,2*s),r.setRenderTarget(t),r.render(a,ry)}_applyPMREM(e){let t=this._renderer,r=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){let r=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),n=rA[(t-1)%rA.length];this._blur(e,t-1,t,r,n)}t.autoClear=r}_blur(e,t,r,n,i){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,r,n,"latitudinal",i),this._halfBlur(a,e,r,r,n,"longitudinal",i)}_halfBlur(e,t,r,n,i,a,s){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let h=new tJ(this._lodPlanes[n],l),u=l.uniforms,c=this._sizeLods[r]-1,d=isFinite(i)?Math.PI/(2*c):2*Math.PI/39,p=i/d,f=isFinite(i)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let m=[],g=0;for(let e=0;e<20;++e){let t=e/p,r=Math.exp(-t*t/2);m.push(r),0===e?g+=r:e<f&&(g+=2*r)}for(let e=0;e<m.length;e++)m[e]=m[e]/g;u.envMap.value=e.texture,u.samples.value=f,u.weights.value=m,u.latitudinal.value="latitudinal"===a,s&&(u.poleAxis.value=s);let{_lodMax:v}=this;u.dTheta.value=d,u.mipInt.value=v-r;let _=this._sizeLods[n],x=4*(this._cubeSize-_);rU(t,3*_*(n>v-4?n-v+4:0),x,3*_,2*_),o.setRenderTarget(t),o.render(h,ry)}}function rC(e,t,r){let n=new en(e,t,r);return n.texture.mapping=306,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function rU(e,t,r,n,i){e.viewport.set(t,r,n,i),e.scissor.set(t,r,n,i)}function rP(){return new t3({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:rD(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function rL(){return new t3({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:rD(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function rD(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function rI(e){let t=new WeakMap,r=null;function n(e){let r=e.target;r.removeEventListener("dispose",n);let i=t.get(r);void 0!==i&&(t.delete(r),i.dispose())}return{get:function(i){if(i&&i.isTexture){let a=i.mapping,s=303===a||304===a,o=301===a||302===a;if(s||o){if(i.isRenderTargetTexture&&!0===i.needsPMREMUpdate){i.needsPMREMUpdate=!1;let n=t.get(i);return null===r&&(r=new rR(e)),n=s?r.fromEquirectangular(i,n):r.fromCubemap(i,n),t.set(i,n),n.texture}if(t.has(i))return t.get(i).texture;{let a=i.image;if(!(s&&a&&a.height>0||o&&a&&function(e){let t=0;for(let r=0;r<6;r++)void 0!==e[r]&&t++;return 6===t}(a)))return null;{null===r&&(r=new rR(e));let a=s?r.fromEquirectangular(i):r.fromCubemap(i);return t.set(i,a),i.addEventListener("dispose",n),a.texture}}}}return i},dispose:function(){t=new WeakMap,null!==r&&(r.dispose(),r=null)}}}function rO(e){let t={};function r(r){let n;if(void 0!==t[r])return t[r];switch(r){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(r)}return t[r]=n,n}return{has:function(e){return null!==r(e)},init:function(e){e.isWebGL2?r("EXT_color_buffer_float"):(r("WEBGL_depth_texture"),r("OES_texture_float"),r("OES_texture_half_float"),r("OES_texture_half_float_linear"),r("OES_standard_derivatives"),r("OES_element_index_uint"),r("OES_vertex_array_object"),r("ANGLE_instanced_arrays")),r("OES_texture_float_linear"),r("EXT_color_buffer_half_float"),r("WEBGL_multisampled_render_to_texture")},get:function(e){let t=r(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function rN(e,t,r,n){let i={},a=new WeakMap;function s(e){let o=e.target;for(let e in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[e]);for(let e in o.morphAttributes){let r=o.morphAttributes[e];for(let e=0,n=r.length;e<n;e++)t.remove(r[e])}o.removeEventListener("dispose",s),delete i[o.id];let l=a.get(o);l&&(t.remove(l),a.delete(o)),n.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,r.memory.geometries--}function o(e){let r=[],n=e.index,i=e.attributes.position,s=0;if(null!==n){let e=n.array;s=n.version;for(let t=0,n=e.length;t<n;t+=3){let n=e[t+0],i=e[t+1],a=e[t+2];r.push(n,i,i,a,a,n)}}else{if(void 0===i)return;let e=i.array;s=i.version;for(let t=0,n=e.length/3-1;t<n;t+=3){let e=t+0,n=t+1,i=t+2;r.push(e,n,n,i,i,e)}}let o=new(B(r)?tb:tM)(r,1);o.version=s;let l=a.get(e);l&&t.remove(l),a.set(e,o)}return{get:function(e,t){return!0===i[t.id]||(t.addEventListener("dispose",s),i[t.id]=!0,r.memory.geometries++),t},update:function(r){let n=r.attributes;for(let r in n)t.update(n[r],e.ARRAY_BUFFER);let i=r.morphAttributes;for(let r in i){let n=i[r];for(let r=0,i=n.length;r<i;r++)t.update(n[r],e.ARRAY_BUFFER)}},getWireframeAttribute:function(e){let t=a.get(e);if(t){let r=e.index;null!==r&&t.version<r.version&&o(e)}else o(e);return a.get(e)}}}function rF(e,t,r,n){let i,a,s;let o=n.isWebGL2;this.setMode=function(e){i=e},this.setIndex=function(e){a=e.type,s=e.bytesPerElement},this.render=function(t,n){e.drawElements(i,n,a,t*s),r.update(n,i,1)},this.renderInstances=function(n,l,h){let u,c;if(0!==h){if(o)u=e,c="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),c="drawElementsInstancedANGLE",null===u){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[c](i,l,a,n*s,h),r.update(l,i,h)}}}function rB(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(r,n,i){switch(t.calls++,n){case e.TRIANGLES:t.triangles+=r/3*i;break;case e.LINES:t.lines+=r/2*i;break;case e.LINE_STRIP:t.lines+=i*(r-1);break;case e.LINE_LOOP:t.lines+=i*r;break;case e.POINTS:t.points+=i*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function rz(e,t){return e[0]-t[0]}function rk(e,t){return Math.abs(t[1])-Math.abs(e[1])}function rG(e,t,r){let n={},i=new Float32Array(8),a=new WeakMap,s=new et,o=[];for(let e=0;e<8;e++)o[e]=[e,0];return{update:function(l,h,u){let c=l.morphTargetInfluences;if(!0===t.isWebGL2){let n=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,i=void 0!==n?n.length:0,o=a.get(h);if(void 0===o||o.count!==i){void 0!==o&&o.texture.dispose();let e=void 0!==h.morphAttributes.position,r=void 0!==h.morphAttributes.normal,n=void 0!==h.morphAttributes.color,l=h.morphAttributes.position||[],u=h.morphAttributes.normal||[],c=h.morphAttributes.color||[],d=0;!0===e&&(d=1),!0===r&&(d=2),!0===n&&(d=3);let p=h.attributes.position.count*d,f=1;p>t.maxTextureSize&&(f=Math.ceil(p/t.maxTextureSize),p=t.maxTextureSize);let m=new Float32Array(p*f*4*i),g=new ei(m,p,f,i);g.type=1015,g.needsUpdate=!0;let v=4*d;for(let t=0;t<i;t++){let i=l[t],a=u[t],o=c[t],h=p*f*4*t;for(let t=0;t<i.count;t++){let l=t*v;!0===e&&(s.fromBufferAttribute(i,t),m[h+l+0]=s.x,m[h+l+1]=s.y,m[h+l+2]=s.z,m[h+l+3]=0),!0===r&&(s.fromBufferAttribute(a,t),m[h+l+4]=s.x,m[h+l+5]=s.y,m[h+l+6]=s.z,m[h+l+7]=0),!0===n&&(s.fromBufferAttribute(o,t),m[h+l+8]=s.x,m[h+l+9]=s.y,m[h+l+10]=s.z,m[h+l+11]=4===o.itemSize?s.w:1)}}o={count:i,texture:g,size:new O(p,f)},a.set(h,o),h.addEventListener("dispose",function e(){g.dispose(),a.delete(h),h.removeEventListener("dispose",e)})}let l=0;for(let e=0;e<c.length;e++)l+=c[e];let d=h.morphTargetsRelative?1:1-l;u.getUniforms().setValue(e,"morphTargetBaseInfluence",d),u.getUniforms().setValue(e,"morphTargetInfluences",c),u.getUniforms().setValue(e,"morphTargetsTexture",o.texture,r),u.getUniforms().setValue(e,"morphTargetsTextureSize",o.size)}else{let t=void 0===c?0:c.length,r=n[h.id];if(void 0===r||r.length!==t){r=[];for(let e=0;e<t;e++)r[e]=[e,0];n[h.id]=r}for(let e=0;e<t;e++){let t=r[e];t[0]=e,t[1]=c[e]}r.sort(rk);for(let e=0;e<8;e++)e<t&&r[e][1]?(o[e][0]=r[e][0],o[e][1]=r[e][1]):(o[e][0]=Number.MAX_SAFE_INTEGER,o[e][1]=0);o.sort(rz);let a=h.morphAttributes.position,s=h.morphAttributes.normal,l=0;for(let e=0;e<8;e++){let t=o[e],r=t[0],n=t[1];r!==Number.MAX_SAFE_INTEGER&&n?(a&&h.getAttribute("morphTarget"+e)!==a[r]&&h.setAttribute("morphTarget"+e,a[r]),s&&h.getAttribute("morphNormal"+e)!==s[r]&&h.setAttribute("morphNormal"+e,s[r]),i[e]=n,l+=n):(a&&!0===h.hasAttribute("morphTarget"+e)&&h.deleteAttribute("morphTarget"+e),s&&!0===h.hasAttribute("morphNormal"+e)&&h.deleteAttribute("morphNormal"+e),i[e]=0)}let d=h.morphTargetsRelative?1:1-l;u.getUniforms().setValue(e,"morphTargetBaseInfluence",d),u.getUniforms().setValue(e,"morphTargetInfluences",i)}}}}function rV(e,t,r,n){let i=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),r.remove(t.instanceMatrix),null!==t.instanceColor&&r.remove(t.instanceColor)}return{update:function(s){let o=n.render.frame,l=s.geometry,h=t.get(s,l);if(i.get(h)!==o&&(t.update(h),i.set(h,o)),s.isInstancedMesh&&(!1===s.hasEventListener("dispose",a)&&s.addEventListener("dispose",a),i.get(s)!==o&&(r.update(s.instanceMatrix,e.ARRAY_BUFFER),null!==s.instanceColor&&r.update(s.instanceColor,e.ARRAY_BUFFER),i.set(s,o))),s.isSkinnedMesh){let e=s.skeleton;i.get(e)!==o&&(e.update(),i.set(e,o))}return h},dispose:function(){i=new WeakMap}}}let rH=new ee,rW=new ei,rj=new class extends ee{constructor(e=null,t=1,r=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:r,depth:n},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},rX=new t8,rq=[],rY=[],rZ=new Float32Array(16),rJ=new Float32Array(9),rK=new Float32Array(4);function r$(e,t,r){let n=e[0];if(n<=0||n>0)return e;let i=t*r,a=rq[i];if(void 0===a&&(a=new Float32Array(i),rq[i]=a),0!==t){n.toArray(a,0);for(let n=1,i=0;n!==t;++n)i+=r,e[n].toArray(a,i)}return a}function rQ(e,t){if(e.length!==t.length)return!1;for(let r=0,n=e.length;r<n;r++)if(e[r]!==t[r])return!1;return!0}function r0(e,t){for(let r=0,n=t.length;r<n;r++)e[r]=t[r]}function r1(e,t){let r=rY[t];void 0===r&&(r=new Int32Array(t),rY[t]=r);for(let n=0;n!==t;++n)r[n]=e.allocateTextureUnit();return r}function r2(e,t){let r=this.cache;r[0]!==t&&(e.uniform1f(this.addr,t),r[0]=t)}function r3(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(rQ(r,t))return;e.uniform2fv(this.addr,t),r0(r,t)}}function r4(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else if(void 0!==t.r)(r[0]!==t.r||r[1]!==t.g||r[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b);else{if(rQ(r,t))return;e.uniform3fv(this.addr,t),r0(r,t)}}function r5(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(rQ(r,t))return;e.uniform4fv(this.addr,t),r0(r,t)}}function r6(e,t){let r=this.cache,n=t.elements;if(void 0===n){if(rQ(r,t))return;e.uniformMatrix2fv(this.addr,!1,t),r0(r,t)}else{if(rQ(r,n))return;rK.set(n),e.uniformMatrix2fv(this.addr,!1,rK),r0(r,n)}}function r8(e,t){let r=this.cache,n=t.elements;if(void 0===n){if(rQ(r,t))return;e.uniformMatrix3fv(this.addr,!1,t),r0(r,t)}else{if(rQ(r,n))return;rJ.set(n),e.uniformMatrix3fv(this.addr,!1,rJ),r0(r,n)}}function r7(e,t){let r=this.cache,n=t.elements;if(void 0===n){if(rQ(r,t))return;e.uniformMatrix4fv(this.addr,!1,t),r0(r,t)}else{if(rQ(r,n))return;rZ.set(n),e.uniformMatrix4fv(this.addr,!1,rZ),r0(r,n)}}function r9(e,t){let r=this.cache;r[0]!==t&&(e.uniform1i(this.addr,t),r[0]=t)}function ne(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y)&&(e.uniform2i(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(rQ(r,t))return;e.uniform2iv(this.addr,t),r0(r,t)}}function nt(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z)&&(e.uniform3i(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else{if(rQ(r,t))return;e.uniform3iv(this.addr,t),r0(r,t)}}function nr(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w)&&(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(rQ(r,t))return;e.uniform4iv(this.addr,t),r0(r,t)}}function nn(e,t){let r=this.cache;r[0]!==t&&(e.uniform1ui(this.addr,t),r[0]=t)}function ni(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y)&&(e.uniform2ui(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(rQ(r,t))return;e.uniform2uiv(this.addr,t),r0(r,t)}}function na(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z)&&(e.uniform3ui(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else{if(rQ(r,t))return;e.uniform3uiv(this.addr,t),r0(r,t)}}function ns(e,t){let r=this.cache;if(void 0!==t.x)(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w)&&(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(rQ(r,t))return;e.uniform4uiv(this.addr,t),r0(r,t)}}function no(e,t,r){let n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture2D(t||rH,i)}function nl(e,t,r){let n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture3D(t||rj,i)}function nh(e,t,r){let n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTextureCube(t||rX,i)}function nu(e,t,r){let n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture2DArray(t||rW,i)}function nc(e,t){e.uniform1fv(this.addr,t)}function nd(e,t){let r=r$(t,this.size,2);e.uniform2fv(this.addr,r)}function np(e,t){let r=r$(t,this.size,3);e.uniform3fv(this.addr,r)}function nf(e,t){let r=r$(t,this.size,4);e.uniform4fv(this.addr,r)}function nm(e,t){let r=r$(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,r)}function ng(e,t){let r=r$(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,r)}function nv(e,t){let r=r$(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,r)}function n_(e,t){e.uniform1iv(this.addr,t)}function nx(e,t){e.uniform2iv(this.addr,t)}function ny(e,t){e.uniform3iv(this.addr,t)}function nS(e,t){e.uniform4iv(this.addr,t)}function nM(e,t){e.uniform1uiv(this.addr,t)}function nb(e,t){e.uniform2uiv(this.addr,t)}function nE(e,t){e.uniform3uiv(this.addr,t)}function nT(e,t){e.uniform4uiv(this.addr,t)}function nw(e,t,r){let n=this.cache,i=t.length,a=r1(r,i);rQ(n,a)||(e.uniform1iv(this.addr,a),r0(n,a));for(let e=0;e!==i;++e)r.setTexture2D(t[e]||rH,a[e])}function nA(e,t,r){let n=this.cache,i=t.length,a=r1(r,i);rQ(n,a)||(e.uniform1iv(this.addr,a),r0(n,a));for(let e=0;e!==i;++e)r.setTexture3D(t[e]||rj,a[e])}function nR(e,t,r){let n=this.cache,i=t.length,a=r1(r,i);rQ(n,a)||(e.uniform1iv(this.addr,a),r0(n,a));for(let e=0;e!==i;++e)r.setTextureCube(t[e]||rX,a[e])}function nC(e,t,r){let n=this.cache,i=t.length,a=r1(r,i);rQ(n,a)||(e.uniform1iv(this.addr,a),r0(n,a));for(let e=0;e!==i;++e)r.setTexture2DArray(t[e]||rW,a[e])}class nU{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=function(e){switch(e){case 5126:return r2;case 35664:return r3;case 35665:return r4;case 35666:return r5;case 35674:return r6;case 35675:return r8;case 35676:return r7;case 5124:case 35670:return r9;case 35667:case 35671:return ne;case 35668:case 35672:return nt;case 35669:case 35673:return nr;case 5125:return nn;case 36294:return ni;case 36295:return na;case 36296:return ns;case 35678:case 36198:case 36298:case 36306:case 35682:return no;case 35679:case 36299:case 36307:return nl;case 35680:case 36300:case 36308:case 36293:return nh;case 36289:case 36303:case 36311:case 36292:return nu}}(t.type)}}class nP{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return nc;case 35664:return nd;case 35665:return np;case 35666:return nf;case 35674:return nm;case 35675:return ng;case 35676:return nv;case 5124:case 35670:return n_;case 35667:case 35671:return nx;case 35668:case 35672:return ny;case 35669:case 35673:return nS;case 5125:return nM;case 36294:return nb;case 36295:return nE;case 36296:return nT;case 35678:case 36198:case 36298:case 36306:case 35682:return nw;case 35679:case 36299:case 36307:return nA;case 35680:case 36300:case 36308:case 36293:return nR;case 36289:case 36303:case 36311:case 36292:return nC}}(t.type)}}class nL{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,r){let n=this.seq;for(let i=0,a=n.length;i!==a;++i){let a=n[i];a.setValue(e,t[a.id],r)}}}let nD=/(\w+)(\])?(\[|\.)?/g;function nI(e,t){e.seq.push(t),e.map[t.id]=t}class nO{constructor(e,t){this.seq=[],this.map={};let r=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<r;++n){let r=e.getActiveUniform(t,n),i=e.getUniformLocation(t,r.name);!function(e,t,r){let n=e.name,i=n.length;for(nD.lastIndex=0;;){let a=nD.exec(n),s=nD.lastIndex,o=a[1],l="]"===a[2],h=a[3];if(l&&(o|=0),void 0===h||"["===h&&s+2===i){nI(r,void 0===h?new nU(o,e,t):new nP(o,e,t));break}{let e=r.map[o];void 0===e&&nI(r,e=new nL(o)),r=e}}}(r,i,this)}}setValue(e,t,r,n){let i=this.map[t];void 0!==i&&i.setValue(e,r,n)}setOptional(e,t,r){let n=t[r];void 0!==n&&this.setValue(e,r,n)}static upload(e,t,r,n){for(let i=0,a=t.length;i!==a;++i){let a=t[i],s=r[a.id];!1!==s.needsUpdate&&a.setValue(e,s.value,n)}}static seqWithValue(e,t){let r=[];for(let n=0,i=e.length;n!==i;++n){let i=e[n];i.id in t&&r.push(i)}return r}}function nN(e,t,r){let n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),n}let nF=0;function nB(e,t,r){let n=e.getShaderParameter(t,e.COMPILE_STATUS),i=e.getShaderInfoLog(t).trim();if(n&&""===i)return"";let a=/ERROR: 0:(\d+)/.exec(i);if(!a)return i;{let n=parseInt(a[1]);return r.toUpperCase()+"\n\n"+i+"\n\n"+function(e,t){let r=e.split("\n"),n=[],i=Math.max(t-6,0),a=Math.min(t+6,r.length);for(let e=i;e<a;e++){let i=e+1;n.push(`${i===t?">":" "} ${i}: ${r[e]}`)}return n.join("\n")}(e.getShaderSource(t),n)}}function nz(e){return""!==e}function nk(e,t){let r=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,r).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function nG(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}let nV=/^[ \t]*#include +<([\w\d./]+)>/gm;function nH(e){return e.replace(nV,nj)}let nW=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function nj(e,t){let r=rh[t];if(void 0===r){let e=nW.get(t);if(void 0!==e)r=rh[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e);else throw Error("Can not resolve #include <"+t+">")}return nH(r)}let nX=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function nq(e){return e.replace(nX,nY)}function nY(e,t,r,n){let i="";for(let e=parseInt(t);e<parseInt(r);e++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function nZ(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function nJ(e,t,r,n){let i,a,s,o,l,h;let u=e.getContext(),c=r.defines,d=r.vertexShader,v=r.fragmentShader,_=(l="SHADOWMAP_TYPE_BASIC",1===r.shadowMapType?l="SHADOWMAP_TYPE_PCF":2===r.shadowMapType?l="SHADOWMAP_TYPE_PCF_SOFT":3===r.shadowMapType&&(l="SHADOWMAP_TYPE_VSM"),l),S=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:t="ENVMAP_TYPE_CUBE_UV"}return t}(r),M=(h="ENVMAP_MODE_REFLECTION",r.envMap&&302===r.envMapMode&&(h="ENVMAP_MODE_REFRACTION"),h),b=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(r),E=function(e){let t=e.envMapCubeUVHeight;if(null===t)return null;let r=Math.log2(t)-2;return{texelWidth:1/(3*Math.max(Math.pow(2,r),112)),texelHeight:1/t,maxMip:r}}(r),T=r.isWebGL2?"":[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||"physical"===r.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(nz).join("\n"),w=function(e){let t=[];for(let r in e){let n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}(c),A=u.createProgram(),R=r.glslVersion?"#version "+r.glslVersion+"\n":"";r.isRawShaderMaterial?((i=["#define SHADER_TYPE "+r.shaderType,"#define SHADER_NAME "+r.shaderName,w].filter(nz).join("\n")).length>0&&(i+="\n"),(a=[T,"#define SHADER_TYPE "+r.shaderType,"#define SHADER_NAME "+r.shaderName,w].filter(nz).join("\n")).length>0&&(a+="\n")):(i=[nZ(r),"#define SHADER_TYPE "+r.shaderType,"#define SHADER_NAME "+r.shaderName,w,r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+M:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",r.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",r.displacementMap?"#define USE_DISPLACEMENTMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.anisotropy?"#define USE_ANISOTROPY":"",r.anisotropyMap?"#define USE_ANISOTROPYMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",r.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",r.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.alphaHash?"#define USE_ALPHAHASH":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",r.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",r.mapUv?"#define MAP_UV "+r.mapUv:"",r.alphaMapUv?"#define ALPHAMAP_UV "+r.alphaMapUv:"",r.lightMapUv?"#define LIGHTMAP_UV "+r.lightMapUv:"",r.aoMapUv?"#define AOMAP_UV "+r.aoMapUv:"",r.emissiveMapUv?"#define EMISSIVEMAP_UV "+r.emissiveMapUv:"",r.bumpMapUv?"#define BUMPMAP_UV "+r.bumpMapUv:"",r.normalMapUv?"#define NORMALMAP_UV "+r.normalMapUv:"",r.displacementMapUv?"#define DISPLACEMENTMAP_UV "+r.displacementMapUv:"",r.metalnessMapUv?"#define METALNESSMAP_UV "+r.metalnessMapUv:"",r.roughnessMapUv?"#define ROUGHNESSMAP_UV "+r.roughnessMapUv:"",r.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+r.anisotropyMapUv:"",r.clearcoatMapUv?"#define CLEARCOATMAP_UV "+r.clearcoatMapUv:"",r.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+r.clearcoatNormalMapUv:"",r.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+r.clearcoatRoughnessMapUv:"",r.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+r.iridescenceMapUv:"",r.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+r.iridescenceThicknessMapUv:"",r.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+r.sheenColorMapUv:"",r.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+r.sheenRoughnessMapUv:"",r.specularMapUv?"#define SPECULARMAP_UV "+r.specularMapUv:"",r.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+r.specularColorMapUv:"",r.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+r.specularIntensityMapUv:"",r.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+r.transmissionMapUv:"",r.thicknessMapUv?"#define THICKNESSMAP_UV "+r.thicknessMapUv:"",r.vertexTangents&&!1===r.flatShading?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUv1s?"#define USE_UV1":"",r.vertexUv2s?"#define USE_UV2":"",r.vertexUv3s?"#define USE_UV3":"",r.pointsUvs?"#define USE_POINTS_UV":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.morphColors&&r.isWebGL2?"#define USE_MORPHCOLORS":"",r.morphTargetsCount>0&&r.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",r.morphTargetsCount>0&&r.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+r.morphTextureStride:"",r.morphTargetsCount>0&&r.isWebGL2?"#define MORPHTARGETS_COUNT "+r.morphTargetsCount:"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+_:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.numLightProbes>0?"#define USE_LIGHT_PROBES":"",r.useLegacyLights?"#define LEGACY_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(nz).join("\n"),a=[T,nZ(r),"#define SHADER_TYPE "+r.shaderType,"#define SHADER_NAME "+r.shaderName,w,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+S:"",r.envMap?"#define "+M:"",r.envMap?"#define "+b:"",E?"#define CUBEUV_TEXEL_WIDTH "+E.texelWidth:"",E?"#define CUBEUV_TEXEL_HEIGHT "+E.texelHeight:"",E?"#define CUBEUV_MAX_MIP "+E.maxMip+".0":"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",r.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.anisotropy?"#define USE_ANISOTROPY":"",r.anisotropyMap?"#define USE_ANISOTROPYMAP":"",r.clearcoat?"#define USE_CLEARCOAT":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.iridescence?"#define USE_IRIDESCENCE":"",r.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",r.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",r.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.alphaTest?"#define USE_ALPHATEST":"",r.alphaHash?"#define USE_ALPHAHASH":"",r.sheen?"#define USE_SHEEN":"",r.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",r.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.vertexTangents&&!1===r.flatShading?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUv1s?"#define USE_UV1":"",r.vertexUv2s?"#define USE_UV2":"",r.vertexUv3s?"#define USE_UV3":"",r.pointsUvs?"#define USE_POINTS_UV":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+_:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.numLightProbes>0?"#define USE_LIGHT_PROBES":"",r.useLegacyLights?"#define LEGACY_LIGHTS":"",r.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==r.toneMapping?"#define TONE_MAPPING":"",0!==r.toneMapping?rh.tonemapping_pars_fragment:"",0!==r.toneMapping?function(e,t){let r;switch(t){case 1:r="Linear";break;case 2:r="Reinhard";break;case 3:r="OptimizedCineon";break;case 4:r="ACESFilmic";break;case 5:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),r="Linear"}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",r.opaque?"#define OPAQUE":"",rh.colorspace_pars_fragment,function(e,t){let r=function(e){let t;let r=X.getPrimaries(X.workingColorSpace),n=X.getPrimaries(e);switch(r===n?t="":"p3"===r&&n===x?t="LinearDisplayP3ToLinearSRGB":r===x&&"p3"===n&&(t="LinearSRGBToLinearDisplayP3"),e){case f:case g:return[t,"LinearTransferOETF"];case p:case m:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),[t,"LinearTransferOETF"]}}(t);return`vec4 ${e}( vec4 value ) { return ${r[0]}( ${r[1]}( value ) ); }`}("linearToOutputTexel",r.outputColorSpace),r.useDepthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(nz).join("\n")),d=nG(d=nk(d=nH(d),r),r),v=nG(v=nk(v=nH(v),r),r),d=nq(d),v=nq(v),r.isWebGL2&&!0!==r.isRawShaderMaterial&&(R="#version 300 es\n",i="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+i,a=["precision mediump sampler2DArray;","#define varying in",r.glslVersion===y?"":"layout(location = 0) out highp vec4 pc_fragColor;",r.glslVersion===y?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);let C=R+i+d,U=R+a+v,P=nN(u,u.VERTEX_SHADER,C),L=nN(u,u.FRAGMENT_SHADER,U);function D(t){if(e.debug.checkShaderErrors){let r=u.getProgramInfoLog(A).trim(),n=u.getShaderInfoLog(P).trim(),s=u.getShaderInfoLog(L).trim(),o=!0,l=!0;if(!1===u.getProgramParameter(A,u.LINK_STATUS)){if(o=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(u,A,P,L);else{let e=nB(u,P,"vertex"),t=nB(u,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+u.getError()+" - VALIDATE_STATUS "+u.getProgramParameter(A,u.VALIDATE_STATUS)+"\n\nProgram Info Log: "+r+"\n"+e+"\n"+t)}}else""!==r?console.warn("THREE.WebGLProgram: Program Info Log:",r):(""===n||""===s)&&(l=!1);l&&(t.diagnostics={runnable:o,programLog:r,vertexShader:{log:n,prefix:i},fragmentShader:{log:s,prefix:a}})}u.deleteShader(P),u.deleteShader(L),s=new nO(u,A),o=function(e,t){let r={},n=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){let n=e.getActiveAttrib(t,i),a=n.name,s=1;n.type===e.FLOAT_MAT2&&(s=2),n.type===e.FLOAT_MAT3&&(s=3),n.type===e.FLOAT_MAT4&&(s=4),r[a]={type:n.type,location:e.getAttribLocation(t,a),locationSize:s}}return r}(u,A)}u.attachShader(A,P),u.attachShader(A,L),void 0!==r.index0AttributeName?u.bindAttribLocation(A,0,r.index0AttributeName):!0===r.morphTargets&&u.bindAttribLocation(A,0,"position"),u.linkProgram(A),this.getUniforms=function(){return void 0===s&&D(this),s},this.getAttributes=function(){return void 0===o&&D(this),o};let I=!1===r.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===I&&(I=u.getProgramParameter(A,37297)),I},this.destroy=function(){n.releaseStatesOfProgram(this),u.deleteProgram(A),this.program=void 0},this.type=r.shaderType,this.name=r.shaderName,this.id=nF++,this.cacheKey=t,this.usedTimes=1,this.program=A,this.vertexShader=P,this.fragmentShader=L,this}let nK=0;class n${constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,r=e.fragmentShader,n=this._getShaderStage(t),i=this._getShaderStage(r),a=this._getShaderCacheForMaterial(e);return!1===a.has(n)&&(a.add(n),n.usedTimes++),!1===a.has(i)&&(a.add(i),i.usedTimes++),this}remove(e){for(let t of this.materialCache.get(e))t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache,r=t.get(e);return void 0===r&&(r=new Set,t.set(e,r)),r}_getShaderStage(e){let t=this.shaderCache,r=t.get(e);return void 0===r&&(r=new nQ(e),t.set(e,r)),r}}class nQ{constructor(e){this.id=nK++,this.code=e,this.usedTimes=0}}function n0(e,t,r,n,i,a,s){let o=new eq,l=new n$,c=[],d=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures,g=i.precision,v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(e){return 0===e?"uv":`uv${e}`}return{getParameters:function(a,o,c,y,S){let M,b,E,T;let w=y.fog,A=S.geometry,R=a.isMeshStandardMaterial?y.environment:null,C=(a.isMeshStandardMaterial?r:t).get(a.envMap||R),U=C&&306===C.mapping?C.image.height:null,P=v[a.type];null!==a.precision&&(g=i.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",g,"instead.");let L=A.morphAttributes.position||A.morphAttributes.normal||A.morphAttributes.color,D=void 0!==L?L.length:0,I=0;if(void 0!==A.morphAttributes.position&&(I=1),void 0!==A.morphAttributes.normal&&(I=2),void 0!==A.morphAttributes.color&&(I=3),P){let e=rc[P];M=e.vertexShader,b=e.fragmentShader}else M=a.vertexShader,b=a.fragmentShader,l.update(a),E=l.getVertexShaderID(a),T=l.getFragmentShaderID(a);let O=e.getRenderTarget(),N=!0===S.isInstancedMesh,F=!!a.map,B=!!a.matcap,z=!!C,k=!!a.aoMap,G=!!a.lightMap,V=!!a.bumpMap,H=!!a.normalMap,W=!!a.displacementMap,j=!!a.emissiveMap,q=!!a.metalnessMap,Y=!!a.roughnessMap,Z=a.anisotropy>0,J=a.clearcoat>0,K=a.iridescence>0,$=a.sheen>0,Q=a.transmission>0,ee=Z&&!!a.anisotropyMap,et=J&&!!a.clearcoatMap,er=J&&!!a.clearcoatNormalMap,en=J&&!!a.clearcoatRoughnessMap,ei=K&&!!a.iridescenceMap,ea=K&&!!a.iridescenceThicknessMap,es=$&&!!a.sheenColorMap,eo=$&&!!a.sheenRoughnessMap,el=!!a.specularMap,eh=!!a.specularColorMap,eu=!!a.specularIntensityMap,ec=Q&&!!a.transmissionMap,ed=Q&&!!a.thicknessMap,ep=!!a.gradientMap,ef=!!a.alphaMap,em=a.alphaTest>0,eg=!!a.alphaHash,ev=!!a.extensions,e_=!!A.attributes.uv1,ex=!!A.attributes.uv2,ey=!!A.attributes.uv3,eS=0;return a.toneMapped&&(null===O||!0===O.isXRRenderTarget)&&(eS=e.toneMapping),{isWebGL2:d,shaderID:P,shaderType:a.type,shaderName:a.name,vertexShader:M,fragmentShader:b,defines:a.defines,customVertexShaderID:E,customFragmentShaderID:T,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:g,instancing:N,instancingColor:N&&null!==S.instanceColor,supportsVertexTextures:m,outputColorSpace:null===O?e.outputColorSpace:!0===O.isXRRenderTarget?O.texture.colorSpace:f,map:F,matcap:B,envMap:z,envMapMode:z&&C.mapping,envMapCubeUVHeight:U,aoMap:k,lightMap:G,bumpMap:V,normalMap:H,displacementMap:m&&W,emissiveMap:j,normalMapObjectSpace:H&&1===a.normalMapType,normalMapTangentSpace:H&&0===a.normalMapType,metalnessMap:q,roughnessMap:Y,anisotropy:Z,anisotropyMap:ee,clearcoat:J,clearcoatMap:et,clearcoatNormalMap:er,clearcoatRoughnessMap:en,iridescence:K,iridescenceMap:ei,iridescenceThicknessMap:ea,sheen:$,sheenColorMap:es,sheenRoughnessMap:eo,specularMap:el,specularColorMap:eh,specularIntensityMap:eu,transmission:Q,transmissionMap:ec,thicknessMap:ed,gradientMap:ep,opaque:!1===a.transparent&&1===a.blending,alphaMap:ef,alphaTest:em,alphaHash:eg,combine:a.combine,mapUv:F&&x(a.map.channel),aoMapUv:k&&x(a.aoMap.channel),lightMapUv:G&&x(a.lightMap.channel),bumpMapUv:V&&x(a.bumpMap.channel),normalMapUv:H&&x(a.normalMap.channel),displacementMapUv:W&&x(a.displacementMap.channel),emissiveMapUv:j&&x(a.emissiveMap.channel),metalnessMapUv:q&&x(a.metalnessMap.channel),roughnessMapUv:Y&&x(a.roughnessMap.channel),anisotropyMapUv:ee&&x(a.anisotropyMap.channel),clearcoatMapUv:et&&x(a.clearcoatMap.channel),clearcoatNormalMapUv:er&&x(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:en&&x(a.clearcoatRoughnessMap.channel),iridescenceMapUv:ei&&x(a.iridescenceMap.channel),iridescenceThicknessMapUv:ea&&x(a.iridescenceThicknessMap.channel),sheenColorMapUv:es&&x(a.sheenColorMap.channel),sheenRoughnessMapUv:eo&&x(a.sheenRoughnessMap.channel),specularMapUv:el&&x(a.specularMap.channel),specularColorMapUv:eh&&x(a.specularColorMap.channel),specularIntensityMapUv:eu&&x(a.specularIntensityMap.channel),transmissionMapUv:ec&&x(a.transmissionMap.channel),thicknessMapUv:ed&&x(a.thicknessMap.channel),alphaMapUv:ef&&x(a.alphaMap.channel),vertexTangents:!!A.attributes.tangent&&(H||Z),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!A.attributes.color&&4===A.attributes.color.itemSize,vertexUv1s:e_,vertexUv2s:ex,vertexUv3s:ey,pointsUvs:!0===S.isPoints&&!!A.attributes.uv&&(F||ef),fog:!!w,useFog:!0===a.fog,fogExp2:w&&w.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:p,skinning:!0===S.isSkinnedMesh,morphTargets:void 0!==A.morphAttributes.position,morphNormals:void 0!==A.morphAttributes.normal,morphColors:void 0!==A.morphAttributes.color,morphTargetsCount:D,morphTextureStride:I,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&c.length>0,shadowMapType:e.shadowMap.type,toneMapping:eS,useLegacyLights:e._useLegacyLights,decodeVideoTexture:F&&!0===a.map.isVideoTexture&&X.getTransfer(a.map.colorSpace)===_,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===u,flipSided:a.side===h,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:ev&&!0===a.extensions.derivatives,extensionFragDepth:ev&&!0===a.extensions.fragDepth,extensionDrawBuffers:ev&&!0===a.extensions.drawBuffers,extensionShaderTextureLOD:ev&&!0===a.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){let r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.customVertexShaderID),r.push(t.customFragmentShaderID)),void 0!==t.defines)for(let e in t.defines)r.push(e),r.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(r.push(t.precision),r.push(t.outputColorSpace),r.push(t.envMapMode),r.push(t.envMapCubeUVHeight),r.push(t.mapUv),r.push(t.alphaMapUv),r.push(t.lightMapUv),r.push(t.aoMapUv),r.push(t.bumpMapUv),r.push(t.normalMapUv),r.push(t.displacementMapUv),r.push(t.emissiveMapUv),r.push(t.metalnessMapUv),r.push(t.roughnessMapUv),r.push(t.anisotropyMapUv),r.push(t.clearcoatMapUv),r.push(t.clearcoatNormalMapUv),r.push(t.clearcoatRoughnessMapUv),r.push(t.iridescenceMapUv),r.push(t.iridescenceThicknessMapUv),r.push(t.sheenColorMapUv),r.push(t.sheenRoughnessMapUv),r.push(t.specularMapUv),r.push(t.specularColorMapUv),r.push(t.specularIntensityMapUv),r.push(t.transmissionMapUv),r.push(t.thicknessMapUv),r.push(t.combine),r.push(t.fogExp2),r.push(t.sizeAttenuation),r.push(t.morphTargetsCount),r.push(t.morphAttributeCount),r.push(t.numDirLights),r.push(t.numPointLights),r.push(t.numSpotLights),r.push(t.numSpotLightMaps),r.push(t.numHemiLights),r.push(t.numRectAreaLights),r.push(t.numDirLightShadows),r.push(t.numPointLightShadows),r.push(t.numSpotLightShadows),r.push(t.numSpotLightShadowsWithMaps),r.push(t.numLightProbes),r.push(t.shadowMapType),r.push(t.toneMapping),r.push(t.numClippingPlanes),r.push(t.numClipIntersection),r.push(t.depthPacking),o.disableAll(),t.isWebGL2&&o.enable(0),t.supportsVertexTextures&&o.enable(1),t.instancing&&o.enable(2),t.instancingColor&&o.enable(3),t.matcap&&o.enable(4),t.envMap&&o.enable(5),t.normalMapObjectSpace&&o.enable(6),t.normalMapTangentSpace&&o.enable(7),t.clearcoat&&o.enable(8),t.iridescence&&o.enable(9),t.alphaTest&&o.enable(10),t.vertexColors&&o.enable(11),t.vertexAlphas&&o.enable(12),t.vertexUv1s&&o.enable(13),t.vertexUv2s&&o.enable(14),t.vertexUv3s&&o.enable(15),t.vertexTangents&&o.enable(16),t.anisotropy&&o.enable(17),t.alphaHash&&o.enable(18),r.push(o.mask),o.disableAll(),t.fog&&o.enable(0),t.useFog&&o.enable(1),t.flatShading&&o.enable(2),t.logarithmicDepthBuffer&&o.enable(3),t.skinning&&o.enable(4),t.morphTargets&&o.enable(5),t.morphNormals&&o.enable(6),t.morphColors&&o.enable(7),t.premultipliedAlpha&&o.enable(8),t.shadowMapEnabled&&o.enable(9),t.useLegacyLights&&o.enable(10),t.doubleSided&&o.enable(11),t.flipSided&&o.enable(12),t.useDepthPacking&&o.enable(13),t.dithering&&o.enable(14),t.transmission&&o.enable(15),t.sheen&&o.enable(16),t.opaque&&o.enable(17),t.pointsUvs&&o.enable(18),t.decodeVideoTexture&&o.enable(19),r.push(o.mask),r.push(e.outputColorSpace)),r.push(t.customProgramCacheKey),r.join()},getUniforms:function(e){let t;let r=v[e.type];if(r){let e=rc[r];t=t2.clone(e.uniforms)}else t=e.uniforms;return t},acquireProgram:function(t,r){let n;for(let e=0,t=c.length;e<t;e++){let t=c[e];if(t.cacheKey===r){n=t,++n.usedTimes;break}}return void 0===n&&(n=new nJ(e,r,t,a),c.push(n)),n},releaseProgram:function(e){if(0==--e.usedTimes){let t=c.indexOf(e);c[t]=c[c.length-1],c.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:c,dispose:function(){l.dispose()}}}function n1(){let e=new WeakMap;return{get:function(t){let r=e.get(t);return void 0===r&&(r={},e.set(t,r)),r},remove:function(t){e.delete(t)},update:function(t,r,n){e.get(t)[r]=n},dispose:function(){e=new WeakMap}}}function n2(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function n3(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function n4(){let e=[],t=0,r=[],n=[],i=[];function a(r,n,i,a,s,o){let l=e[t];return void 0===l?(l={id:r.id,object:r,geometry:n,material:i,groupOrder:a,renderOrder:r.renderOrder,z:s,group:o},e[t]=l):(l.id=r.id,l.object=r,l.geometry=n,l.material=i,l.groupOrder=a,l.renderOrder=r.renderOrder,l.z=s,l.group=o),t++,l}return{opaque:r,transmissive:n,transparent:i,init:function(){t=0,r.length=0,n.length=0,i.length=0},push:function(e,t,s,o,l,h){let u=a(e,t,s,o,l,h);s.transmission>0?n.push(u):!0===s.transparent?i.push(u):r.push(u)},unshift:function(e,t,s,o,l,h){let u=a(e,t,s,o,l,h);s.transmission>0?n.unshift(u):!0===s.transparent?i.unshift(u):r.unshift(u)},finish:function(){for(let r=t,n=e.length;r<n;r++){let t=e[r];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){r.length>1&&r.sort(e||n2),n.length>1&&n.sort(t||n3),i.length>1&&i.sort(t||n3)}}}function n5(){let e=new WeakMap;return{get:function(t,r){let n;let i=e.get(t);return void 0===i?(n=new n4,e.set(t,[n])):r>=i.length?(n=new n4,i.push(n)):n=i[r],n},dispose:function(){e=new WeakMap}}}function n6(){let e={};return{get:function(t){let r;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":r={direction:new es,color:new tf};break;case"SpotLight":r={position:new es,direction:new es,color:new tf,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new es,color:new tf,distance:0,decay:0};break;case"HemisphereLight":r={direction:new es,skyColor:new tf,groundColor:new tf};break;case"RectAreaLight":r={color:new tf,position:new es,halfWidth:new es,halfHeight:new es}}return e[t.id]=r,r}}}let n8=0;function n7(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function n9(e,t){let r=new n6,n=function(){let e={};return{get:function(t){let r;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":case"SpotLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new O};break;case"PointLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new O,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=r,r}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let e=0;e<9;e++)i.probe.push(new es);let a=new es,s=new eN,o=new eN;return{setup:function(a,s){let o=0,l=0,h=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let u=0,c=0,d=0,p=0,f=0,m=0,g=0,v=0,_=0,x=0,y=0;a.sort(n7);let S=!0===s?Math.PI:1;for(let e=0,t=a.length;e<t;e++){let t=a[e],s=t.color,M=t.intensity,b=t.distance,E=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)o+=s.r*M*S,l+=s.g*M*S,h+=s.b*M*S;else if(t.isLightProbe){for(let e=0;e<9;e++)i.probe[e].addScaledVector(t.sh.coefficients[e],M);y++}else if(t.isDirectionalLight){let e=r.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*S),t.castShadow){let e=t.shadow,r=n.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,i.directionalShadow[u]=r,i.directionalShadowMap[u]=E,i.directionalShadowMatrix[u]=t.shadow.matrix,m++}i.directional[u]=e,u++}else if(t.isSpotLight){let e=r.get(t);e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(s).multiplyScalar(M*S),e.distance=b,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,i.spot[d]=e;let a=t.shadow;if(t.map&&(i.spotLightMap[_]=t.map,_++,a.updateMatrices(t),t.castShadow&&x++),i.spotLightMatrix[d]=a.matrix,t.castShadow){let e=n.get(t);e.shadowBias=a.bias,e.shadowNormalBias=a.normalBias,e.shadowRadius=a.radius,e.shadowMapSize=a.mapSize,i.spotShadow[d]=e,i.spotShadowMap[d]=E,v++}d++}else if(t.isRectAreaLight){let e=r.get(t);e.color.copy(s).multiplyScalar(M),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),i.rectArea[p]=e,p++}else if(t.isPointLight){let e=r.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*S),e.distance=t.distance,e.decay=t.decay,t.castShadow){let e=t.shadow,r=n.get(t);r.shadowBias=e.bias,r.shadowNormalBias=e.normalBias,r.shadowRadius=e.radius,r.shadowMapSize=e.mapSize,r.shadowCameraNear=e.camera.near,r.shadowCameraFar=e.camera.far,i.pointShadow[c]=r,i.pointShadowMap[c]=E,i.pointShadowMatrix[c]=t.shadow.matrix,g++}i.point[c]=e,c++}else if(t.isHemisphereLight){let e=r.get(t);e.skyColor.copy(t.color).multiplyScalar(M*S),e.groundColor.copy(t.groundColor).multiplyScalar(M*S),i.hemi[f]=e,f++}}p>0&&(t.isWebGL2?(i.rectAreaLTC1=ru.LTC_FLOAT_1,i.rectAreaLTC2=ru.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=ru.LTC_FLOAT_1,i.rectAreaLTC2=ru.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=ru.LTC_HALF_1,i.rectAreaLTC2=ru.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=o,i.ambient[1]=l,i.ambient[2]=h;let M=i.hash;(M.directionalLength!==u||M.pointLength!==c||M.spotLength!==d||M.rectAreaLength!==p||M.hemiLength!==f||M.numDirectionalShadows!==m||M.numPointShadows!==g||M.numSpotShadows!==v||M.numSpotMaps!==_||M.numLightProbes!==y)&&(i.directional.length=u,i.spot.length=d,i.rectArea.length=p,i.point.length=c,i.hemi.length=f,i.directionalShadow.length=m,i.directionalShadowMap.length=m,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=v,i.spotShadowMap.length=v,i.directionalShadowMatrix.length=m,i.pointShadowMatrix.length=g,i.spotLightMatrix.length=v+_-x,i.spotLightMap.length=_,i.numSpotLightShadowsWithMaps=x,i.numLightProbes=y,M.directionalLength=u,M.pointLength=c,M.spotLength=d,M.rectAreaLength=p,M.hemiLength=f,M.numDirectionalShadows=m,M.numPointShadows=g,M.numSpotShadows=v,M.numSpotMaps=_,M.numLightProbes=y,i.version=n8++)},setupView:function(e,t){let r=0,n=0,l=0,h=0,u=0,c=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){let d=e[t];if(d.isDirectionalLight){let e=i.directional[r];e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(c),r++}else if(d.isSpotLight){let e=i.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(c),e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(c),l++}else if(d.isRectAreaLight){let e=i.rectArea[h];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(c),o.identity(),s.copy(d.matrixWorld),s.premultiply(c),o.extractRotation(s),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),h++}else if(d.isPointLight){let e=i.point[n];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(c),n++}else if(d.isHemisphereLight){let e=i.hemi[u];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(c),u++}}},state:i}}function ie(e,t){let r=new n9(e,t),n=[],i=[];return{init:function(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:r},setupLights:function(e){r.setup(n,e)},setupLightsView:function(e){r.setupView(n,e)},pushLight:function(e){n.push(e)},pushShadow:function(e){i.push(e)}}}function it(e,t){let r=new WeakMap;return{get:function(n,i=0){let a;let s=r.get(n);return void 0===s?(a=new ie(e,t),r.set(n,[a])):i>=s.length?(a=new ie(e,t),s.push(a)):a=s[i],a},dispose:function(){r=new WeakMap}}}class ir extends tv{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ii extends tv{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function ia(e,t,r){let n=new ra,i=new O,a=new O,s=new et,o=new ir({depthPacking:d}),c=new ii,p={},f=r.maxTextureSize,m={[l]:h,[h]:l,[u]:u},g=new t3({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new O},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),v=g.clone();v.defines.HORIZONTAL_PASS=1;let _=new tL;_.setAttribute("position",new tS(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let x=new tJ(_,g),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let S=this.type;function M(t,r,n,i){let a=null,s=!0===n.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==s)a=s;else if(a=!0===n.isPointLight?c:o,e.localClippingEnabled&&!0===r.clipShadows&&Array.isArray(r.clippingPlanes)&&0!==r.clippingPlanes.length||r.displacementMap&&0!==r.displacementScale||r.alphaMap&&r.alphaTest>0||r.map&&r.alphaTest>0){let e=a.uuid,t=r.uuid,n=p[e];void 0===n&&(n={},p[e]=n);let i=n[t];void 0===i&&(i=a.clone(),n[t]=i),a=i}return a.visible=r.visible,a.wireframe=r.wireframe,3===i?a.side=null!==r.shadowSide?r.shadowSide:r.side:a.side=null!==r.shadowSide?r.shadowSide:m[r.side],a.alphaMap=r.alphaMap,a.alphaTest=r.alphaTest,a.map=r.map,a.clipShadows=r.clipShadows,a.clippingPlanes=r.clippingPlanes,a.clipIntersection=r.clipIntersection,a.displacementMap=r.displacementMap,a.displacementScale=r.displacementScale,a.displacementBias=r.displacementBias,a.wireframeLinewidth=r.wireframeLinewidth,a.linewidth=r.linewidth,!0===n.isPointLight&&!0===a.isMeshDistanceMaterial&&(e.properties.get(a).light=n),a}this.render=function(r,o,l){if(!1===y.enabled||!1===y.autoUpdate&&!1===y.needsUpdate||0===r.length)return;let h=e.getRenderTarget(),u=e.getActiveCubeFace(),c=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);let p=3!==S&&3===this.type,m=3===S&&3!==this.type;for(let h=0,u=r.length;h<u;h++){let u=r[h],c=u.shadow;if(void 0===c){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;i.copy(c.mapSize);let _=c.getFrameExtents();if(i.multiply(_),a.copy(c.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(a.x=Math.floor(f/_.x),i.x=a.x*_.x,c.mapSize.x=a.x),i.y>f&&(a.y=Math.floor(f/_.y),i.y=a.y*_.y,c.mapSize.y=a.y)),null===c.map||!0===p||!0===m){let e=3!==this.type?{minFilter:1003,magFilter:1003}:{};null!==c.map&&c.map.dispose(),c.map=new en(i.x,i.y,e),c.map.texture.name=u.name+".shadowMap",c.camera.updateProjectionMatrix()}e.setRenderTarget(c.map),e.clear();let y=c.getViewportCount();for(let r=0;r<y;r++){let i=c.getViewport(r);s.set(a.x*i.x,a.y*i.y,a.x*i.z,a.y*i.w),d.viewport(s),c.updateMatrices(u,r),n=c.getFrustum(),function r(i,a,s,o,l){if(!1===i.visible)return;if(i.layers.test(a.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===l)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,i.matrixWorld);let r=t.update(i),n=i.material;if(Array.isArray(n)){let t=r.groups;for(let a=0,h=t.length;a<h;a++){let h=t[a],u=n[h.materialIndex];if(u&&u.visible){let t=M(i,u,o,l);e.renderBufferDirect(s,null,r,t,i,h)}}}else if(n.visible){let t=M(i,n,o,l);e.renderBufferDirect(s,null,r,t,i,null)}}let h=i.children;for(let e=0,t=h.length;e<t;e++)r(h[e],a,s,o,l)}(o,l,c.camera,u,this.type)}!0!==c.isPointLightShadow&&3===this.type&&function(r,n){let a=t.update(x);g.defines.VSM_SAMPLES!==r.blurSamples&&(g.defines.VSM_SAMPLES=r.blurSamples,v.defines.VSM_SAMPLES=r.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),null===r.mapPass&&(r.mapPass=new en(i.x,i.y)),g.uniforms.shadow_pass.value=r.map.texture,g.uniforms.resolution.value=r.mapSize,g.uniforms.radius.value=r.radius,e.setRenderTarget(r.mapPass),e.clear(),e.renderBufferDirect(n,null,a,g,x,null),v.uniforms.shadow_pass.value=r.mapPass.texture,v.uniforms.resolution.value=r.mapSize,v.uniforms.radius.value=r.radius,e.setRenderTarget(r.map),e.clear(),e.renderBufferDirect(n,null,a,v,x,null)}(c,l),c.needsUpdate=!1}S=this.type,y.needsUpdate=!1,e.setRenderTarget(h,u,c)}}function is(e,t,r){let n=r.isWebGL2,i=new function(){let t=!1,r=new et,n=null,i=new et(0,0,0,0);return{setMask:function(r){n===r||t||(e.colorMask(r,r,r,r),n=r)},setLocked:function(e){t=e},setClear:function(t,n,a,s,o){!0===o&&(t*=s,n*=s,a*=s),r.set(t,n,a,s),!1===i.equals(r)&&(e.clearColor(t,n,a,s),i.copy(r))},reset:function(){t=!1,n=null,i.set(-1,0,0,0)}}},a=new function(){let t=!1,r=null,n=null,i=null;return{setTest:function(t){t?H(e.DEPTH_TEST):W(e.DEPTH_TEST)},setMask:function(n){r===n||t||(e.depthMask(n),r=n)},setFunc:function(t){if(n!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}n=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,r=null,n=null,i=null}}},s=new function(){let t=!1,r=null,n=null,i=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(r){t||(r?H(e.STENCIL_TEST):W(e.STENCIL_TEST))},setMask:function(n){r===n||t||(e.stencilMask(n),r=n)},setFunc:function(t,r,s){(n!==t||i!==r||a!==s)&&(e.stencilFunc(t,r,s),n=t,i=r,a=s)},setOp:function(t,r,n){(s!==t||o!==r||l!==n)&&(e.stencilOp(t,r,n),s=t,o=r,l=n)},setLocked:function(e){t=e},setClear:function(t){h!==t&&(e.clearStencil(t),h=t)},reset:function(){t=!1,r=null,n=null,i=null,a=null,s=null,o=null,l=null,h=null}}},o=new WeakMap,l=new WeakMap,c={},d={},p=new WeakMap,f=[],m=null,g=!1,v=null,_=null,x=null,y=null,S=null,M=null,b=null,E=new tf(0,0,0),T=0,w=!1,A=null,R=null,C=null,U=null,P=null,L=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),D=!1,I=e.getParameter(e.VERSION);-1!==I.indexOf("WebGL")?D=parseFloat(/^WebGL (\d)/.exec(I)[1])>=1:-1!==I.indexOf("OpenGL ES")&&(D=parseFloat(/^OpenGL ES (\d)/.exec(I)[1])>=2);let O=null,N={},F=e.getParameter(e.SCISSOR_BOX),B=e.getParameter(e.VIEWPORT),z=new et().fromArray(F),k=new et().fromArray(B);function G(t,r,i,a){let s=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let o=0;o<i;o++)n&&(t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY)?e.texImage3D(r,0,e.RGBA,1,1,a,0,e.RGBA,e.UNSIGNED_BYTE,s):e.texImage2D(r+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,s);return o}let V={};function H(t){!0!==c[t]&&(e.enable(t),c[t]=!0)}function W(t){!1!==c[t]&&(e.disable(t),c[t]=!1)}V[e.TEXTURE_2D]=G(e.TEXTURE_2D,e.TEXTURE_2D,1),V[e.TEXTURE_CUBE_MAP]=G(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(V[e.TEXTURE_2D_ARRAY]=G(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),V[e.TEXTURE_3D]=G(e.TEXTURE_3D,e.TEXTURE_3D,1,1)),i.setClear(0,0,0,1),a.setClear(1),s.setClear(0),H(e.DEPTH_TEST),a.setFunc(3),Y(!1),Z(1),H(e.CULL_FACE),q(0);let j={100:e.FUNC_ADD,101:e.FUNC_SUBTRACT,102:e.FUNC_REVERSE_SUBTRACT};if(n)j[103]=e.MIN,j[104]=e.MAX;else{let e=t.get("EXT_blend_minmax");null!==e&&(j[103]=e.MIN_EXT,j[104]=e.MAX_EXT)}let X={200:e.ZERO,201:e.ONE,202:e.SRC_COLOR,204:e.SRC_ALPHA,210:e.SRC_ALPHA_SATURATE,208:e.DST_COLOR,206:e.DST_ALPHA,203:e.ONE_MINUS_SRC_COLOR,205:e.ONE_MINUS_SRC_ALPHA,209:e.ONE_MINUS_DST_COLOR,207:e.ONE_MINUS_DST_ALPHA,211:e.CONSTANT_COLOR,212:e.ONE_MINUS_CONSTANT_COLOR,213:e.CONSTANT_ALPHA,214:e.ONE_MINUS_CONSTANT_ALPHA};function q(t,r,n,i,a,s,o,l,h,u){if(0===t){!0===g&&(W(e.BLEND),g=!1);return}if(!1===g&&(H(e.BLEND),g=!0),5!==t){if(t!==v||u!==w){if((100!==_||100!==S)&&(e.blendEquation(e.FUNC_ADD),_=100,S=100),u)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}x=null,y=null,M=null,b=null,E.set(0,0,0),T=0,v=t,w=u}return}a=a||r,s=s||n,o=o||i,(r!==_||a!==S)&&(e.blendEquationSeparate(j[r],j[a]),_=r,S=a),(n!==x||i!==y||s!==M||o!==b)&&(e.blendFuncSeparate(X[n],X[i],X[s],X[o]),x=n,y=i,M=s,b=o),(!1===l.equals(E)||h!==T)&&(e.blendColor(l.r,l.g,l.b,h),E.copy(l),T=h),v=t,w=!1}function Y(t){A!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),A=t)}function Z(t){0!==t?(H(e.CULL_FACE),t!==R&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):W(e.CULL_FACE),R=t}function J(t,r,n){t?(H(e.POLYGON_OFFSET_FILL),(U!==r||P!==n)&&(e.polygonOffset(r,n),U=r,P=n)):W(e.POLYGON_OFFSET_FILL)}return{buffers:{color:i,depth:a,stencil:s},enable:H,disable:W,bindFramebuffer:function(t,r){return d[t]!==r&&(e.bindFramebuffer(t,r),d[t]=r,n&&(t===e.DRAW_FRAMEBUFFER&&(d[e.FRAMEBUFFER]=r),t===e.FRAMEBUFFER&&(d[e.DRAW_FRAMEBUFFER]=r)),!0)},drawBuffers:function(n,i){let a=f,s=!1;if(n){if(void 0===(a=p.get(i))&&(a=[],p.set(i,a)),n.isWebGLMultipleRenderTargets){let t=n.texture;if(a.length!==t.length||a[0]!==e.COLOR_ATTACHMENT0){for(let r=0,n=t.length;r<n;r++)a[r]=e.COLOR_ATTACHMENT0+r;a.length=t.length,s=!0}}else a[0]!==e.COLOR_ATTACHMENT0&&(a[0]=e.COLOR_ATTACHMENT0,s=!0)}else a[0]!==e.BACK&&(a[0]=e.BACK,s=!0);s&&(r.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return m!==t&&(e.useProgram(t),m=t,!0)},setBlending:q,setMaterial:function(t,r){t.side===u?W(e.CULL_FACE):H(e.CULL_FACE);let n=t.side===h;r&&(n=!n),Y(n),1===t.blending&&!1===t.transparent?q(0):q(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.blendColor,t.blendAlpha,t.premultipliedAlpha),a.setFunc(t.depthFunc),a.setTest(t.depthTest),a.setMask(t.depthWrite),i.setMask(t.colorWrite);let o=t.stencilWrite;s.setTest(o),o&&(s.setMask(t.stencilWriteMask),s.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),s.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),J(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?H(e.SAMPLE_ALPHA_TO_COVERAGE):W(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:Y,setCullFace:Z,setLineWidth:function(t){t!==C&&(D&&e.lineWidth(t),C=t)},setPolygonOffset:J,setScissorTest:function(t){t?H(e.SCISSOR_TEST):W(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+L-1),O!==t&&(e.activeTexture(t),O=t)},bindTexture:function(t,r,n){void 0===n&&(n=null===O?e.TEXTURE0+L-1:O);let i=N[n];void 0===i&&(i={type:void 0,texture:void 0},N[n]=i),(i.type!==t||i.texture!==r)&&(O!==n&&(e.activeTexture(n),O=n),e.bindTexture(t,r||V[t]),i.type=t,i.texture=r)},unbindTexture:function(){let t=N[O];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,r){let n=l.get(r);void 0===n&&(n=new WeakMap,l.set(r,n));let i=n.get(t);void 0===i&&(i=e.getUniformBlockIndex(r,t.name),n.set(t,i))},uniformBlockBinding:function(t,r){let n=l.get(r).get(t);o.get(r)!==n&&(e.uniformBlockBinding(r,n,t.__bindingPointIndex),o.set(r,n))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===z.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),z.copy(t))},viewport:function(t){!1===k.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),k.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),!0===n&&(e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},O=null,N={},d={},p=new WeakMap,f=[],m=null,g=!1,v=null,_=null,x=null,y=null,S=null,M=null,b=null,E=new tf(0,0,0),T=0,w=!1,A=null,R=null,C=null,U=null,P=null,z.set(0,0,e.canvas.width,e.canvas.height),k.set(0,0,e.canvas.width,e.canvas.height),i.reset(),a.reset(),s.reset()}}}function io(e,t,r,n,i,a,s){let o;let l=i.isWebGL2,h=i.maxTextures,u=i.maxCubemapSize,d=i.maxTextureSize,p=i.maxSamples,m=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,g="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),x=new WeakMap,y=new WeakMap,S=!1;try{S="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function M(e,t){return S?new OffscreenCanvas(e,t):z("canvas")}function b(e,t,r,n){let i=1;if((e.width>n||e.height>n)&&(i=n/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let n=t?P:Math.floor,a=n(i*e.width),s=n(i*e.height);void 0===o&&(o=M(a,s));let l=r?M(a,s):o;return l.width=a,l.height=s,l.getContext("2d").drawImage(e,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+s+")."),l}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function E(e){return U(e.width)&&U(e.height)}function T(e,t){return e.generateMipmaps&&t&&1003!==e.minFilter&&e.minFilter!==c}function w(t){e.generateMipmap(t)}function A(r,n,i,a,s=!1){if(!1===l)return n;if(null!==r){if(void 0!==e[r])return e[r];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+r+"'")}let o=n;if(n===e.RED&&(i===e.FLOAT&&(o=e.R32F),i===e.HALF_FLOAT&&(o=e.R16F),i===e.UNSIGNED_BYTE&&(o=e.R8)),n===e.RED_INTEGER&&(i===e.UNSIGNED_BYTE&&(o=e.R8UI),i===e.UNSIGNED_SHORT&&(o=e.R16UI),i===e.UNSIGNED_INT&&(o=e.R32UI),i===e.BYTE&&(o=e.R8I),i===e.SHORT&&(o=e.R16I),i===e.INT&&(o=e.R32I)),n===e.RG&&(i===e.FLOAT&&(o=e.RG32F),i===e.HALF_FLOAT&&(o=e.RG16F),i===e.UNSIGNED_BYTE&&(o=e.RG8)),n===e.RGBA){let t=s?v:X.getTransfer(a);i===e.FLOAT&&(o=e.RGBA32F),i===e.HALF_FLOAT&&(o=e.RGBA16F),i===e.UNSIGNED_BYTE&&(o=t===_?e.SRGB8_ALPHA8:e.RGBA8),i===e.UNSIGNED_SHORT_4_4_4_4&&(o=e.RGBA4),i===e.UNSIGNED_SHORT_5_5_5_1&&(o=e.RGB5_A1)}return(o===e.R16F||o===e.R32F||o===e.RG16F||o===e.RG32F||o===e.RGBA16F||o===e.RGBA32F)&&t.get("EXT_color_buffer_float"),o}function R(e,t,r){return!0===T(e,r)||e.isFramebufferTexture&&1003!==e.minFilter&&e.minFilter!==c?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function C(t){return 1003===t||1004===t||1005===t?e.NEAREST:e.LINEAR}function L(e){let t=e.target;t.removeEventListener("dispose",L),function(e){let t=n.get(e);if(void 0===t.__webglInit)return;let r=e.source,i=y.get(r);if(i){let n=i[t.__cacheKey];n.usedTimes--,0===n.usedTimes&&I(e),0===Object.keys(i).length&&y.delete(r)}n.remove(e)}(t),t.isVideoTexture&&x.delete(t)}function D(t){let r=t.target;r.removeEventListener("dispose",D),function(t){let r=t.texture,i=n.get(t),a=n.get(r);if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),s.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++){if(Array.isArray(i.__webglFramebuffer[t]))for(let r=0;r<i.__webglFramebuffer[t].length;r++)e.deleteFramebuffer(i.__webglFramebuffer[t][r]);else e.deleteFramebuffer(i.__webglFramebuffer[t]);i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[t])}else{if(Array.isArray(i.__webglFramebuffer))for(let t=0;t<i.__webglFramebuffer.length;t++)e.deleteFramebuffer(i.__webglFramebuffer[t]);else e.deleteFramebuffer(i.__webglFramebuffer);if(i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let t=0;t<i.__webglColorRenderbuffer.length;t++)i.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(i.__webglColorRenderbuffer[t]);i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let t=0,i=r.length;t<i;t++){let i=n.get(r[t]);i.__webglTexture&&(e.deleteTexture(i.__webglTexture),s.memory.textures--),n.remove(r[t])}n.remove(r),n.remove(t)}(r)}function I(t){let r=n.get(t);e.deleteTexture(r.__webglTexture);let i=t.source,a=y.get(i);delete a[r.__cacheKey],s.memory.textures--}let O=0;function N(t,i){let a=n.get(t);if(t.isVideoTexture&&function(e){let t=s.render.frame;x.get(e)!==t&&(x.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&a.__version!==t.version){let e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===e.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{H(a,t,i);return}}r.bindTexture(e.TEXTURE_2D,a.__webglTexture,e.TEXTURE0+i)}let F={1e3:e.REPEAT,1001:e.CLAMP_TO_EDGE,1002:e.MIRRORED_REPEAT},B={1003:e.NEAREST,1004:e.NEAREST_MIPMAP_NEAREST,1005:e.NEAREST_MIPMAP_LINEAR,[c]:e.LINEAR,1007:e.LINEAR_MIPMAP_NEAREST,1008:e.LINEAR_MIPMAP_LINEAR},k={512:e.NEVER,519:e.ALWAYS,513:e.LESS,515:e.LEQUAL,514:e.EQUAL,518:e.GEQUAL,516:e.GREATER,517:e.NOTEQUAL};function G(r,a,s){if(s?(e.texParameteri(r,e.TEXTURE_WRAP_S,F[a.wrapS]),e.texParameteri(r,e.TEXTURE_WRAP_T,F[a.wrapT]),(r===e.TEXTURE_3D||r===e.TEXTURE_2D_ARRAY)&&e.texParameteri(r,e.TEXTURE_WRAP_R,F[a.wrapR]),e.texParameteri(r,e.TEXTURE_MAG_FILTER,B[a.magFilter]),e.texParameteri(r,e.TEXTURE_MIN_FILTER,B[a.minFilter])):(e.texParameteri(r,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(r,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),(r===e.TEXTURE_3D||r===e.TEXTURE_2D_ARRAY)&&e.texParameteri(r,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE),(1001!==a.wrapS||1001!==a.wrapT)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(r,e.TEXTURE_MAG_FILTER,C(a.magFilter)),e.texParameteri(r,e.TEXTURE_MIN_FILTER,C(a.minFilter)),1003!==a.minFilter&&a.minFilter!==c&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),a.compareFunction&&(e.texParameteri(r,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(r,e.TEXTURE_COMPARE_FUNC,k[a.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")){let s=t.get("EXT_texture_filter_anisotropic");1003!==a.magFilter&&(1005===a.minFilter||1008===a.minFilter)&&(1015!==a.type||!1!==t.has("OES_texture_float_linear"))&&(!1!==l||1016!==a.type||!1!==t.has("OES_texture_half_float_linear"))&&(a.anisotropy>1||n.get(a).__currentAnisotropy)&&(e.texParameterf(r,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),n.get(a).__currentAnisotropy=a.anisotropy)}}function V(t,r){let n=!1;void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener("dispose",L));let i=r.source,a=y.get(i);void 0===a&&(a={},y.set(i,a));let o=function(e){let t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(r);if(o!==t.__cacheKey){void 0===a[o]&&(a[o]={texture:e.createTexture(),usedTimes:0},s.memory.textures++,n=!0),a[o].usedTimes++;let i=a[t.__cacheKey];void 0!==i&&(a[t.__cacheKey].usedTimes--,0===i.usedTimes&&I(r)),t.__cacheKey=o,t.__webglTexture=a[o].texture}return n}function H(t,i,s){let o=e.TEXTURE_2D;(i.isDataArrayTexture||i.isCompressedArrayTexture)&&(o=e.TEXTURE_2D_ARRAY),i.isData3DTexture&&(o=e.TEXTURE_3D);let h=V(t,i),u=i.source;r.bindTexture(o,t.__webglTexture,e.TEXTURE0+s);let p=n.get(u);if(u.version!==p.__version||!0===h){let t;r.activeTexture(e.TEXTURE0+s);let n=X.getPrimaries(X.workingColorSpace),f=""===i.colorSpace?null:X.getPrimaries(i.colorSpace),m=""===i.colorSpace||n===f?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,i.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,m);let g=!l&&(1001!==i.wrapS||1001!==i.wrapT||1003!==i.minFilter&&i.minFilter!==c)&&!1===E(i.image),v=b(i.image,g,!1,d),_=E(v=K(i,v))||l,x=a.convert(i.format,i.colorSpace),y=a.convert(i.type),S=A(i.internalFormat,x,y,i.colorSpace,i.isVideoTexture);G(o,i,_);let M=i.mipmaps,C=l&&!0!==i.isVideoTexture,U=void 0===p.__version||!0===h,P=R(i,v,_);if(i.isDepthTexture)S=e.DEPTH_COMPONENT,l?S=1015===i.type?e.DEPTH_COMPONENT32F:1014===i.type?e.DEPTH_COMPONENT24:1020===i.type?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT16:1015===i.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===i.format&&S===e.DEPTH_COMPONENT&&1012!==i.type&&1014!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=1014,y=a.convert(i.type)),1027===i.format&&S===e.DEPTH_COMPONENT&&(S=e.DEPTH_STENCIL,1020!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=1020,y=a.convert(i.type))),U&&(C?r.texStorage2D(e.TEXTURE_2D,1,S,v.width,v.height):r.texImage2D(e.TEXTURE_2D,0,S,v.width,v.height,0,x,y,null));else if(i.isDataTexture){if(M.length>0&&_){C&&U&&r.texStorage2D(e.TEXTURE_2D,P,S,M[0].width,M[0].height);for(let n=0,i=M.length;n<i;n++)t=M[n],C?r.texSubImage2D(e.TEXTURE_2D,n,0,0,t.width,t.height,x,y,t.data):r.texImage2D(e.TEXTURE_2D,n,S,t.width,t.height,0,x,y,t.data);i.generateMipmaps=!1}else C?(U&&r.texStorage2D(e.TEXTURE_2D,P,S,v.width,v.height),r.texSubImage2D(e.TEXTURE_2D,0,0,0,v.width,v.height,x,y,v.data)):r.texImage2D(e.TEXTURE_2D,0,S,v.width,v.height,0,x,y,v.data)}else if(i.isCompressedTexture){if(i.isCompressedArrayTexture){C&&U&&r.texStorage3D(e.TEXTURE_2D_ARRAY,P,S,M[0].width,M[0].height,v.depth);for(let n=0,a=M.length;n<a;n++)t=M[n],1023!==i.format?null!==x?C?r.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,n,0,0,0,t.width,t.height,v.depth,x,t.data,0,0):r.compressedTexImage3D(e.TEXTURE_2D_ARRAY,n,S,t.width,t.height,v.depth,0,t.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):C?r.texSubImage3D(e.TEXTURE_2D_ARRAY,n,0,0,0,t.width,t.height,v.depth,x,y,t.data):r.texImage3D(e.TEXTURE_2D_ARRAY,n,S,t.width,t.height,v.depth,0,x,y,t.data)}else{C&&U&&r.texStorage2D(e.TEXTURE_2D,P,S,M[0].width,M[0].height);for(let n=0,a=M.length;n<a;n++)t=M[n],1023!==i.format?null!==x?C?r.compressedTexSubImage2D(e.TEXTURE_2D,n,0,0,t.width,t.height,x,t.data):r.compressedTexImage2D(e.TEXTURE_2D,n,S,t.width,t.height,0,t.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):C?r.texSubImage2D(e.TEXTURE_2D,n,0,0,t.width,t.height,x,y,t.data):r.texImage2D(e.TEXTURE_2D,n,S,t.width,t.height,0,x,y,t.data)}}else if(i.isDataArrayTexture)C?(U&&r.texStorage3D(e.TEXTURE_2D_ARRAY,P,S,v.width,v.height,v.depth),r.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,v.width,v.height,v.depth,x,y,v.data)):r.texImage3D(e.TEXTURE_2D_ARRAY,0,S,v.width,v.height,v.depth,0,x,y,v.data);else if(i.isData3DTexture)C?(U&&r.texStorage3D(e.TEXTURE_3D,P,S,v.width,v.height,v.depth),r.texSubImage3D(e.TEXTURE_3D,0,0,0,0,v.width,v.height,v.depth,x,y,v.data)):r.texImage3D(e.TEXTURE_3D,0,S,v.width,v.height,v.depth,0,x,y,v.data);else if(i.isFramebufferTexture){if(U){if(C)r.texStorage2D(e.TEXTURE_2D,P,S,v.width,v.height);else{let t=v.width,n=v.height;for(let i=0;i<P;i++)r.texImage2D(e.TEXTURE_2D,i,S,t,n,0,x,y,null),t>>=1,n>>=1}}}else if(M.length>0&&_){C&&U&&r.texStorage2D(e.TEXTURE_2D,P,S,M[0].width,M[0].height);for(let n=0,i=M.length;n<i;n++)t=M[n],C?r.texSubImage2D(e.TEXTURE_2D,n,0,0,x,y,t):r.texImage2D(e.TEXTURE_2D,n,S,x,y,t);i.generateMipmaps=!1}else C?(U&&r.texStorage2D(e.TEXTURE_2D,P,S,v.width,v.height),r.texSubImage2D(e.TEXTURE_2D,0,0,0,x,y,v)):r.texImage2D(e.TEXTURE_2D,0,S,x,y,v);T(i,_)&&w(o),p.__version=u.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version}function W(t,i,s,o,l,h){let u=a.convert(s.format,s.colorSpace),c=a.convert(s.type),d=A(s.internalFormat,u,c,s.colorSpace);if(!n.get(i).__hasExternalTextures){let t=Math.max(1,i.width>>h),n=Math.max(1,i.height>>h);l===e.TEXTURE_3D||l===e.TEXTURE_2D_ARRAY?r.texImage3D(l,h,d,t,n,i.depth,0,u,c,null):r.texImage2D(l,h,d,t,n,0,u,c,null)}r.bindFramebuffer(e.FRAMEBUFFER,t),J(i)?m.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,o,l,n.get(s).__webglTexture,0,Y(i)):(l===e.TEXTURE_2D||l>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&l<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,o,l,n.get(s).__webglTexture,h),r.bindFramebuffer(e.FRAMEBUFFER,null)}function j(t,r,n){if(e.bindRenderbuffer(e.RENDERBUFFER,t),r.depthBuffer&&!r.stencilBuffer){let i=!0===l?e.DEPTH_COMPONENT24:e.DEPTH_COMPONENT16;if(n||J(r)){let t=r.depthTexture;t&&t.isDepthTexture&&(1015===t.type?i=e.DEPTH_COMPONENT32F:1014===t.type&&(i=e.DEPTH_COMPONENT24));let n=Y(r);J(r)?m.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,n,i,r.width,r.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,n,i,r.width,r.height)}else e.renderbufferStorage(e.RENDERBUFFER,i,r.width,r.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(r.depthBuffer&&r.stencilBuffer){let i=Y(r);n&&!1===J(r)?e.renderbufferStorageMultisample(e.RENDERBUFFER,i,e.DEPTH24_STENCIL8,r.width,r.height):J(r)?m.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,i,e.DEPTH24_STENCIL8,r.width,r.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,r.width,r.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{let t=!0===r.isWebGLMultipleRenderTargets?r.texture:[r.texture];for(let i=0;i<t.length;i++){let s=t[i],o=a.convert(s.format,s.colorSpace),l=a.convert(s.type),h=A(s.internalFormat,o,l,s.colorSpace),u=Y(r);n&&!1===J(r)?e.renderbufferStorageMultisample(e.RENDERBUFFER,u,h,r.width,r.height):J(r)?m.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,u,h,r.width,r.height):e.renderbufferStorage(e.RENDERBUFFER,h,r.width,r.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function q(t){let i=n.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!i.__autoAllocateDepthBuffer){if(a)throw Error("target.depthTexture not supported in Cube render targets");!function(t,i){if(i&&i.isWebGLCubeRenderTarget)throw Error("Depth Texture with cube render targets is not supported");if(r.bindFramebuffer(e.FRAMEBUFFER,t),!(i.depthTexture&&i.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),N(i.depthTexture,0);let a=n.get(i.depthTexture).__webglTexture,s=Y(i);if(1026===i.depthTexture.format)J(i)?m.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,s):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0);else if(1027===i.depthTexture.format)J(i)?m.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,s):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0);else throw Error("Unknown depthTexture format")}(i.__webglFramebuffer,t)}else if(a){i.__webglDepthbuffer=[];for(let n=0;n<6;n++)r.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer[n]),i.__webglDepthbuffer[n]=e.createRenderbuffer(),j(i.__webglDepthbuffer[n],t,!1)}else r.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),j(i.__webglDepthbuffer,t,!1);r.bindFramebuffer(e.FRAMEBUFFER,null)}function Y(e){return Math.min(p,e.samples)}function J(e){let r=n.get(e);return l&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==r.__useRenderToTexture}function K(e,r){let n=e.colorSpace,i=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||1035===e.format||n!==f&&""!==n&&(X.getTransfer(n)===_?!1===l?!0===t.has("EXT_sRGB")&&1023===i?(e.format=1035,e.minFilter=c,e.generateMipmaps=!1):r=Z.sRGBToLinear(r):(1023!==i||1009!==a)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",n)),r}this.allocateTextureUnit=function(){let e=O;return e>=h&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+h),O+=1,e},this.resetTextureUnits=function(){O=0},this.setTexture2D=N,this.setTexture2DArray=function(t,i){let a=n.get(t);if(t.version>0&&a.__version!==t.version){H(a,t,i);return}r.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+i)},this.setTexture3D=function(t,i){let a=n.get(t);if(t.version>0&&a.__version!==t.version){H(a,t,i);return}r.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+i)},this.setTextureCube=function(t,i){let s=n.get(t);if(t.version>0&&s.__version!==t.version){(function(t,i,s){if(6!==i.image.length)return;let o=V(t,i),h=i.source;r.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+s);let c=n.get(h);if(h.version!==c.__version||!0===o){let t;r.activeTexture(e.TEXTURE0+s);let n=X.getPrimaries(X.workingColorSpace),d=""===i.colorSpace?null:X.getPrimaries(i.colorSpace),p=""===i.colorSpace||n===d?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,i.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,p);let f=i.isCompressedTexture||i.image[0].isCompressedTexture,m=i.image[0]&&i.image[0].isDataTexture,g=[];for(let e=0;e<6;e++)f||m?g[e]=m?i.image[e].image:i.image[e]:g[e]=b(i.image[e],!1,!0,u),g[e]=K(i,g[e]);let v=g[0],_=E(v)||l,x=a.convert(i.format,i.colorSpace),y=a.convert(i.type),S=A(i.internalFormat,x,y,i.colorSpace),M=l&&!0!==i.isVideoTexture,C=void 0===c.__version||!0===o,U=R(i,v,_);if(G(e.TEXTURE_CUBE_MAP,i,_),f){M&&C&&r.texStorage2D(e.TEXTURE_CUBE_MAP,U,S,v.width,v.height);for(let n=0;n<6;n++){t=g[n].mipmaps;for(let a=0;a<t.length;a++){let s=t[a];1023!==i.format?null!==x?M?r.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,a,0,0,s.width,s.height,x,s.data):r.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,a,S,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):M?r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,a,0,0,s.width,s.height,x,y,s.data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,a,S,s.width,s.height,0,x,y,s.data)}}}else{t=i.mipmaps,M&&C&&(t.length>0&&U++,r.texStorage2D(e.TEXTURE_CUBE_MAP,U,S,g[0].width,g[0].height));for(let n=0;n<6;n++)if(m){M?r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,0,0,g[n].width,g[n].height,x,y,g[n].data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,S,g[n].width,g[n].height,0,x,y,g[n].data);for(let i=0;i<t.length;i++){let a=t[i].image[n].image;M?r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i+1,0,0,a.width,a.height,x,y,a.data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i+1,S,a.width,a.height,0,x,y,a.data)}}else{M?r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,0,0,x,y,g[n]):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,S,x,y,g[n]);for(let i=0;i<t.length;i++){let a=t[i];M?r.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i+1,0,0,x,y,a.image[n]):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+n,i+1,S,x,y,a.image[n])}}}T(i,_)&&w(e.TEXTURE_CUBE_MAP),c.__version=h.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version})(s,t,i);return}r.bindTexture(e.TEXTURE_CUBE_MAP,s.__webglTexture,e.TEXTURE0+i)},this.rebindTextures=function(t,r,i){let a=n.get(t);void 0!==r&&W(a.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==i&&q(t)},this.setupRenderTarget=function(t){let o=t.texture,h=n.get(t),u=n.get(o);t.addEventListener("dispose",D),!0!==t.isWebGLMultipleRenderTargets&&(void 0===u.__webglTexture&&(u.__webglTexture=e.createTexture()),u.__version=o.version,s.memory.textures++);let c=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=E(t)||l;if(c){h.__webglFramebuffer=[];for(let t=0;t<6;t++)if(l&&o.mipmaps&&o.mipmaps.length>0){h.__webglFramebuffer[t]=[];for(let r=0;r<o.mipmaps.length;r++)h.__webglFramebuffer[t][r]=e.createFramebuffer()}else h.__webglFramebuffer[t]=e.createFramebuffer()}else{if(l&&o.mipmaps&&o.mipmaps.length>0){h.__webglFramebuffer=[];for(let t=0;t<o.mipmaps.length;t++)h.__webglFramebuffer[t]=e.createFramebuffer()}else h.__webglFramebuffer=e.createFramebuffer();if(d){if(i.drawBuffers){let r=t.texture;for(let t=0,i=r.length;t<i;t++){let i=n.get(r[t]);void 0===i.__webglTexture&&(i.__webglTexture=e.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}if(l&&t.samples>0&&!1===J(t)){let n=d?o:[o];h.__webglMultisampledFramebuffer=e.createFramebuffer(),h.__webglColorRenderbuffer=[],r.bindFramebuffer(e.FRAMEBUFFER,h.__webglMultisampledFramebuffer);for(let r=0;r<n.length;r++){let i=n[r];h.__webglColorRenderbuffer[r]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,h.__webglColorRenderbuffer[r]);let s=a.convert(i.format,i.colorSpace),o=a.convert(i.type),l=A(i.internalFormat,s,o,i.colorSpace,!0===t.isXRRenderTarget),u=Y(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,u,l,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+r,e.RENDERBUFFER,h.__webglColorRenderbuffer[r])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(h.__webglDepthRenderbuffer=e.createRenderbuffer(),j(h.__webglDepthRenderbuffer,t,!0)),r.bindFramebuffer(e.FRAMEBUFFER,null)}}if(c){r.bindTexture(e.TEXTURE_CUBE_MAP,u.__webglTexture),G(e.TEXTURE_CUBE_MAP,o,p);for(let r=0;r<6;r++)if(l&&o.mipmaps&&o.mipmaps.length>0)for(let n=0;n<o.mipmaps.length;n++)W(h.__webglFramebuffer[r][n],t,o,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+r,n);else W(h.__webglFramebuffer[r],t,o,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+r,0);T(o,p)&&w(e.TEXTURE_CUBE_MAP),r.unbindTexture()}else if(d){let i=t.texture;for(let a=0,s=i.length;a<s;a++){let s=i[a],o=n.get(s);r.bindTexture(e.TEXTURE_2D,o.__webglTexture),G(e.TEXTURE_2D,s,p),W(h.__webglFramebuffer,t,s,e.COLOR_ATTACHMENT0+a,e.TEXTURE_2D,0),T(s,p)&&w(e.TEXTURE_2D)}r.unbindTexture()}else{let n=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(l?n=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),r.bindTexture(n,u.__webglTexture),G(n,o,p),l&&o.mipmaps&&o.mipmaps.length>0)for(let r=0;r<o.mipmaps.length;r++)W(h.__webglFramebuffer[r],t,o,e.COLOR_ATTACHMENT0,n,r);else W(h.__webglFramebuffer,t,o,e.COLOR_ATTACHMENT0,n,0);T(o,p)&&w(n),r.unbindTexture()}t.depthBuffer&&q(t)},this.updateRenderTargetMipmap=function(t){let i=E(t)||l,a=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let s=0,o=a.length;s<o;s++){let o=a[s];if(T(o,i)){let i=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=n.get(o).__webglTexture;r.bindTexture(i,a),w(i),r.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(l&&t.samples>0&&!1===J(t)){let i=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],a=t.width,s=t.height,o=e.COLOR_BUFFER_BIT,l=[],h=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,u=n.get(t),c=!0===t.isWebGLMultipleRenderTargets;if(c)for(let t=0;t<i.length;t++)r.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),r.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);r.bindFramebuffer(e.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer),r.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let r=0;r<i.length;r++){l.push(e.COLOR_ATTACHMENT0+r),t.depthBuffer&&l.push(h);let d=void 0!==u.__ignoreDepthValues&&u.__ignoreDepthValues;if(!1===d&&(t.depthBuffer&&(o|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&(o|=e.STENCIL_BUFFER_BIT)),c&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,u.__webglColorRenderbuffer[r]),!0===d&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[h]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[h])),c){let t=n.get(i[r]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,a,s,0,0,a,s,o,e.NEAREST),g&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,l)}if(r.bindFramebuffer(e.READ_FRAMEBUFFER,null),r.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),c)for(let t=0;t<i.length;t++){r.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,u.__webglColorRenderbuffer[t]);let a=n.get(i[t]).__webglTexture;r.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,a,0)}r.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=q,this.setupFrameBufferTexture=W,this.useMultisampledRTT=J}function il(e,t,r){let n=r.isWebGL2;return{convert:function(r,i=""){let a;let s=X.getTransfer(i);if(1009===r)return e.UNSIGNED_BYTE;if(1017===r)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===r)return e.UNSIGNED_SHORT_5_5_5_1;if(1010===r)return e.BYTE;if(1011===r)return e.SHORT;if(1012===r)return e.UNSIGNED_SHORT;if(1013===r)return e.INT;if(1014===r)return e.UNSIGNED_INT;if(1015===r)return e.FLOAT;if(1016===r)return n?e.HALF_FLOAT:null!==(a=t.get("OES_texture_half_float"))?a.HALF_FLOAT_OES:null;if(1021===r)return e.ALPHA;if(1023===r)return e.RGBA;if(1024===r)return e.LUMINANCE;if(1025===r)return e.LUMINANCE_ALPHA;if(1026===r)return e.DEPTH_COMPONENT;if(1027===r)return e.DEPTH_STENCIL;if(1035===r)return null!==(a=t.get("EXT_sRGB"))?a.SRGB_ALPHA_EXT:null;if(1028===r)return e.RED;if(1029===r)return e.RED_INTEGER;if(1030===r)return e.RG;if(1031===r)return e.RG_INTEGER;if(1033===r)return e.RGBA_INTEGER;if(33776===r||33777===r||33778===r||33779===r){if(s===_){if(null===(a=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(33776===r)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===r)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===r)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===r)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(a=t.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===r)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===r)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===r)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===r)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(35840===r||35841===r||35842===r||35843===r){if(null===(a=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===r)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===r)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===r)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===r)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===r)return null!==(a=t.get("WEBGL_compressed_texture_etc1"))?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===r||37496===r){if(null===(a=t.get("WEBGL_compressed_texture_etc")))return null;if(37492===r)return s===_?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(37808===r||37809===r||37810===r||37811===r||37812===r||37813===r||37814===r||37815===r||37816===r||37817===r||37818===r||37819===r||37820===r||37821===r){if(null===(a=t.get("WEBGL_compressed_texture_astc")))return null;if(37808===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===r)return s===_?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(36492===r||36494===r||36495===r){if(null===(a=t.get("EXT_texture_compression_bptc")))return null;if(36492===r)return s===_?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===r)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(36495===r)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===r||36284===r||36285===r||36286===r){if(null===(a=t.get("EXT_texture_compression_rgtc")))return null;if(36492===r)return a.COMPRESSED_RED_RGTC1_EXT;if(36284===r)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===r)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===r)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return 1020===r?n?e.UNSIGNED_INT_24_8:null!==(a=t.get("WEBGL_depth_texture"))?a.UNSIGNED_INT_24_8_WEBGL:null:void 0!==e[r]?e[r]:null}}}class ih extends t5{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class iu extends e8{constructor(){super(),this.isGroup=!0,this.type="Group"}}let ic={type:"move"};class id{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new iu,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new iu,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new es,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new es),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new iu,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new es,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new es),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){let t=this._hand;if(t)for(let r of e.hand.values())this._getHandJoint(t,r)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,r){let n=null,i=null,a=null,s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){for(let n of(a=!0,e.hand.values())){let e=t.getJointPose(n,r),i=this._getHandJoint(l,n);null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,i.jointRadius=e.radius),i.visible=null!==e}let n=l.joints["index-finger-tip"],i=l.joints["thumb-tip"],s=n.position.distanceTo(i.position);l.inputState.pinching&&s>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&s<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(i=t.getPose(e.gripSpace,r))&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1);null!==s&&(null===(n=t.getPose(e.targetRaySpace,r))&&null!==i&&(n=i),null!==n&&(s.matrix.fromArray(n.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,n.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(n.linearVelocity)):s.hasLinearVelocity=!1,n.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(n.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(ic)))}return null!==s&&(s.visible=null!==n),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){let r=new iu;r.matrixAutoUpdate=!1,r.visible=!1,e.joints[t.jointName]=r,e.add(r)}return e.joints[t.jointName]}}class ip extends ee{constructor(e,t,r,n,i,a,s,o,l,h){if(1026!==(h=void 0!==h?h:1026)&&1027!==h)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&1026===h&&(r=1014),void 0===r&&1027===h&&(r=1020),super(null,n,i,a,s,o,h,r,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==s?s:1003,this.minFilter=void 0!==o?o:1003,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){let t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}class im extends S{constructor(e,t){super();let r=this,n=null,i=1,a=null,s="local-floor",o=1,l=null,h=null,u=null,c=null,d=null,p=null,f=t.getContextAttributes(),m=null,g=null,v=[],_=[],x=new t5;x.layers.enable(1),x.viewport=new et;let y=new t5;y.layers.enable(2),y.viewport=new et;let S=[x,y],M=new ih;M.layers.enable(1),M.layers.enable(2);let b=null,E=null;function w(e){let t=_.indexOf(e.inputSource);if(-1===t)return;let r=v[t];void 0!==r&&(r.update(e.inputSource,e.frame,l||a),r.dispatchEvent({type:e.type,data:e.inputSource}))}function A(){n.removeEventListener("select",w),n.removeEventListener("selectstart",w),n.removeEventListener("selectend",w),n.removeEventListener("squeeze",w),n.removeEventListener("squeezestart",w),n.removeEventListener("squeezeend",w),n.removeEventListener("end",A),n.removeEventListener("inputsourceschange",R);for(let e=0;e<v.length;e++){let t=_[e];null!==t&&(_[e]=null,v[e].disconnect(t))}b=null,E=null,e.setRenderTarget(m),d=null,c=null,u=null,n=null,g=null,D.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}function R(e){for(let t=0;t<e.removed.length;t++){let r=e.removed[t],n=_.indexOf(r);n>=0&&(_[n]=null,v[n].disconnect(r))}for(let t=0;t<e.added.length;t++){let r=e.added[t],n=_.indexOf(r);if(-1===n){for(let e=0;e<v.length;e++){if(e>=_.length){_.push(r),n=e;break}if(null===_[e]){_[e]=r,n=e;break}}if(-1===n)break}let i=v[n];i&&i.connect(r)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=v[e];return void 0===t&&(t=new id,v[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=v[e];return void 0===t&&(t=new id,v[e]=t),t.getGripSpace()},this.getHand=function(e){let t=v[e];return void 0===t&&(t=new id,v[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==c?c:d},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(h){if(null!==(n=h)){if(m=e.getRenderTarget(),n.addEventListener("select",w),n.addEventListener("selectstart",w),n.addEventListener("selectend",w),n.addEventListener("squeeze",w),n.addEventListener("squeezestart",w),n.addEventListener("squeezeend",w),n.addEventListener("end",A),n.addEventListener("inputsourceschange",R),!0!==f.xrCompatible&&await t.makeXRCompatible(),void 0===n.renderState.layers||!1===e.capabilities.isWebGL2){let r={antialias:void 0!==n.renderState.layers||f.antialias,alpha:!0,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:i};d=new XRWebGLLayer(n,t,r),n.updateRenderState({baseLayer:d}),g=new en(d.framebufferWidth,d.framebufferHeight,{format:1023,type:1009,colorSpace:e.outputColorSpace,stencilBuffer:f.stencil})}else{let r=null,a=null,s=null;f.depth&&(s=f.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,r=f.stencil?1027:1026,a=f.stencil?1020:1014);let o={colorFormat:t.RGBA8,depthFormat:s,scaleFactor:i};c=(u=new XRWebGLBinding(n,t)).createProjectionLayer(o),n.updateRenderState({layers:[c]}),g=new en(c.textureWidth,c.textureHeight,{format:1023,type:1009,depthTexture:new ip(c.textureWidth,c.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,r),stencilBuffer:f.stencil,colorSpace:e.outputColorSpace,samples:f.antialias?4:0}),e.properties.get(g).__ignoreDepthValues=c.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(o),l=null,a=await n.requestReferenceSpace(s),D.setContext(n),D.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==n)return n.environmentBlendMode};let C=new es,U=new es;function P(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===n)return;M.near=y.near=x.near=e.near,M.far=y.far=x.far=e.far,(b!==M.near||E!==M.far)&&(n.updateRenderState({depthNear:M.near,depthFar:M.far}),b=M.near,E=M.far);let t=e.parent,r=M.cameras;P(M,t);for(let e=0;e<r.length;e++)P(r[e],t);2===r.length?function(e,t,r){C.setFromMatrixPosition(t.matrixWorld),U.setFromMatrixPosition(r.matrixWorld);let n=C.distanceTo(U),i=t.projectionMatrix.elements,a=r.projectionMatrix.elements,s=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],h=(i[9]-1)/i[5],u=(i[8]-1)/i[0],c=(a[8]+1)/a[0],d=n/(-u+c),p=-(d*u);t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(p),e.translateZ(d),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();let f=s+d,m=o+d;e.projectionMatrix.makePerspective(s*u-p,s*c+(n-p),l*o/m*f,h*o/m*f,f,m),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}(M,x,y):M.projectionMatrix.copy(x.projectionMatrix),null===t?e.matrix.copy(M.matrixWorld):(e.matrix.copy(t.matrixWorld),e.matrix.invert(),e.matrix.multiply(M.matrixWorld)),e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(M.projectionMatrix),e.projectionMatrixInverse.copy(M.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*T*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)},this.getCamera=function(){return M},this.getFoveation=function(){if(null!==c||null!==d)return o},this.setFoveation=function(e){o=e,null!==c&&(c.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)};let L=null,D=new rs;D.setAnimationLoop(function(t,n){if(h=n.getViewerPose(l||a),p=n,null!==h){let t=h.views;null!==d&&(e.setRenderTargetFramebuffer(g,d.framebuffer),e.setRenderTarget(g));let r=!1;t.length!==M.cameras.length&&(M.cameras.length=0,r=!0);for(let n=0;n<t.length;n++){let i=t[n],a=null;if(null!==d)a=d.getViewport(i);else{let t=u.getViewSubImage(c,i);a=t.viewport,0===n&&(e.setRenderTargetTextures(g,t.colorTexture,c.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(g))}let s=S[n];void 0===s&&((s=new t5).layers.enable(n),s.viewport=new et,S[n]=s),s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.quaternion,s.scale),s.projectionMatrix.fromArray(i.projectionMatrix),s.projectionMatrixInverse.copy(s.projectionMatrix).invert(),s.viewport.set(a.x,a.y,a.width,a.height),0===n&&(M.matrix.copy(s.matrix),M.matrix.decompose(M.position,M.quaternion,M.scale)),!0===r&&M.cameras.push(s)}}for(let e=0;e<v.length;e++){let t=_[e],r=v[e];null!==t&&void 0!==r&&r.update(t,n,l||a)}L&&L(t,n),n.detectedPlanes&&r.dispatchEvent({type:"planesdetected",data:n}),p=null}),this.setAnimationLoop=function(e){L=e},this.dispose=function(){}}}function ig(e,t){function r(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function n(n,i){n.opacity.value=i.opacity,i.color&&n.diffuse.value.copy(i.color),i.emissive&&n.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(n.map.value=i.map,r(i.map,n.mapTransform)),i.alphaMap&&(n.alphaMap.value=i.alphaMap,r(i.alphaMap,n.alphaMapTransform)),i.bumpMap&&(n.bumpMap.value=i.bumpMap,r(i.bumpMap,n.bumpMapTransform),n.bumpScale.value=i.bumpScale,i.side===h&&(n.bumpScale.value*=-1)),i.normalMap&&(n.normalMap.value=i.normalMap,r(i.normalMap,n.normalMapTransform),n.normalScale.value.copy(i.normalScale),i.side===h&&n.normalScale.value.negate()),i.displacementMap&&(n.displacementMap.value=i.displacementMap,r(i.displacementMap,n.displacementMapTransform),n.displacementScale.value=i.displacementScale,n.displacementBias.value=i.displacementBias),i.emissiveMap&&(n.emissiveMap.value=i.emissiveMap,r(i.emissiveMap,n.emissiveMapTransform)),i.specularMap&&(n.specularMap.value=i.specularMap,r(i.specularMap,n.specularMapTransform)),i.alphaTest>0&&(n.alphaTest.value=i.alphaTest);let a=t.get(i).envMap;if(a&&(n.envMap.value=a,n.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,n.reflectivity.value=i.reflectivity,n.ior.value=i.ior,n.refractionRatio.value=i.refractionRatio),i.lightMap){n.lightMap.value=i.lightMap;let t=!0===e._useLegacyLights?Math.PI:1;n.lightMapIntensity.value=i.lightMapIntensity*t,r(i.lightMap,n.lightMapTransform)}i.aoMap&&(n.aoMap.value=i.aoMap,n.aoMapIntensity.value=i.aoMapIntensity,r(i.aoMap,n.aoMapTransform))}return{refreshFogUniforms:function(t,r){r.color.getRGB(t.fogColor.value,t1(e)),r.isFog?(t.fogNear.value=r.near,t.fogFar.value=r.far):r.isFogExp2&&(t.fogDensity.value=r.density)},refreshMaterialUniforms:function(e,i,a,s,o){i.isMeshBasicMaterial?n(e,i):i.isMeshLambertMaterial?n(e,i):i.isMeshToonMaterial?(n(e,i),i.gradientMap&&(e.gradientMap.value=i.gradientMap)):i.isMeshPhongMaterial?(n(e,i),e.specular.value.copy(i.specular),e.shininess.value=Math.max(i.shininess,1e-4)):i.isMeshStandardMaterial?(n(e,i),e.metalness.value=i.metalness,i.metalnessMap&&(e.metalnessMap.value=i.metalnessMap,r(i.metalnessMap,e.metalnessMapTransform)),e.roughness.value=i.roughness,i.roughnessMap&&(e.roughnessMap.value=i.roughnessMap,r(i.roughnessMap,e.roughnessMapTransform)),t.get(i).envMap&&(e.envMapIntensity.value=i.envMapIntensity),i.isMeshPhysicalMaterial&&(e.ior.value=i.ior,i.sheen>0&&(e.sheenColor.value.copy(i.sheenColor).multiplyScalar(i.sheen),e.sheenRoughness.value=i.sheenRoughness,i.sheenColorMap&&(e.sheenColorMap.value=i.sheenColorMap,r(i.sheenColorMap,e.sheenColorMapTransform)),i.sheenRoughnessMap&&(e.sheenRoughnessMap.value=i.sheenRoughnessMap,r(i.sheenRoughnessMap,e.sheenRoughnessMapTransform))),i.clearcoat>0&&(e.clearcoat.value=i.clearcoat,e.clearcoatRoughness.value=i.clearcoatRoughness,i.clearcoatMap&&(e.clearcoatMap.value=i.clearcoatMap,r(i.clearcoatMap,e.clearcoatMapTransform)),i.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=i.clearcoatRoughnessMap,r(i.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),i.clearcoatNormalMap&&(e.clearcoatNormalMap.value=i.clearcoatNormalMap,r(i.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(i.clearcoatNormalScale),i.side===h&&e.clearcoatNormalScale.value.negate())),i.iridescence>0&&(e.iridescence.value=i.iridescence,e.iridescenceIOR.value=i.iridescenceIOR,e.iridescenceThicknessMinimum.value=i.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=i.iridescenceThicknessRange[1],i.iridescenceMap&&(e.iridescenceMap.value=i.iridescenceMap,r(i.iridescenceMap,e.iridescenceMapTransform)),i.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=i.iridescenceThicknessMap,r(i.iridescenceThicknessMap,e.iridescenceThicknessMapTransform))),i.transmission>0&&(e.transmission.value=i.transmission,e.transmissionSamplerMap.value=o.texture,e.transmissionSamplerSize.value.set(o.width,o.height),i.transmissionMap&&(e.transmissionMap.value=i.transmissionMap,r(i.transmissionMap,e.transmissionMapTransform)),e.thickness.value=i.thickness,i.thicknessMap&&(e.thicknessMap.value=i.thicknessMap,r(i.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=i.attenuationDistance,e.attenuationColor.value.copy(i.attenuationColor)),i.anisotropy>0&&(e.anisotropyVector.value.set(i.anisotropy*Math.cos(i.anisotropyRotation),i.anisotropy*Math.sin(i.anisotropyRotation)),i.anisotropyMap&&(e.anisotropyMap.value=i.anisotropyMap,r(i.anisotropyMap,e.anisotropyMapTransform))),e.specularIntensity.value=i.specularIntensity,e.specularColor.value.copy(i.specularColor),i.specularColorMap&&(e.specularColorMap.value=i.specularColorMap,r(i.specularColorMap,e.specularColorMapTransform)),i.specularIntensityMap&&(e.specularIntensityMap.value=i.specularIntensityMap,r(i.specularIntensityMap,e.specularIntensityMapTransform)))):i.isMeshMatcapMaterial?(n(e,i),i.matcap&&(e.matcap.value=i.matcap)):i.isMeshDepthMaterial?n(e,i):i.isMeshDistanceMaterial?(n(e,i),function(e,r){let n=t.get(r).light;e.referencePosition.value.setFromMatrixPosition(n.matrixWorld),e.nearDistance.value=n.shadow.camera.near,e.farDistance.value=n.shadow.camera.far}(e,i)):i.isMeshNormalMaterial?n(e,i):i.isLineBasicMaterial?(e.diffuse.value.copy(i.color),e.opacity.value=i.opacity,i.map&&(e.map.value=i.map,r(i.map,e.mapTransform)),i.isLineDashedMaterial&&(e.dashSize.value=i.dashSize,e.totalSize.value=i.dashSize+i.gapSize,e.scale.value=i.scale)):i.isPointsMaterial?(e.diffuse.value.copy(i.color),e.opacity.value=i.opacity,e.size.value=i.size*a,e.scale.value=.5*s,i.map&&(e.map.value=i.map,r(i.map,e.uvTransform)),i.alphaMap&&(e.alphaMap.value=i.alphaMap,r(i.alphaMap,e.alphaMapTransform)),i.alphaTest>0&&(e.alphaTest.value=i.alphaTest)):i.isSpriteMaterial?(e.diffuse.value.copy(i.color),e.opacity.value=i.opacity,e.rotation.value=i.rotation,i.map&&(e.map.value=i.map,r(i.map,e.mapTransform)),i.alphaMap&&(e.alphaMap.value=i.alphaMap,r(i.alphaMap,e.alphaMapTransform)),i.alphaTest>0&&(e.alphaTest.value=i.alphaTest)):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function iv(e,t,r,n){let i={},a={},s=[],o=r.isWebGL2?e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(e){let t={boundary:0,storage:0};return"number"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function h(t){let r=t.target;r.removeEventListener("dispose",h);let n=s.indexOf(r.__bindingPointIndex);s.splice(n,1),e.deleteBuffer(i[r.id]),delete i[r.id],delete a[r.id]}return{bind:function(e,t){let r=t.program;n.uniformBlockBinding(e,r)},update:function(r,u){let c=i[r.id];void 0===c&&(function(e){let t=e.uniforms,r=0,n=0;for(let e=0,i=t.length;e<i;e++){let i=t[e],a={boundary:0,storage:0},s=Array.isArray(i.value)?i.value:[i.value];for(let e=0,t=s.length;e<t;e++){let t=l(s[e]);a.boundary+=t.boundary,a.storage+=t.storage}if(i.__data=new Float32Array(a.storage/Float32Array.BYTES_PER_ELEMENT),i.__offset=r,e>0){let e=16-(n=r%16);0!==n&&e-a.boundary<0&&(r+=16-n,i.__offset=r)}r+=a.storage}(n=r%16)>0&&(r+=16-n),e.__size=r,e.__cache={}}(r),c=function(t){let r=function(){for(let e=0;e<o;e++)if(-1===s.indexOf(e))return s.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=r;let n=e.createBuffer(),i=t.__size,a=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,n),e.bufferData(e.UNIFORM_BUFFER,i,a),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,r,n),n}(r),i[r.id]=c,r.addEventListener("dispose",h));let d=u.program;n.updateUBOMapping(r,d);let p=t.render.frame;a[r.id]!==p&&(function(t){let r=i[t.id],n=t.uniforms,a=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,r);for(let t=0,r=n.length;t<r;t++){let r=n[t];if(!0===function(e,t,r){let n=e.value;if(void 0===r[t]){if("number"==typeof n)r[t]=n;else{let e=Array.isArray(n)?n:[n],i=[];for(let t=0;t<e.length;t++)i.push(e[t].clone());r[t]=i}return!0}if("number"==typeof n){if(r[t]!==n)return r[t]=n,!0}else{let e=Array.isArray(r[t])?r[t]:[r[t]],i=Array.isArray(n)?n:[n];for(let t=0;t<e.length;t++){let r=e[t];if(!1===r.equals(i[t]))return r.copy(i[t]),!0}}return!1}(r,t,a)){let t=r.__offset,n=Array.isArray(r.value)?r.value:[r.value],i=0;for(let a=0;a<n.length;a++){let s=n[a],o=l(s);"number"==typeof s?(r.__data[0]=s,e.bufferSubData(e.UNIFORM_BUFFER,t+i,r.__data)):s.isMatrix3?(r.__data[0]=s.elements[0],r.__data[1]=s.elements[1],r.__data[2]=s.elements[2],r.__data[3]=s.elements[0],r.__data[4]=s.elements[3],r.__data[5]=s.elements[4],r.__data[6]=s.elements[5],r.__data[7]=s.elements[0],r.__data[8]=s.elements[6],r.__data[9]=s.elements[7],r.__data[10]=s.elements[8],r.__data[11]=s.elements[0]):(s.toArray(r.__data,i),i+=o.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,r.__data)}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(r),a[r.id]=p)},dispose:function(){for(let t in i)e.deleteBuffer(i[t]);s=[],i={},a={}}}}class i_{constructor(e={}){let t,r,n,i,a,s,o,c,d,m,g,v,_,x,y,S,M,b,E,T,w,A,R,C,U;let{canvas:L=function(){let e=z("canvas");return e.style.display="block",e}(),context:D=null,depth:I=!0,stencil:N=!0,alpha:F=!1,antialias:B=!1,premultipliedAlpha:k=!0,preserveDrawingBuffer:G=!1,powerPreference:V="default",failIfMajorPerformanceCaveat:H=!1}=e;this.isWebGLRenderer=!0,t=null!==D?D.getContextAttributes().alpha:F;let W=new Uint32Array(4),j=new Int32Array(4),X=null,q=null,Y=[],Z=[];this.domElement=L,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=p,this._useLegacyLights=!1,this.toneMapping=0,this.toneMappingExposure=1;let J=this,K=!1,$=0,Q=0,ee=null,er=-1,ei=null,ea=new et,eo=new et,el=null,eh=new tf(0),eu=0,ec=L.width,ed=L.height,ep=1,ef=null,em=null,eg=new et(0,0,ec,ed),ev=new et(0,0,ec,ed),e_=!1,ex=new ra,ey=!1,eS=!1,eM=null,eb=new eN,eE=new O,eT=new es,ew={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function eA(){return null===ee?ep:1}let eR=D;function eC(e,t){for(let r=0;r<e.length;r++){let n=e[r],i=L.getContext(n,t);if(null!==i)return i}return null}try{if("setAttribute"in L&&L.setAttribute("data-engine","three.js r158"),L.addEventListener("webglcontextlost",eL,!1),L.addEventListener("webglcontextrestored",eD,!1),L.addEventListener("webglcontextcreationerror",eI,!1),null===eR){let e=["webgl2","webgl","experimental-webgl"];if(!0===J.isWebGL1Renderer&&e.shift(),eR=eC(e,{alpha:!0,depth:I,stencil:N,antialias:B,premultipliedAlpha:k,preserveDrawingBuffer:G,powerPreference:V,failIfMajorPerformanceCaveat:H}),null===eR){if(eC(e))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}"undefined"!=typeof WebGLRenderingContext&&eR instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),void 0===eR.getShaderPrecisionFormat&&(eR.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function eU(){r=new rO(eR),n=new rg(eR,r,e),r.init(n),R=new il(eR,r,n),i=new is(eR,r,n),a=new rB(eR),s=new n1,o=new io(eR,r,i,s,n,R,a),c=new r_(J),d=new rI(J),m=new ro(eR,n),C=new rf(eR,r,m,n),g=new rN(eR,m,a,C),v=new rV(eR,g,m,a),T=new rG(eR,n,o),M=new rv(s),_=new n0(J,c,d,r,n,C,M),x=new ig(J,s),y=new n5,S=new it(r,n),E=new rp(J,c,d,i,v,t,k),b=new ia(J,v,n),U=new iv(eR,a,n,i),w=new rm(eR,r,a,n),A=new rF(eR,r,a,n),a.programs=_.programs,J.capabilities=n,J.extensions=r,J.properties=s,J.renderLists=y,J.shadowMap=b,J.state=i,J.info=a}eU();let eP=new im(J,eR);function eL(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),K=!0}function eD(){console.log("THREE.WebGLRenderer: Context Restored."),K=!1;let e=a.autoReset,t=b.enabled,r=b.autoUpdate,n=b.needsUpdate,i=b.type;eU(),a.autoReset=e,b.enabled=t,b.autoUpdate=r,b.needsUpdate=n,b.type=i}function eI(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function eO(e){let t=e.target;t.removeEventListener("dispose",eO),function(e){let t=s.get(e).programs;void 0!==t&&(t.forEach(function(e){_.releaseProgram(e)}),e.isShaderMaterial&&_.releaseShaderCache(e))}(t),s.remove(t)}function eF(e,t,r){!0===e.transparent&&e.side===u&&!1===e.forceSinglePass?(e.side=h,e.needsUpdate=!0,ej(e,t,r),e.side=l,e.needsUpdate=!0,ej(e,t,r),e.side=u):ej(e,t,r)}this.xr=eP,this.getContext=function(){return eR},this.getContextAttributes=function(){return eR.getContextAttributes()},this.forceContextLoss=function(){let e=r.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=r.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return ep},this.setPixelRatio=function(e){void 0!==e&&(ep=e,this.setSize(ec,ed,!1))},this.getSize=function(e){return e.set(ec,ed)},this.setSize=function(e,t,r=!0){if(eP.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ec=e,ed=t,L.width=Math.floor(e*ep),L.height=Math.floor(t*ep),!0===r&&(L.style.width=e+"px",L.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(e){return e.set(ec*ep,ed*ep).floor()},this.setDrawingBufferSize=function(e,t,r){ec=e,ed=t,ep=r,L.width=Math.floor(e*r),L.height=Math.floor(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(ea)},this.getViewport=function(e){return e.copy(eg)},this.setViewport=function(e,t,r,n){e.isVector4?eg.set(e.x,e.y,e.z,e.w):eg.set(e,t,r,n),i.viewport(ea.copy(eg).multiplyScalar(ep).floor())},this.getScissor=function(e){return e.copy(ev)},this.setScissor=function(e,t,r,n){e.isVector4?ev.set(e.x,e.y,e.z,e.w):ev.set(e,t,r,n),i.scissor(eo.copy(ev).multiplyScalar(ep).floor())},this.getScissorTest=function(){return e_},this.setScissorTest=function(e){i.setScissorTest(e_=e)},this.setOpaqueSort=function(e){ef=e},this.setTransparentSort=function(e){em=e},this.getClearColor=function(e){return e.copy(E.getClearColor())},this.setClearColor=function(){E.setClearColor.apply(E,arguments)},this.getClearAlpha=function(){return E.getClearAlpha()},this.setClearAlpha=function(){E.setClearAlpha.apply(E,arguments)},this.clear=function(e=!0,t=!0,r=!0){let n=0;if(e){let e=!1;if(null!==ee){let t=ee.texture.format;e=1033===t||1031===t||1029===t}if(e){let e=ee.texture.type,t=E.getClearColor(),r=E.getClearAlpha(),n=t.r,i=t.g,a=t.b;1009===e||1014===e||1012===e||1020===e||1017===e||1018===e?(W[0]=n,W[1]=i,W[2]=a,W[3]=r,eR.clearBufferuiv(eR.COLOR,0,W)):(j[0]=n,j[1]=i,j[2]=a,j[3]=r,eR.clearBufferiv(eR.COLOR,0,j))}else n|=eR.COLOR_BUFFER_BIT}t&&(n|=eR.DEPTH_BUFFER_BIT),r&&(n|=eR.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),eR.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){L.removeEventListener("webglcontextlost",eL,!1),L.removeEventListener("webglcontextrestored",eD,!1),L.removeEventListener("webglcontextcreationerror",eI,!1),y.dispose(),S.dispose(),s.dispose(),c.dispose(),d.dispose(),v.dispose(),C.dispose(),U.dispose(),_.dispose(),eP.dispose(),eP.removeEventListener("sessionstart",ez),eP.removeEventListener("sessionend",ek),eM&&(eM.dispose(),eM=null),eG.stop()},this.renderBufferDirect=function(e,t,r,a,l,h){let u;null===t&&(t=ew);let p=l.isMesh&&0>l.matrixWorld.determinant(),v=function(e,t,r,a,l){var h;!0!==t.isScene&&(t=ew),o.resetTextureUnits();let u=t.fog,p=a.isMeshStandardMaterial?t.environment:null,m=null===ee?J.outputColorSpace:!0===ee.isXRRenderTarget?ee.texture.colorSpace:f,g=(a.isMeshStandardMaterial?d:c).get(a.envMap||p),v=!0===a.vertexColors&&!!r.attributes.color&&4===r.attributes.color.itemSize,_=!!r.attributes.tangent&&(!!a.normalMap||a.anisotropy>0),y=!!r.morphAttributes.position,S=!!r.morphAttributes.normal,b=!!r.morphAttributes.color,E=0;a.toneMapped&&(null===ee||!0===ee.isXRRenderTarget)&&(E=J.toneMapping);let w=r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color,A=void 0!==w?w.length:0,R=s.get(a),C=q.state.lights;if(!0===ey&&(!0===eS||e!==ei)){let t=e===ei&&a.id===er;M.setState(a,e,t)}let P=!1;a.version===R.__version?R.needsLights&&R.lightsStateVersion!==C.state.version?P=!0:R.outputColorSpace!==m?P=!0:l.isInstancedMesh&&!1===R.instancing?P=!0:l.isInstancedMesh||!0!==R.instancing?l.isSkinnedMesh&&!1===R.skinning?P=!0:l.isSkinnedMesh||!0!==R.skinning?l.isInstancedMesh&&!0===R.instancingColor&&null===l.instanceColor?P=!0:l.isInstancedMesh&&!1===R.instancingColor&&null!==l.instanceColor?P=!0:R.envMap!==g?P=!0:!0===a.fog&&R.fog!==u?P=!0:void 0!==R.numClippingPlanes&&(R.numClippingPlanes!==M.numPlanes||R.numIntersection!==M.numIntersection)?P=!0:R.vertexAlphas!==v?P=!0:R.vertexTangents!==_?P=!0:R.morphTargets!==y?P=!0:R.morphNormals!==S?P=!0:R.morphColors!==b?P=!0:R.toneMapping!==E?P=!0:!0===n.isWebGL2&&R.morphTargetsCount!==A&&(P=!0):P=!0:P=!0:(P=!0,R.__version=a.version);let L=R.currentProgram;!0===P&&(L=ej(a,t,l));let D=!1,I=!1,O=!1,N=L.getUniforms(),F=R.uniforms;if(i.useProgram(L.program)&&(D=!0,I=!0,O=!0),a.id!==er&&(er=a.id,I=!0),D||ei!==e){N.setValue(eR,"projectionMatrix",e.projectionMatrix),N.setValue(eR,"viewMatrix",e.matrixWorldInverse);let t=N.map.cameraPosition;void 0!==t&&t.setValue(eR,eT.setFromMatrixPosition(e.matrixWorld)),n.logarithmicDepthBuffer&&N.setValue(eR,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial)&&N.setValue(eR,"isOrthographic",!0===e.isOrthographicCamera),ei!==e&&(ei=e,I=!0,O=!0)}if(l.isSkinnedMesh){N.setOptional(eR,l,"bindMatrix"),N.setOptional(eR,l,"bindMatrixInverse");let e=l.skeleton;e&&(n.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),N.setValue(eR,"boneTexture",e.boneTexture,o),N.setValue(eR,"boneTextureSize",e.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}let B=r.morphAttributes;if((void 0!==B.position||void 0!==B.normal||void 0!==B.color&&!0===n.isWebGL2)&&T.update(l,r,L),(I||R.receiveShadow!==l.receiveShadow)&&(R.receiveShadow=l.receiveShadow,N.setValue(eR,"receiveShadow",l.receiveShadow)),a.isMeshGouraudMaterial&&null!==a.envMap&&(F.envMap.value=g,F.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1),I&&(N.setValue(eR,"toneMappingExposure",J.toneMappingExposure),R.needsLights&&(h=O,F.ambientLightColor.needsUpdate=h,F.lightProbe.needsUpdate=h,F.directionalLights.needsUpdate=h,F.directionalLightShadows.needsUpdate=h,F.pointLights.needsUpdate=h,F.pointLightShadows.needsUpdate=h,F.spotLights.needsUpdate=h,F.spotLightShadows.needsUpdate=h,F.rectAreaLights.needsUpdate=h,F.hemisphereLights.needsUpdate=h),u&&!0===a.fog&&x.refreshFogUniforms(F,u),x.refreshMaterialUniforms(F,a,ep,ed,eM),nO.upload(eR,eX(R),F,o)),a.isShaderMaterial&&!0===a.uniformsNeedUpdate&&(nO.upload(eR,eX(R),F,o),a.uniformsNeedUpdate=!1),a.isSpriteMaterial&&N.setValue(eR,"center",l.center),N.setValue(eR,"modelViewMatrix",l.modelViewMatrix),N.setValue(eR,"normalMatrix",l.normalMatrix),N.setValue(eR,"modelMatrix",l.matrixWorld),a.isShaderMaterial||a.isRawShaderMaterial){let e=a.uniformsGroups;for(let t=0,r=e.length;t<r;t++)if(n.isWebGL2){let r=e[t];U.update(r,L),U.bind(r,L)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return L}(e,t,r,a,l);i.setMaterial(a,p);let _=r.index,y=1;if(!0===a.wireframe){if(void 0===(_=g.getWireframeAttribute(r)))return;y=2}let S=r.drawRange,b=r.attributes.position,E=S.start*y,R=(S.start+S.count)*y;null!==h&&(E=Math.max(E,h.start*y),R=Math.min(R,(h.start+h.count)*y)),null!==_?(E=Math.max(E,0),R=Math.min(R,_.count)):null!=b&&(E=Math.max(E,0),R=Math.min(R,b.count));let P=R-E;if(P<0||P===1/0)return;C.setup(l,a,v,r,_);let L=w;if(null!==_&&(u=m.get(_),(L=A).setIndex(u)),l.isMesh)!0===a.wireframe?(i.setLineWidth(a.wireframeLinewidth*eA()),L.setMode(eR.LINES)):L.setMode(eR.TRIANGLES);else if(l.isLine){let e=a.linewidth;void 0===e&&(e=1),i.setLineWidth(e*eA()),l.isLineSegments?L.setMode(eR.LINES):l.isLineLoop?L.setMode(eR.LINE_LOOP):L.setMode(eR.LINE_STRIP)}else l.isPoints?L.setMode(eR.POINTS):l.isSprite&&L.setMode(eR.TRIANGLES);if(l.isInstancedMesh)L.renderInstances(E,P,l.count);else if(r.isInstancedBufferGeometry){let e=void 0!==r._maxInstanceCount?r._maxInstanceCount:1/0,t=Math.min(r.instanceCount,e);L.renderInstances(E,P,t)}else L.render(E,P)},this.compile=function(e,t,r=null){null===r&&(r=e),(q=S.get(r)).init(),Z.push(q),r.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(q.pushLight(e),e.castShadow&&q.pushShadow(e))}),e!==r&&e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(q.pushLight(e),e.castShadow&&q.pushShadow(e))}),q.setupLights(J._useLegacyLights);let n=new Set;return e.traverse(function(e){let t=e.material;if(t){if(Array.isArray(t))for(let i=0;i<t.length;i++){let a=t[i];eF(a,r,e),n.add(a)}else eF(t,r,e),n.add(t)}}),Z.pop(),q=null,n},this.compileAsync=function(e,t,n=null){let i=this.compile(e,t,n);return new Promise(t=>{function n(){if(i.forEach(function(e){s.get(e).currentProgram.isReady()&&i.delete(e)}),0===i.size){t(e);return}setTimeout(n,10)}null!==r.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)})};let eB=null;function ez(){eG.stop()}function ek(){eG.start()}let eG=new rs;function eV(e,t,a,s){let l=e.opaque,c=e.transmissive,d=e.transparent;q.setupLightsView(a),!0===ey&&M.setGlobalState(J.clippingPlanes,a),c.length>0&&function(e,t,i,a){if(null!==(!0===i.isScene?i.overrideMaterial:null))return;let s=n.isWebGL2;null===eM&&(eM=new en(1,1,{generateMipmaps:!0,type:r.has("EXT_color_buffer_half_float")?1016:1009,minFilter:1008,samples:s?4:0})),J.getDrawingBufferSize(eE),s?eM.setSize(eE.x,eE.y):eM.setSize(P(eE.x),P(eE.y));let l=J.getRenderTarget();J.setRenderTarget(eM),J.getClearColor(eh),(eu=J.getClearAlpha())<1&&J.setClearColor(16777215,.5),J.clear();let c=J.toneMapping;J.toneMapping=0,eH(e,i,a),o.updateMultisampleRenderTarget(eM),o.updateRenderTargetMipmap(eM);let d=!1;for(let e=0,r=t.length;e<r;e++){let r=t[e],n=r.object,s=r.geometry,o=r.material,l=r.group;if(o.side===u&&n.layers.test(a.layers)){let e=o.side;o.side=h,o.needsUpdate=!0,eW(n,i,a,s,o,l),o.side=e,o.needsUpdate=!0,d=!0}}!0===d&&(o.updateMultisampleRenderTarget(eM),o.updateRenderTargetMipmap(eM)),J.setRenderTarget(l),J.setClearColor(eh,eu),J.toneMapping=c}(l,c,t,a),s&&i.viewport(ea.copy(s)),l.length>0&&eH(l,t,a),c.length>0&&eH(c,t,a),d.length>0&&eH(d,t,a),i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),i.setPolygonOffset(!1)}function eH(e,t,r){let n=!0===t.isScene?t.overrideMaterial:null;for(let i=0,a=e.length;i<a;i++){let a=e[i],s=a.object,o=a.geometry,l=null===n?a.material:n,h=a.group;s.layers.test(r.layers)&&eW(s,t,r,o,l,h)}}function eW(e,t,r,n,i,a){e.onBeforeRender(J,t,r,n,i,a),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(J,t,r,n,e,a),!0===i.transparent&&i.side===u&&!1===i.forceSinglePass?(i.side=h,i.needsUpdate=!0,J.renderBufferDirect(r,t,n,i,e,a),i.side=l,i.needsUpdate=!0,J.renderBufferDirect(r,t,n,i,e,a),i.side=u):J.renderBufferDirect(r,t,n,i,e,a),e.onAfterRender(J,t,r,n,i,a)}function ej(e,t,r){!0!==t.isScene&&(t=ew);let n=s.get(e),i=q.state.lights,a=q.state.shadowsArray,o=i.state.version,l=_.getParameters(e,i.state,a,t,r),h=_.getProgramCacheKey(l),u=n.programs;n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=(e.isMeshStandardMaterial?d:c).get(e.envMap||n.environment),void 0===u&&(e.addEventListener("dispose",eO),u=new Map,n.programs=u);let p=u.get(h);if(void 0!==p){if(n.currentProgram===p&&n.lightsStateVersion===o)return eq(e,l),p}else l.uniforms=_.getUniforms(e),e.onBuild(r,l,J),e.onBeforeCompile(l,J),p=_.acquireProgram(l,h),u.set(h,p),n.uniforms=l.uniforms;let f=n.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(f.clippingPlanes=M.uniform),eq(e,l),n.needsLights=e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,n.lightsStateVersion=o,n.needsLights&&(f.ambientLightColor.value=i.state.ambient,f.lightProbe.value=i.state.probe,f.directionalLights.value=i.state.directional,f.directionalLightShadows.value=i.state.directionalShadow,f.spotLights.value=i.state.spot,f.spotLightShadows.value=i.state.spotShadow,f.rectAreaLights.value=i.state.rectArea,f.ltc_1.value=i.state.rectAreaLTC1,f.ltc_2.value=i.state.rectAreaLTC2,f.pointLights.value=i.state.point,f.pointLightShadows.value=i.state.pointShadow,f.hemisphereLights.value=i.state.hemi,f.directionalShadowMap.value=i.state.directionalShadowMap,f.directionalShadowMatrix.value=i.state.directionalShadowMatrix,f.spotShadowMap.value=i.state.spotShadowMap,f.spotLightMatrix.value=i.state.spotLightMatrix,f.spotLightMap.value=i.state.spotLightMap,f.pointShadowMap.value=i.state.pointShadowMap,f.pointShadowMatrix.value=i.state.pointShadowMatrix),n.currentProgram=p,n.uniformsList=null,p}function eX(e){if(null===e.uniformsList){let t=e.currentProgram.getUniforms();e.uniformsList=nO.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function eq(e,t){let r=s.get(e);r.outputColorSpace=t.outputColorSpace,r.instancing=t.instancing,r.instancingColor=t.instancingColor,r.skinning=t.skinning,r.morphTargets=t.morphTargets,r.morphNormals=t.morphNormals,r.morphColors=t.morphColors,r.morphTargetsCount=t.morphTargetsCount,r.numClippingPlanes=t.numClippingPlanes,r.numIntersection=t.numClipIntersection,r.vertexAlphas=t.vertexAlphas,r.vertexTangents=t.vertexTangents,r.toneMapping=t.toneMapping}eG.setAnimationLoop(function(e){eB&&eB(e)}),"undefined"!=typeof self&&eG.setContext(self),this.setAnimationLoop=function(e){eB=e,eP.setAnimationLoop(e),null===e?eG.stop():eG.start()},eP.addEventListener("sessionstart",ez),eP.addEventListener("sessionend",ek),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===K)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===eP.enabled&&!0===eP.isPresenting&&(!0===eP.cameraAutoUpdate&&eP.updateCamera(t),t=eP.getCamera()),!0===e.isScene&&e.onBeforeRender(J,e,t,ee),(q=S.get(e,Z.length)).init(),Z.push(q),eb.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ex.setFromProjectionMatrix(eb),eS=this.localClippingEnabled,ey=M.init(this.clippingPlanes,eS),(X=y.get(e,Y.length)).init(),Y.push(X),function e(t,r,n,i){if(!1===t.visible)return;if(t.layers.test(r.layers)){if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(r);else if(t.isLight)q.pushLight(t),t.castShadow&&q.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||ex.intersectsSprite(t)){i&&eT.setFromMatrixPosition(t.matrixWorld).applyMatrix4(eb);let e=v.update(t),r=t.material;r.visible&&X.push(t,e,r,n,eT.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||ex.intersectsObject(t))){let e=v.update(t),r=t.material;if(i&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),eT.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),eT.copy(e.boundingSphere.center)),eT.applyMatrix4(t.matrixWorld).applyMatrix4(eb)),Array.isArray(r)){let i=e.groups;for(let a=0,s=i.length;a<s;a++){let s=i[a],o=r[s.materialIndex];o&&o.visible&&X.push(t,e,o,n,eT.z,s)}}else r.visible&&X.push(t,e,r,n,eT.z,null)}}let a=t.children;for(let t=0,s=a.length;t<s;t++)e(a[t],r,n,i)}(e,t,0,J.sortObjects),X.finish(),!0===J.sortObjects&&X.sort(ef,em),this.info.render.frame++,!0===ey&&M.beginShadows();let r=q.state.shadowsArray;if(b.render(r,e,t),!0===ey&&M.endShadows(),!0===this.info.autoReset&&this.info.reset(),E.render(X,e),q.setupLights(J._useLegacyLights),t.isArrayCamera){let r=t.cameras;for(let t=0,n=r.length;t<n;t++){let n=r[t];eV(X,e,n,n.viewport)}}else eV(X,e,t);null!==ee&&(o.updateMultisampleRenderTarget(ee),o.updateRenderTargetMipmap(ee)),!0===e.isScene&&e.onAfterRender(J,e,t),C.resetDefaultState(),er=-1,ei=null,Z.pop(),q=Z.length>0?Z[Z.length-1]:null,Y.pop(),X=Y.length>0?Y[Y.length-1]:null},this.getActiveCubeFace=function(){return $},this.getActiveMipmapLevel=function(){return Q},this.getRenderTarget=function(){return ee},this.setRenderTargetTextures=function(e,t,n){s.get(e.texture).__webglTexture=t,s.get(e.depthTexture).__webglTexture=n;let i=s.get(e);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0!==r.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){let r=s.get(e);r.__webglFramebuffer=t,r.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,r=0){ee=e,$=t,Q=r;let a=!0,l=null,h=!1,u=!1;if(e){let c=s.get(e);void 0!==c.__useDefaultFramebuffer?(i.bindFramebuffer(eR.FRAMEBUFFER,null),a=!1):void 0===c.__webglFramebuffer?o.setupRenderTarget(e):c.__hasExternalTextures&&o.rebindTextures(e,s.get(e.texture).__webglTexture,s.get(e.depthTexture).__webglTexture);let d=e.texture;(d.isData3DTexture||d.isDataArrayTexture||d.isCompressedArrayTexture)&&(u=!0);let p=s.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(l=Array.isArray(p[t])?p[t][r]:p[t],h=!0):l=n.isWebGL2&&e.samples>0&&!1===o.useMultisampledRTT(e)?s.get(e).__webglMultisampledFramebuffer:Array.isArray(p)?p[r]:p,ea.copy(e.viewport),eo.copy(e.scissor),el=e.scissorTest}else ea.copy(eg).multiplyScalar(ep).floor(),eo.copy(ev).multiplyScalar(ep).floor(),el=e_;if(i.bindFramebuffer(eR.FRAMEBUFFER,l)&&n.drawBuffers&&a&&i.drawBuffers(e,l),i.viewport(ea),i.scissor(eo),i.setScissorTest(el),h){let n=s.get(e.texture);eR.framebufferTexture2D(eR.FRAMEBUFFER,eR.COLOR_ATTACHMENT0,eR.TEXTURE_CUBE_MAP_POSITIVE_X+t,n.__webglTexture,r)}else if(u){let n=s.get(e.texture);eR.framebufferTextureLayer(eR.FRAMEBUFFER,eR.COLOR_ATTACHMENT0,n.__webglTexture,r||0,t||0)}er=-1},this.readRenderTargetPixels=function(e,t,a,o,l,h,u){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let c=s.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==u&&(c=c[u]),c){i.bindFramebuffer(eR.FRAMEBUFFER,c);try{let i=e.texture,s=i.format,u=i.type;if(1023!==s&&R.convert(s)!==eR.getParameter(eR.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let c=1016===u&&(r.has("EXT_color_buffer_half_float")||n.isWebGL2&&r.has("EXT_color_buffer_float"));if(1009!==u&&R.convert(u)!==eR.getParameter(eR.IMPLEMENTATION_COLOR_READ_TYPE)&&!(1015===u&&(n.isWebGL2||r.has("OES_texture_float")||r.has("WEBGL_color_buffer_float")))&&!c){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}t>=0&&t<=e.width-o&&a>=0&&a<=e.height-l&&eR.readPixels(t,a,o,l,R.convert(s),R.convert(u),h)}finally{let e=null!==ee?s.get(ee).__webglFramebuffer:null;i.bindFramebuffer(eR.FRAMEBUFFER,e)}}},this.copyFramebufferToTexture=function(e,t,r=0){let n=Math.pow(2,-r),a=Math.floor(t.image.width*n),s=Math.floor(t.image.height*n);o.setTexture2D(t,0),eR.copyTexSubImage2D(eR.TEXTURE_2D,r,0,0,e.x,e.y,a,s),i.unbindTexture()},this.copyTextureToTexture=function(e,t,r,n=0){let a=t.image.width,s=t.image.height,l=R.convert(r.format),h=R.convert(r.type);o.setTexture2D(r,0),eR.pixelStorei(eR.UNPACK_FLIP_Y_WEBGL,r.flipY),eR.pixelStorei(eR.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),eR.pixelStorei(eR.UNPACK_ALIGNMENT,r.unpackAlignment),t.isDataTexture?eR.texSubImage2D(eR.TEXTURE_2D,n,e.x,e.y,a,s,l,h,t.image.data):t.isCompressedTexture?eR.compressedTexSubImage2D(eR.TEXTURE_2D,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,l,t.mipmaps[0].data):eR.texSubImage2D(eR.TEXTURE_2D,n,e.x,e.y,l,h,t.image),0===n&&r.generateMipmaps&&eR.generateMipmap(eR.TEXTURE_2D),i.unbindTexture()},this.copyTextureToTexture3D=function(e,t,r,n,a=0){let s;if(J.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let l=e.max.x-e.min.x+1,h=e.max.y-e.min.y+1,u=e.max.z-e.min.z+1,c=R.convert(n.format),d=R.convert(n.type);if(n.isData3DTexture)o.setTexture3D(n,0),s=eR.TEXTURE_3D;else if(n.isDataArrayTexture)o.setTexture2DArray(n,0),s=eR.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}eR.pixelStorei(eR.UNPACK_FLIP_Y_WEBGL,n.flipY),eR.pixelStorei(eR.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),eR.pixelStorei(eR.UNPACK_ALIGNMENT,n.unpackAlignment);let p=eR.getParameter(eR.UNPACK_ROW_LENGTH),f=eR.getParameter(eR.UNPACK_IMAGE_HEIGHT),m=eR.getParameter(eR.UNPACK_SKIP_PIXELS),g=eR.getParameter(eR.UNPACK_SKIP_ROWS),v=eR.getParameter(eR.UNPACK_SKIP_IMAGES),_=r.isCompressedTexture?r.mipmaps[0]:r.image;eR.pixelStorei(eR.UNPACK_ROW_LENGTH,_.width),eR.pixelStorei(eR.UNPACK_IMAGE_HEIGHT,_.height),eR.pixelStorei(eR.UNPACK_SKIP_PIXELS,e.min.x),eR.pixelStorei(eR.UNPACK_SKIP_ROWS,e.min.y),eR.pixelStorei(eR.UNPACK_SKIP_IMAGES,e.min.z),r.isDataTexture||r.isData3DTexture?eR.texSubImage3D(s,a,t.x,t.y,t.z,l,h,u,c,d,_.data):r.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),eR.compressedTexSubImage3D(s,a,t.x,t.y,t.z,l,h,u,c,_.data)):eR.texSubImage3D(s,a,t.x,t.y,t.z,l,h,u,c,d,_),eR.pixelStorei(eR.UNPACK_ROW_LENGTH,p),eR.pixelStorei(eR.UNPACK_IMAGE_HEIGHT,f),eR.pixelStorei(eR.UNPACK_SKIP_PIXELS,m),eR.pixelStorei(eR.UNPACK_SKIP_ROWS,g),eR.pixelStorei(eR.UNPACK_SKIP_IMAGES,v),0===a&&n.generateMipmaps&&eR.generateMipmap(s),i.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?o.setTextureCube(e,0):e.isData3DTexture?o.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?o.setTexture2DArray(e,0):o.setTexture2D(e,0),i.unbindTexture()},this.resetState=function(){$=0,Q=0,ee=null,i.reset(),C.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return 2e3}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;let t=this.getContext();t.drawingBufferColorSpace=e===m?"display-p3":"srgb",t.unpackColorSpace=X.workingColorSpace===g?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===p?3001:3e3}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=3001===e?p:f}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}(class extends i_{}).prototype.isWebGL1Renderer=!0;class ix extends e8{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class iy{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=w()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,r){e*=this.stride,r*=t.stride;for(let n=0,i=this.stride;n<i;n++)this.array[e+n]=t.array[r+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=w()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),r=new this.constructor(t,this.stride);return r.setUsage(this.usage),r}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=w()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}let iS=new es;class iM{constructor(e,t,r,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=r,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,r=this.data.count;t<r;t++)iS.fromBufferAttribute(this,t),iS.applyMatrix4(e),this.setXYZ(t,iS.x,iS.y,iS.z);return this}applyNormalMatrix(e){for(let t=0,r=this.count;t<r;t++)iS.fromBufferAttribute(this,t),iS.applyNormalMatrix(e),this.setXYZ(t,iS.x,iS.y,iS.z);return this}transformDirection(e){for(let t=0,r=this.count;t<r;t++)iS.fromBufferAttribute(this,t),iS.transformDirection(e),this.setXYZ(t,iS.x,iS.y,iS.z);return this}setX(e,t){return this.normalized&&(t=D(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=D(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=D(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=D(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=L(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=L(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=L(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=L(t,this.array)),t}setXY(e,t,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=D(t,this.array),r=D(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=r,this}setXYZ(e,t,r,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=D(t,this.array),r=D(r,this.array),n=D(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this}setXYZW(e,t,r,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=D(t,this.array),r=D(r,this.array),n=D(n,this.array),i=D(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this.data.array[e+3]=i,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new iM(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");let e=[];for(let t=0;t<this.count;t++){let r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return new tS(new this.array.constructor(e),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");let e=[];for(let t=0;t<this.count;t++){let r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}}}class ib extends tS{constructor(e,t,r,n=1){super(e,t,r),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}class iE extends tv{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new tf(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}let iT=new es,iw=new es,iA=new eN,iR=new eO,iC=new eA;class iU extends e8{constructor(e=new tL,t=new iE){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,r=[0];for(let e=1,n=t.count;e<n;e++)iT.fromBufferAttribute(t,e-1),iw.fromBufferAttribute(t,e),r[e]=r[e-1],r[e]+=iT.distanceTo(iw);e.setAttribute("lineDistance",new tE(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){let r=this.geometry,n=this.matrixWorld,i=e.params.Line.threshold,a=r.drawRange;if(null===r.boundingSphere&&r.computeBoundingSphere(),iC.copy(r.boundingSphere),iC.applyMatrix4(n),iC.radius+=i,!1===e.ray.intersectsSphere(iC))return;iA.copy(n).invert(),iR.copy(e.ray).applyMatrix4(iA);let s=i/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=new es,h=new es,u=new es,c=new es,d=this.isLineSegments?2:1,p=r.index,f=r.attributes.position;if(null!==p){let r=Math.max(0,a.start),n=Math.min(p.count,a.start+a.count);for(let i=r,a=n-1;i<a;i+=d){let r=p.getX(i),n=p.getX(i+1);if(l.fromBufferAttribute(f,r),h.fromBufferAttribute(f,n),iR.distanceSqToSegment(l,h,c,u)>o)continue;c.applyMatrix4(this.matrixWorld);let a=e.ray.origin.distanceTo(c);a<e.near||a>e.far||t.push({distance:a,point:u.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else{let r=Math.max(0,a.start),n=Math.min(f.count,a.start+a.count);for(let i=r,a=n-1;i<a;i+=d){if(l.fromBufferAttribute(f,i),h.fromBufferAttribute(f,i+1),iR.distanceSqToSegment(l,h,c,u)>o)continue;c.applyMatrix4(this.matrixWorld);let r=e.ray.origin.distanceTo(c);r<e.near||r>e.far||t.push({distance:r,point:u.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){let e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){let r=e[t[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){let t=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}let iP=new es,iL=new es;class iD extends iU{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,r=[];for(let e=0,n=t.count;e<n;e+=2)iP.fromBufferAttribute(t,e),iL.fromBufferAttribute(t,e+1),r[e]=0===e?0:r[e-1],r[e+1]=r[e]+iP.distanceTo(iL);e.setAttribute("lineDistance",new tE(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class iI{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let r=this.getUtoTmapping(e);return this.getPoint(r,t)}getPoints(e=5){let t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return t}getSpacedPoints(e=5){let t=[];for(let r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],r,n=this.getPoint(0),i=0;t.push(0);for(let a=1;a<=e;a++)t.push(i+=(r=this.getPoint(a/e)).distanceTo(n)),n=r;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let r;let n=this.getLengths(),i=0,a=n.length;r=t||e*n[a-1];let s=0,o=a-1,l;for(;s<=o;)if((l=n[i=Math.floor(s+(o-s)/2)]-r)<0)s=i+1;else if(l>0)o=i-1;else{o=i;break}if(n[i=o]===r)return i/(a-1);let h=n[i],u=n[i+1];return(i+(r-h)/(u-h))/(a-1)}getTangent(e,t){let r=e-1e-4,n=e+1e-4;r<0&&(r=0),n>1&&(n=1);let i=this.getPoint(r),a=this.getPoint(n),s=t||(i.isVector2?new O:new es);return s.copy(a).sub(i).normalize(),s}getTangentAt(e,t){let r=this.getUtoTmapping(e);return this.getTangent(r,t)}computeFrenetFrames(e,t){let r=new es,n=[],i=[],a=[],s=new es,o=new eN;for(let t=0;t<=e;t++){let r=t/e;n[t]=this.getTangentAt(r,new es)}i[0]=new es,a[0]=new es;let l=Number.MAX_VALUE,h=Math.abs(n[0].x),u=Math.abs(n[0].y),c=Math.abs(n[0].z);h<=l&&(l=h,r.set(1,0,0)),u<=l&&(l=u,r.set(0,1,0)),c<=l&&r.set(0,0,1),s.crossVectors(n[0],r).normalize(),i[0].crossVectors(n[0],s),a[0].crossVectors(n[0],i[0]);for(let t=1;t<=e;t++){if(i[t]=i[t-1].clone(),a[t]=a[t-1].clone(),s.crossVectors(n[t-1],n[t]),s.length()>Number.EPSILON){s.normalize();let e=Math.acos(A(n[t-1].dot(n[t]),-1,1));i[t].applyMatrix4(o.makeRotationAxis(s,e))}a[t].crossVectors(n[t],i[t])}if(!0===t){let t=Math.acos(A(i[0].dot(i[e]),-1,1));t/=e,n[0].dot(s.crossVectors(i[0],i[e]))>0&&(t=-t);for(let r=1;r<=e;r++)i[r].applyMatrix4(o.makeRotationAxis(n[r],t*r)),a[r].crossVectors(n[r],i[r])}return{tangents:n,normals:i,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class iO extends iI{constructor(e=0,t=0,r=1,n=1,i=0,a=2*Math.PI,s=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=n,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){let r=t||new O,n=2*Math.PI,i=this.aEndAngle-this.aStartAngle,a=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=n;for(;i>n;)i-=n;i<Number.EPSILON&&(i=a?0:n),!0!==this.aClockwise||a||(i===n?i=-n:i-=n);let s=this.aStartAngle+e*i,o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){let e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),r=o-this.aX,n=l-this.aY;o=r*e-n*t+this.aX,l=r*t+n*e+this.aY}return r.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}function iN(){let e=0,t=0,r=0,n=0;function i(i,a,s,o){e=i,t=s,r=-3*i+3*a-2*s-o,n=2*i-2*a+s+o}return{initCatmullRom:function(e,t,r,n,a){i(t,r,a*(r-e),a*(n-t))},initNonuniformCatmullRom:function(e,t,r,n,a,s,o){let l=(t-e)/a-(r-e)/(a+s)+(r-t)/s,h=(r-t)/s-(n-t)/(s+o)+(n-r)/o;i(t,r,l*=s,h*=s)},calc:function(i){let a=i*i;return e+t*i+r*a+a*i*n}}}let iF=new es,iB=new iN,iz=new iN,ik=new iN;function iG(e,t,r,n,i){let a=(n-t)*.5,s=(i-r)*.5,o=e*e;return e*o*(2*r-2*n+a+s)+(-3*r+3*n-2*a-s)*o+a*e+r}function iV(e,t,r,n){return function(e,t){let r=1-e;return r*r*t}(e,t)+2*(1-e)*e*r+e*e*n}function iH(e,t,r,n,i){return function(e,t){let r=1-e;return r*r*r*t}(e,t)+function(e,t){let r=1-e;return 3*r*r*e*t}(e,r)+3*(1-e)*e*e*n+e*e*e*i}class iW extends iI{constructor(e=new O,t=new O,r=new O,n=new O){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=r,this.v3=n}getPoint(e,t=new O){let r=this.v0,n=this.v1,i=this.v2,a=this.v3;return t.set(iH(e,r.x,n.x,i.x,a.x),iH(e,r.y,n.y,i.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ij extends iI{constructor(e=new O,t=new O){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new O){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new O){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class iX extends iI{constructor(e=new O,t=new O,r=new O){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new O){let r=this.v0,n=this.v1,i=this.v2;return t.set(iV(e,r.x,n.x,i.x),iV(e,r.y,n.y,i.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class iq extends iI{constructor(e=new es,t=new es,r=new es){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new es){let r=this.v0,n=this.v1,i=this.v2;return t.set(iV(e,r.x,n.x,i.x),iV(e,r.y,n.y,i.y),iV(e,r.z,n.z,i.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class iY extends iI{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new O){let r=this.points,n=(r.length-1)*e,i=Math.floor(n),a=n-i,s=r[0===i?i:i-1],o=r[i],l=r[i>r.length-2?r.length-1:i+1],h=r[i>r.length-3?r.length-1:i+2];return t.set(iG(a,s.x,o.x,l.x,h.x),iG(a,s.y,o.y,l.y,h.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){let r=e.points[t];this.points.push(r.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,r=this.points.length;t<r;t++){let r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){let r=e.points[t];this.points.push(new O().fromArray(r))}return this}}var iZ=Object.freeze({__proto__:null,ArcCurve:class extends iO{constructor(e,t,r,n,i,a){super(e,t,r,r,n,i,a),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class extends iI{constructor(e=[],t=!1,r="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=r,this.tension=n}getPoint(e,t=new es){let r,n;let i=this.points,a=i.length,s=(a-(this.closed?0:1))*e,o=Math.floor(s),l=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/a)+1)*a:0===l&&o===a-1&&(o=a-2,l=1),this.closed||o>0?r=i[(o-1)%a]:(iF.subVectors(i[0],i[1]).add(i[0]),r=iF);let h=i[o%a],u=i[(o+1)%a];if(this.closed||o+2<a?n=i[(o+2)%a]:(iF.subVectors(i[a-1],i[a-2]).add(i[a-1]),n=iF),"centripetal"===this.curveType||"chordal"===this.curveType){let e="chordal"===this.curveType?.5:.25,t=Math.pow(r.distanceToSquared(h),e),i=Math.pow(h.distanceToSquared(u),e),a=Math.pow(u.distanceToSquared(n),e);i<1e-4&&(i=1),t<1e-4&&(t=i),a<1e-4&&(a=i),iB.initNonuniformCatmullRom(r.x,h.x,u.x,n.x,t,i,a),iz.initNonuniformCatmullRom(r.y,h.y,u.y,n.y,t,i,a),ik.initNonuniformCatmullRom(r.z,h.z,u.z,n.z,t,i,a)}else"catmullrom"===this.curveType&&(iB.initCatmullRom(r.x,h.x,u.x,n.x,this.tension),iz.initCatmullRom(r.y,h.y,u.y,n.y,this.tension),ik.initCatmullRom(r.z,h.z,u.z,n.z,this.tension));return t.set(iB.calc(l),iz.calc(l),ik.calc(l)),t}copy(e){super.copy(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){let r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,r=this.points.length;t<r;t++){let r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){let r=e.points[t];this.points.push(new es().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}},CubicBezierCurve:iW,CubicBezierCurve3:class extends iI{constructor(e=new es,t=new es,r=new es,n=new es){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=r,this.v3=n}getPoint(e,t=new es){let r=this.v0,n=this.v1,i=this.v2,a=this.v3;return t.set(iH(e,r.x,n.x,i.x,a.x),iH(e,r.y,n.y,i.y,a.y),iH(e,r.z,n.z,i.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}},EllipseCurve:iO,LineCurve:ij,LineCurve3:class extends iI{constructor(e=new es,t=new es){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new es){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new es){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},QuadraticBezierCurve:iX,QuadraticBezierCurve3:iq,SplineCurve:iY});class iJ extends iI{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){let r=!0===e.isVector2?"LineCurve":"LineCurve3";this.curves.push(new iZ[r](t,e))}return this}getPoint(e,t){let r=e*this.getLength(),n=this.getCurveLengths(),i=0;for(;i<n.length;){if(n[i]>=r){let e=n[i]-r,a=this.curves[i],s=a.getLength(),o=0===s?0:1-e/s;return a.getPointAt(o,t)}i++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let r=0,n=this.curves.length;r<n;r++)e.push(t+=this.curves[r].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t;let r=[];for(let n=0,i=this.curves;n<i.length;n++){let a=i[n],s=a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,o=a.getPoints(s);for(let e=0;e<o.length;e++){let n=o[e];t&&t.equals(n)||(r.push(n),t=n)}}return this.autoClose&&r.length>1&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r}copy(e){super.copy(e),this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){let r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,r=this.curves.length;t<r;t++){let r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){let r=e.curves[t];this.curves.push(new iZ[r.type]().fromJSON(r))}return this}}class iK extends iJ{constructor(e){super(),this.type="Path",this.currentPoint=new O,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let r=new ij(this.currentPoint.clone(),new O(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,r,n){let i=new iX(this.currentPoint.clone(),new O(e,t),new O(r,n));return this.curves.push(i),this.currentPoint.set(r,n),this}bezierCurveTo(e,t,r,n,i,a){let s=new iW(this.currentPoint.clone(),new O(e,t),new O(r,n),new O(i,a));return this.curves.push(s),this.currentPoint.set(i,a),this}splineThru(e){let t=new iY([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,r,n,i,a){let s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,r,n,i,a),this}absarc(e,t,r,n,i,a){return this.absellipse(e,t,r,r,n,i,a),this}ellipse(e,t,r,n,i,a,s,o){let l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,r,n,i,a,s,o),this}absellipse(e,t,r,n,i,a,s,o){let l=new iO(e,t,r,n,i,a,s,o);if(this.curves.length>0){let e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);let h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class i$ extends tL{constructor(e=[new O(0,-.5),new O(.5,0),new O(0,.5)],t=12,r=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},t=Math.floor(t),n=A(n,0,2*Math.PI);let i=[],a=[],s=[],o=[],l=[],h=1/t,u=new es,c=new O,d=new es,p=new es,f=new es,m=0,g=0;for(let t=0;t<=e.length-1;t++)switch(t){case 0:m=e[t+1].x-e[t].x,g=e[t+1].y-e[t].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case e.length-1:o.push(f.x,f.y,f.z);break;default:m=e[t+1].x-e[t].x,g=e[t+1].y-e[t].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let i=0;i<=t;i++){let d=r+i*h*n,p=Math.sin(d),f=Math.cos(d);for(let r=0;r<=e.length-1;r++){u.x=e[r].x*p,u.y=e[r].y,u.z=e[r].x*f,a.push(u.x,u.y,u.z),c.x=i/t,c.y=r/(e.length-1),s.push(c.x,c.y);let n=o[3*r+0]*p,h=o[3*r+1],d=o[3*r+0]*f;l.push(n,h,d)}}for(let r=0;r<t;r++)for(let t=0;t<e.length-1;t++){let n=t+r*e.length,a=n+e.length,s=n+e.length+1,o=n+1;i.push(n,a,o),i.push(s,o,a)}this.setIndex(i),this.setAttribute("position",new tE(a,3)),this.setAttribute("uv",new tE(s,2)),this.setAttribute("normal",new tE(l,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new i$(e.points,e.segments,e.phiStart,e.phiLength)}}class iQ extends i${constructor(e=1,t=1,r=4,n=8){let i=new iK;i.absarc(0,-t/2,e,1.5*Math.PI,0),i.absarc(0,t/2,e,0,.5*Math.PI),super(i.getPoints(r),n),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:r,radialSegments:n}}static fromJSON(e){return new iQ(e.radius,e.length,e.capSegments,e.radialSegments)}}class i0 extends tL{constructor(e=1,t=32,r=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},t=Math.max(3,t);let i=[],a=[],s=[],o=[],l=new es,h=new O;a.push(0,0,0),s.push(0,0,1),o.push(.5,.5);for(let i=0,u=3;i<=t;i++,u+=3){let c=r+i/t*n;l.x=e*Math.cos(c),l.y=e*Math.sin(c),a.push(l.x,l.y,l.z),s.push(0,0,1),h.x=(a[u]/e+1)/2,h.y=(a[u+1]/e+1)/2,o.push(h.x,h.y)}for(let e=1;e<=t;e++)i.push(e,e+1,0);this.setIndex(i),this.setAttribute("position",new tE(a,3)),this.setAttribute("normal",new tE(s,3)),this.setAttribute("uv",new tE(o,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new i0(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class i1 extends tL{constructor(e=1,t=1,r=1,n=32,i=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:a,thetaStart:s,thetaLength:o};let l=this;n=Math.floor(n),i=Math.floor(i);let h=[],u=[],c=[],d=[],p=0,f=[],m=r/2,g=0;function v(r){let i=p,a=new O,f=new es,v=0,_=!0===r?e:t,x=!0===r?1:-1;for(let e=1;e<=n;e++)u.push(0,m*x,0),c.push(0,x,0),d.push(.5,.5),p++;let y=p;for(let e=0;e<=n;e++){let t=e/n*o+s,r=Math.cos(t),i=Math.sin(t);f.x=_*i,f.y=m*x,f.z=_*r,u.push(f.x,f.y,f.z),c.push(0,x,0),a.x=.5*r+.5,a.y=.5*i*x+.5,d.push(a.x,a.y),p++}for(let e=0;e<n;e++){let t=i+e,n=y+e;!0===r?h.push(n,n+1,t):h.push(n+1,n,t),v+=3}l.addGroup(g,v,!0===r?1:2),g+=v}(function(){let a=new es,v=new es,_=0,x=(t-e)/r;for(let l=0;l<=i;l++){let h=[],g=l/i,_=g*(t-e)+e;for(let e=0;e<=n;e++){let t=e/n,i=t*o+s,l=Math.sin(i),f=Math.cos(i);v.x=_*l,v.y=-g*r+m,v.z=_*f,u.push(v.x,v.y,v.z),a.set(l,x,f).normalize(),c.push(a.x,a.y,a.z),d.push(t,1-g),h.push(p++)}f.push(h)}for(let e=0;e<n;e++)for(let t=0;t<i;t++){let r=f[t][e],n=f[t+1][e],i=f[t+1][e+1],a=f[t][e+1];h.push(r,n,a),h.push(n,i,a),_+=6}l.addGroup(g,_,0),g+=_})(),!1===a&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(h),this.setAttribute("position",new tE(u,3)),this.setAttribute("normal",new tE(c,3)),this.setAttribute("uv",new tE(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new i1(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class i2 extends i1{constructor(e=1,t=1,r=32,n=1,i=!1,a=0,s=2*Math.PI){super(0,e,t,r,n,i,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:a,thetaLength:s}}static fromJSON(e){return new i2(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class i3 extends tL{constructor(e=[],t=[],r=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n};let i=[],a=[];function s(e){i.push(e.x,e.y,e.z)}function o(t,r){let n=3*t;r.x=e[n+0],r.y=e[n+1],r.z=e[n+2]}function l(e,t,r,n){n<0&&1===e.x&&(a[t]=e.x-1),0===r.x&&0===r.z&&(a[t]=n/2/Math.PI+.5)}function h(e){return Math.atan2(e.z,-e.x)}(function(e){let r=new es,n=new es,i=new es;for(let a=0;a<t.length;a+=3)o(t[a+0],r),o(t[a+1],n),o(t[a+2],i),function(e,t,r,n){let i=n+1,a=[];for(let n=0;n<=i;n++){a[n]=[];let s=e.clone().lerp(r,n/i),o=t.clone().lerp(r,n/i),l=i-n;for(let e=0;e<=l;e++)0===e&&n===i?a[n][e]=s:a[n][e]=s.clone().lerp(o,e/l)}for(let e=0;e<i;e++)for(let t=0;t<2*(i-e)-1;t++){let r=Math.floor(t/2);t%2==0?(s(a[e][r+1]),s(a[e+1][r]),s(a[e][r])):(s(a[e][r+1]),s(a[e+1][r+1]),s(a[e+1][r]))}}(r,n,i,e)})(n),function(e){let t=new es;for(let r=0;r<i.length;r+=3)t.x=i[r+0],t.y=i[r+1],t.z=i[r+2],t.normalize().multiplyScalar(e),i[r+0]=t.x,i[r+1]=t.y,i[r+2]=t.z}(r),function(){let e=new es;for(let t=0;t<i.length;t+=3){e.x=i[t+0],e.y=i[t+1],e.z=i[t+2];let r=h(e)/2/Math.PI+.5,n=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;a.push(r,1-n)}(function(){let e=new es,t=new es,r=new es,n=new es,s=new O,o=new O,u=new O;for(let c=0,d=0;c<i.length;c+=9,d+=6){e.set(i[c+0],i[c+1],i[c+2]),t.set(i[c+3],i[c+4],i[c+5]),r.set(i[c+6],i[c+7],i[c+8]),s.set(a[d+0],a[d+1]),o.set(a[d+2],a[d+3]),u.set(a[d+4],a[d+5]),n.copy(e).add(t).add(r).divideScalar(3);let p=h(n);l(s,d+0,e,p),l(o,d+2,t,p),l(u,d+4,r,p)}})(),function(){for(let e=0;e<a.length;e+=6){let t=a[e+0],r=a[e+2],n=a[e+4],i=Math.max(t,r,n),s=Math.min(t,r,n);i>.9&&s<.1&&(t<.2&&(a[e+0]+=1),r<.2&&(a[e+2]+=1),n<.2&&(a[e+4]+=1))}}()}(),this.setAttribute("position",new tE(i,3)),this.setAttribute("normal",new tE(i.slice(),3)),this.setAttribute("uv",new tE(a,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new i3(e.vertices,e.indices,e.radius,e.details)}}class i4 extends i3{constructor(e=1,t=0){let r=(1+Math.sqrt(5))/2,n=1/r;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new i4(e.radius,e.detail)}}class i5 extends iK{constructor(e){super(e),this.uuid=w(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let r=0,n=this.holes.length;r<n;r++)t[r]=this.holes[r].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){let r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,r=this.holes.length;t<r;t++){let r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){let r=e.holes[t];this.holes.push(new iK().fromJSON(r))}return this}}let i6={triangulate:function(e,t,r=2){let n,i,a,s,o,l,h;let u=t&&t.length,c=u?t[0]*r:e.length,d=i8(e,0,c,r,!0),p=[];if(!d||d.next===d.prev)return p;if(u&&(d=function(e,t,r,n){let i,a,s,o,l;let h=[];for(i=0,a=t.length;i<a;i++)s=t[i]*n,o=i<a-1?t[i+1]*n:e.length,(l=i8(e,s,o,n,!1))===l.next&&(l.steiner=!0),h.push(function(e){let t=e,r=e;do(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next;while(t!==e)return r}(l));for(h.sort(i9),i=0;i<h.length;i++)r=function(e,t){let r=function(e,t){let r=t,n=-1/0,i,a=e.x,s=e.y;do{if(s<=r.y&&s>=r.next.y&&r.next.y!==r.y){let e=r.x+(s-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(e<=a&&e>n&&(n=e,i=r.x<r.next.x?r:r.next,e===a))return i}r=r.next}while(r!==t)if(!i)return null;let o=i,l=i.x,h=i.y,u=1/0,c;r=i;do{var d,p;a>=r.x&&r.x>=l&&a!==r.x&&at(s<h?a:n,s,l,h,s<h?n:a,s,r.x,r.y)&&(c=Math.abs(s-r.y)/(a-r.x),ao(r,e)&&(c<u||c===u&&(r.x>i.x||r.x===i.x&&(d=i,p=r,0>ar(d.prev,d,p.prev)&&0>ar(p.next,d,d.next))))&&(i=r,u=c)),r=r.next}while(r!==o)return i}(e,t);if(!r)return t;let n=al(r,e);return i7(n,n.next),i7(r,r.next)}(h[i],r);return r}(e,t,d,r)),e.length>80*r){n=a=e[0],i=s=e[1];for(let t=r;t<c;t+=r)o=e[t],l=e[t+1],o<n&&(n=o),l<i&&(i=l),o>a&&(a=o),l>s&&(s=l);h=0!==(h=Math.max(a-n,s-i))?32767/h:0}return function e(t,r,n,i,a,s,o){if(!t)return;!o&&s&&function(e,t,r,n){let i=e;do 0===i.z&&(i.z=ae(i.x,i.y,t,r,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e)i.prevZ.nextZ=null,i.prevZ=null,function(e){let t,r,n,i,a,s,o,l,h=1;do{for(r=e,e=null,a=null,s=0;r;){for(s++,n=r,o=0,t=0;t<h&&(o++,n=n.nextZ);t++);for(l=h;o>0||l>0&&n;)0!==o&&(0===l||!n||r.z<=n.z)?(i=r,r=r.nextZ,o--):(i=n,n=n.nextZ,l--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;r=n}a.nextZ=null,h*=2}while(s>1)}(i)}(t,i,a,s);let l=t,h,u;for(;t.prev!==t.next;){if(h=t.prev,u=t.next,s?function(e,t,r,n){let i=e.prev,a=e.next;if(ar(i,e,a)>=0)return!1;let s=i.x,o=e.x,l=a.x,h=i.y,u=e.y,c=a.y,d=s<o?s<l?s:l:o<l?o:l,p=h<u?h<c?h:c:u<c?u:c,f=s>o?s>l?s:l:o>l?o:l,m=h>u?h>c?h:c:u>c?u:c,g=ae(d,p,t,r,n),v=ae(f,m,t,r,n),_=e.prevZ,x=e.nextZ;for(;_&&_.z>=g&&x&&x.z<=v;){if(_.x>=d&&_.x<=f&&_.y>=p&&_.y<=m&&_!==i&&_!==a&&at(s,h,o,u,l,c,_.x,_.y)&&ar(_.prev,_,_.next)>=0||(_=_.prevZ,x.x>=d&&x.x<=f&&x.y>=p&&x.y<=m&&x!==i&&x!==a&&at(s,h,o,u,l,c,x.x,x.y)&&ar(x.prev,x,x.next)>=0))return!1;x=x.nextZ}for(;_&&_.z>=g;){if(_.x>=d&&_.x<=f&&_.y>=p&&_.y<=m&&_!==i&&_!==a&&at(s,h,o,u,l,c,_.x,_.y)&&ar(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;x&&x.z<=v;){if(x.x>=d&&x.x<=f&&x.y>=p&&x.y<=m&&x!==i&&x!==a&&at(s,h,o,u,l,c,x.x,x.y)&&ar(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}(t,i,a,s):function(e){let t=e.prev,r=e.next;if(ar(t,e,r)>=0)return!1;let n=t.x,i=e.x,a=r.x,s=t.y,o=e.y,l=r.y,h=n<i?n<a?n:a:i<a?i:a,u=s<o?s<l?s:l:o<l?o:l,c=n>i?n>a?n:a:i>a?i:a,d=s>o?s>l?s:l:o>l?o:l,p=r.next;for(;p!==t;){if(p.x>=h&&p.x<=c&&p.y>=u&&p.y<=d&&at(n,s,i,o,a,l,p.x,p.y)&&ar(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}(t)){r.push(h.i/n|0),r.push(t.i/n|0),r.push(u.i/n|0),au(t),t=u.next,l=u.next;continue}if((t=u)===l){o?1===o?e(t=function(e,t,r){let n=e;do{let i=n.prev,a=n.next.next;!an(i,a)&&ai(i,n,n.next,a)&&ao(i,a)&&ao(a,i)&&(t.push(i.i/r|0),t.push(n.i/r|0),t.push(a.i/r|0),au(n),au(n.next),n=e=a),n=n.next}while(n!==e)return i7(n)}(i7(t),r,n),r,n,i,a,s,2):2===o&&function(t,r,n,i,a,s){let o=t;do{let t=o.next.next;for(;t!==o.prev;){var l,h;if(o.i!==t.i&&(l=o,h=t,l.next.i!==h.i&&l.prev.i!==h.i&&!function(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&ai(r,r.next,e,t))return!0;r=r.next}while(r!==e)return!1}(l,h)&&(ao(l,h)&&ao(h,l)&&function(e,t){let r=e,n=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do r.y>a!=r.next.y>a&&r.next.y!==r.y&&i<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next;while(r!==e)return n}(l,h)&&(ar(l.prev,l,h.prev)||ar(l,h.prev,h))||an(l,h)&&ar(l.prev,l,l.next)>0&&ar(h.prev,h,h.next)>0))){let l=al(o,t);o=i7(o,o.next),l=i7(l,l.next),e(o,r,n,i,a,s,0),e(l,r,n,i,a,s,0);return}t=t.next}o=o.next}while(o!==t)}(t,r,n,i,a,s):e(i7(t),r,n,i,a,s,1);break}}}(d,p,r,n,i,h,0),p}};function i8(e,t,r,n,i){let a,s;if(i===function(e,t,r,n){let i=0;for(let a=t,s=r-n;a<r;a+=n)i+=(e[s]-e[a])*(e[a+1]+e[s+1]),s=a;return i}(e,t,r,n)>0)for(a=t;a<r;a+=n)s=ah(a,e[a],e[a+1],s);else for(a=r-n;a>=t;a-=n)s=ah(a,e[a],e[a+1],s);return s&&an(s,s.next)&&(au(s),s=s.next),s}function i7(e,t){if(!e)return e;t||(t=e);let r=e,n;do if(n=!1,!r.steiner&&(an(r,r.next)||0===ar(r.prev,r,r.next))){if(au(r),(r=t=r.prev)===r.next)break;n=!0}else r=r.next;while(n||r!==t)return t}function i9(e,t){return e.x-t.x}function ae(e,t,r,n,i){return(e=((e=((e=((e=((e=(e-r)*i|0)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=(t-n)*i|0)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function at(e,t,r,n,i,a,s,o){return(i-s)*(t-o)>=(e-s)*(a-o)&&(e-s)*(n-o)>=(r-s)*(t-o)&&(r-s)*(a-o)>=(i-s)*(n-o)}function ar(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function an(e,t){return e.x===t.x&&e.y===t.y}function ai(e,t,r,n){let i=as(ar(e,t,r)),a=as(ar(e,t,n)),s=as(ar(r,n,e)),o=as(ar(r,n,t));return!!(i!==a&&s!==o||0===i&&aa(e,r,t)||0===a&&aa(e,n,t)||0===s&&aa(r,e,n)||0===o&&aa(r,t,n))}function aa(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function as(e){return e>0?1:e<0?-1:0}function ao(e,t){return 0>ar(e.prev,e,e.next)?ar(e,t,e.next)>=0&&ar(e,e.prev,t)>=0:0>ar(e,t,e.prev)||0>ar(e,e.next,t)}function al(e,t){let r=new ac(e.i,e.x,e.y),n=new ac(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,n.next=r,r.prev=n,a.next=n,n.prev=a,n}function ah(e,t,r,n){let i=new ac(e,t,r);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function au(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function ac(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class ad{static area(e){let t=e.length,r=0;for(let n=t-1,i=0;i<t;n=i++)r+=e[n].x*e[i].y-e[i].x*e[n].y;return .5*r}static isClockWise(e){return 0>ad.area(e)}static triangulateShape(e,t){let r=[],n=[],i=[];ap(e),af(r,e);let a=e.length;t.forEach(ap);for(let e=0;e<t.length;e++)n.push(a),a+=t[e].length,af(r,t[e]);let s=i6.triangulate(r,n);for(let e=0;e<s.length;e+=3)i.push(s.slice(e,e+3));return i}}function ap(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function af(e,t){for(let r=0;r<t.length;r++)e.push(t[r].x),e.push(t[r].y)}class am extends tL{constructor(e=new i5([new O(.5,.5),new O(-.5,.5),new O(-.5,-.5),new O(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let r=this,n=[],i=[];for(let a=0,s=e.length;a<s;a++)(function(e){let a,s,o,l;let h=[],u=void 0!==t.curveSegments?t.curveSegments:12,c=void 0!==t.steps?t.steps:1,d=void 0!==t.depth?t.depth:1,p=void 0===t.bevelEnabled||t.bevelEnabled,f=void 0!==t.bevelThickness?t.bevelThickness:.2,m=void 0!==t.bevelSize?t.bevelSize:f-.1,g=void 0!==t.bevelOffset?t.bevelOffset:0,v=void 0!==t.bevelSegments?t.bevelSegments:3,_=t.extrudePath,x=void 0!==t.UVGenerator?t.UVGenerator:ag,y,S=!1;_&&(y=_.getSpacedPoints(c),S=!0,p=!1,a=_.computeFrenetFrames(c,!1),s=new es,o=new es,l=new es),p||(v=0,f=0,m=0,g=0);let M=e.extractPoints(u),b=M.shape,E=M.holes;if(!ad.isClockWise(b)){b=b.reverse();for(let e=0,t=E.length;e<t;e++){let t=E[e];ad.isClockWise(t)&&(E[e]=t.reverse())}}let T=ad.triangulateShape(b,E),w=b;for(let e=0,t=E.length;e<t;e++){let t=E[e];b=b.concat(t)}function A(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().addScaledVector(t,r)}let R=b.length,C=T.length;function U(e,t,r){let n,i,a;let s=e.x-t.x,o=e.y-t.y,l=r.x-e.x,h=r.y-e.y,u=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){let c=Math.sqrt(u),d=Math.sqrt(l*l+h*h),p=t.x-o/c,f=t.y+s/c,m=((r.x-h/d-p)*h-(r.y+l/d-f)*l)/(s*h-o*l),g=(n=p+s*m-e.x)*n+(i=f+o*m-e.y)*i;if(g<=2)return new O(n,i);a=Math.sqrt(g/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(h)&&(e=!0),e?(n=-o,i=s,a=Math.sqrt(u)):(n=s,i=o,a=Math.sqrt(u/2))}return new O(n/a,i/a)}let P=[];for(let e=0,t=w.length,r=t-1,n=e+1;e<t;e++,r++,n++)r===t&&(r=0),n===t&&(n=0),P[e]=U(w[e],w[r],w[n]);let L=[],D,I=P.concat();for(let e=0,t=E.length;e<t;e++){let t=E[e];D=[];for(let e=0,r=t.length,n=r-1,i=e+1;e<r;e++,n++,i++)n===r&&(n=0),i===r&&(i=0),D[e]=U(t[e],t[n],t[i]);L.push(D),I=I.concat(D)}for(let e=0;e<v;e++){let t=e/v,r=f*Math.cos(t*Math.PI/2),n=m*Math.sin(t*Math.PI/2)+g;for(let e=0,t=w.length;e<t;e++){let t=A(w[e],P[e],n);B(t.x,t.y,-r)}for(let e=0,t=E.length;e<t;e++){let t=E[e];D=L[e];for(let e=0,i=t.length;e<i;e++){let i=A(t[e],D[e],n);B(i.x,i.y,-r)}}}let N=m+g;for(let e=0;e<R;e++){let t=p?A(b[e],I[e],N):b[e];S?(o.copy(a.normals[0]).multiplyScalar(t.x),s.copy(a.binormals[0]).multiplyScalar(t.y),l.copy(y[0]).add(o).add(s),B(l.x,l.y,l.z)):B(t.x,t.y,0)}for(let e=1;e<=c;e++)for(let t=0;t<R;t++){let r=p?A(b[t],I[t],N):b[t];S?(o.copy(a.normals[e]).multiplyScalar(r.x),s.copy(a.binormals[e]).multiplyScalar(r.y),l.copy(y[e]).add(o).add(s),B(l.x,l.y,l.z)):B(r.x,r.y,d/c*e)}for(let e=v-1;e>=0;e--){let t=e/v,r=f*Math.cos(t*Math.PI/2),n=m*Math.sin(t*Math.PI/2)+g;for(let e=0,t=w.length;e<t;e++){let t=A(w[e],P[e],n);B(t.x,t.y,d+r)}for(let e=0,t=E.length;e<t;e++){let t=E[e];D=L[e];for(let e=0,i=t.length;e<i;e++){let i=A(t[e],D[e],n);S?B(i.x,i.y+y[c-1].y,y[c-1].x+r):B(i.x,i.y,d+r)}}}function F(e,t){let i=e.length;for(;--i>=0;){let a=i,s=i-1;s<0&&(s=e.length-1);for(let e=0,i=c+2*v;e<i;e++){let i=R*e,o=R*(e+1);(function(e,t,i,a){k(e),k(t),k(a),k(t),k(i),k(a);let s=n.length/3,o=x.generateSideWallUV(r,n,s-6,s-3,s-2,s-1);G(o[0]),G(o[1]),G(o[3]),G(o[1]),G(o[2]),G(o[3])})(t+a+i,t+s+i,t+s+o,t+a+o)}}}function B(e,t,r){h.push(e),h.push(t),h.push(r)}function z(e,t,i){k(e),k(t),k(i);let a=n.length/3,s=x.generateTopUV(r,n,a-3,a-2,a-1);G(s[0]),G(s[1]),G(s[2])}function k(e){n.push(h[3*e+0]),n.push(h[3*e+1]),n.push(h[3*e+2])}function G(e){i.push(e.x),i.push(e.y)}(function(){let e=n.length/3;if(p){let e=0*R;for(let t=0;t<C;t++){let r=T[t];z(r[2]+e,r[1]+e,r[0]+e)}e=R*(c+2*v);for(let t=0;t<C;t++){let r=T[t];z(r[0]+e,r[1]+e,r[2]+e)}}else{for(let e=0;e<C;e++){let t=T[e];z(t[2],t[1],t[0])}for(let e=0;e<C;e++){let t=T[e];z(t[0]+R*c,t[1]+R*c,t[2]+R*c)}}r.addGroup(e,n.length/3-e,0)})(),function(){let e=n.length/3,t=0;F(w,0),t+=w.length;for(let e=0,r=E.length;e<r;e++){let r=E[e];F(r,t),t+=r.length}r.addGroup(e,n.length/3-e,1)}()})(e[a]);this.setAttribute("position",new tE(n,3)),this.setAttribute("uv",new tE(i,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return function(e,t,r){if(r.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){let n=e[t];r.shapes.push(n.uuid)}else r.shapes.push(e.uuid);return r.options=Object.assign({},t),void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}(this.parameters.shapes,this.parameters.options,e)}static fromJSON(e,t){let r=[];for(let n=0,i=e.shapes.length;n<i;n++){let i=t[e.shapes[n]];r.push(i)}let n=e.options.extrudePath;return void 0!==n&&(e.options.extrudePath=new iZ[n.type]().fromJSON(n)),new am(r,e.options)}}let ag={generateTopUV:function(e,t,r,n,i){let a=t[3*r],s=t[3*r+1],o=t[3*n],l=t[3*n+1],h=t[3*i],u=t[3*i+1];return[new O(a,s),new O(o,l),new O(h,u)]},generateSideWallUV:function(e,t,r,n,i,a){let s=t[3*r],o=t[3*r+1],l=t[3*r+2],h=t[3*n],u=t[3*n+1],c=t[3*n+2],d=t[3*i],p=t[3*i+1],f=t[3*i+2],m=t[3*a],g=t[3*a+1],v=t[3*a+2];return Math.abs(o-u)<Math.abs(s-h)?[new O(s,1-l),new O(h,1-c),new O(d,1-f),new O(m,1-v)]:[new O(o,1-l),new O(u,1-c),new O(p,1-f),new O(g,1-v)]}};class av extends i3{constructor(e=1,t=0){let r=(1+Math.sqrt(5))/2;super([-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new av(e.radius,e.detail)}}class a_ extends i3{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new a_(e.radius,e.detail)}}class ax extends tL{constructor(e=.5,t=1,r=32,n=1,i=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:a},r=Math.max(3,r);let s=[],o=[],l=[],h=[],u=e,c=(t-e)/(n=Math.max(1,n)),d=new es,p=new O;for(let e=0;e<=n;e++){for(let e=0;e<=r;e++){let n=i+e/r*a;d.x=u*Math.cos(n),d.y=u*Math.sin(n),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}u+=c}for(let e=0;e<n;e++){let t=e*(r+1);for(let e=0;e<r;e++){let n=e+t,i=n+r+1,a=n+r+2,o=n+1;s.push(n,i,o),s.push(i,a,o)}}this.setIndex(s),this.setAttribute("position",new tE(o,3)),this.setAttribute("normal",new tE(l,3)),this.setAttribute("uv",new tE(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ax(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class ay extends tL{constructor(e=new i5([new O(0,.5),new O(-.5,-.5),new O(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let r=[],n=[],i=[],a=[],s=0,o=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(s,o,t),s+=o,o=0;function l(e){let s=n.length/3,l=e.extractPoints(t),h=l.shape,u=l.holes;!1===ad.isClockWise(h)&&(h=h.reverse());for(let e=0,t=u.length;e<t;e++){let t=u[e];!0===ad.isClockWise(t)&&(u[e]=t.reverse())}let c=ad.triangulateShape(h,u);for(let e=0,t=u.length;e<t;e++){let t=u[e];h=h.concat(t)}for(let e=0,t=h.length;e<t;e++){let t=h[e];n.push(t.x,t.y,0),i.push(0,0,1),a.push(t.x,t.y)}for(let e=0,t=c.length;e<t;e++){let t=c[e],n=t[0]+s,i=t[1]+s,a=t[2]+s;r.push(n,i,a),o+=3}}this.setIndex(r),this.setAttribute("position",new tE(n,3)),this.setAttribute("normal",new tE(i,3)),this.setAttribute("uv",new tE(a,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return function(e,t){if(t.shapes=[],Array.isArray(e))for(let r=0,n=e.length;r<n;r++){let n=e[r];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}static fromJSON(e,t){let r=[];for(let n=0,i=e.shapes.length;n<i;n++){let i=t[e.shapes[n]];r.push(i)}return new ay(r,e.curveSegments)}}class aS extends tL{constructor(e=1,t=32,r=16,n=0,i=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:a,thetaLength:s},t=Math.max(3,Math.floor(t)),r=Math.max(2,Math.floor(r));let o=Math.min(a+s,Math.PI),l=0,h=[],u=new es,c=new es,d=[],p=[],f=[],m=[];for(let d=0;d<=r;d++){let g=[],v=d/r,_=0;0===d&&0===a?_=.5/t:d===r&&o===Math.PI&&(_=-.5/t);for(let r=0;r<=t;r++){let o=r/t;u.x=-e*Math.cos(n+o*i)*Math.sin(a+v*s),u.y=e*Math.cos(a+v*s),u.z=e*Math.sin(n+o*i)*Math.sin(a+v*s),p.push(u.x,u.y,u.z),c.copy(u).normalize(),f.push(c.x,c.y,c.z),m.push(o+_,1-v),g.push(l++)}h.push(g)}for(let e=0;e<r;e++)for(let n=0;n<t;n++){let t=h[e][n+1],i=h[e][n],s=h[e+1][n],l=h[e+1][n+1];(0!==e||a>0)&&d.push(t,i,l),(e!==r-1||o<Math.PI)&&d.push(i,s,l)}this.setIndex(d),this.setAttribute("position",new tE(p,3)),this.setAttribute("normal",new tE(f,3)),this.setAttribute("uv",new tE(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aS(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class aM extends i3{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new aM(e.radius,e.detail)}}class ab extends tL{constructor(e=1,t=.4,r=12,n=48,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},r=Math.floor(r),n=Math.floor(n);let a=[],s=[],o=[],l=[],h=new es,u=new es,c=new es;for(let a=0;a<=r;a++)for(let d=0;d<=n;d++){let p=d/n*i,f=a/r*Math.PI*2;u.x=(e+t*Math.cos(f))*Math.cos(p),u.y=(e+t*Math.cos(f))*Math.sin(p),u.z=t*Math.sin(f),s.push(u.x,u.y,u.z),h.x=e*Math.cos(p),h.y=e*Math.sin(p),c.subVectors(u,h).normalize(),o.push(c.x,c.y,c.z),l.push(d/n),l.push(a/r)}for(let e=1;e<=r;e++)for(let t=1;t<=n;t++){let r=(n+1)*e+t-1,i=(n+1)*(e-1)+t-1,s=(n+1)*(e-1)+t,o=(n+1)*e+t;a.push(r,i,o),a.push(i,s,o)}this.setIndex(a),this.setAttribute("position",new tE(s,3)),this.setAttribute("normal",new tE(o,3)),this.setAttribute("uv",new tE(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ab(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class aE extends tL{constructor(e=1,t=.4,r=64,n=8,i=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:a},r=Math.floor(r),n=Math.floor(n);let s=[],o=[],l=[],h=[],u=new es,c=new es,d=new es,p=new es,f=new es,m=new es,g=new es;for(let s=0;s<=r;++s){let _=s/r*i*Math.PI*2;v(_,i,a,e,d),v(_+.01,i,a,e,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let e=0;e<=n;++e){let i=e/n*Math.PI*2,a=-t*Math.cos(i),p=t*Math.sin(i);u.x=d.x+(a*g.x+p*f.x),u.y=d.y+(a*g.y+p*f.y),u.z=d.z+(a*g.z+p*f.z),o.push(u.x,u.y,u.z),c.subVectors(u,d).normalize(),l.push(c.x,c.y,c.z),h.push(s/r),h.push(e/n)}}for(let e=1;e<=r;e++)for(let t=1;t<=n;t++){let r=(n+1)*(e-1)+(t-1),i=(n+1)*e+(t-1),a=(n+1)*e+t,o=(n+1)*(e-1)+t;s.push(r,i,o),s.push(i,a,o)}function v(e,t,r,n,i){let a=r/t*e,s=Math.cos(a);i.x=n*(2+s)*.5*Math.cos(e),i.y=n*(2+s)*Math.sin(e)*.5,i.z=n*Math.sin(a)*.5}this.setIndex(s),this.setAttribute("position",new tE(o,3)),this.setAttribute("normal",new tE(l,3)),this.setAttribute("uv",new tE(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aE(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class aT extends tL{constructor(e=new iq(new es(-1,-1,0),new es(-1,1,0),new es(1,1,0)),t=64,r=1,n=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:i};let a=e.computeFrenetFrames(t,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;let s=new es,o=new es,l=new O,h=new es,u=[],c=[],d=[],p=[];function f(i){h=e.getPointAt(i/t,h);let l=a.normals[i],d=a.binormals[i];for(let e=0;e<=n;e++){let t=e/n*Math.PI*2,i=Math.sin(t),a=-Math.cos(t);o.x=a*l.x+i*d.x,o.y=a*l.y+i*d.y,o.z=a*l.z+i*d.z,o.normalize(),c.push(o.x,o.y,o.z),s.x=h.x+r*o.x,s.y=h.y+r*o.y,s.z=h.z+r*o.z,u.push(s.x,s.y,s.z)}}(function(){for(let e=0;e<t;e++)f(e);f(!1===i?t:0),function(){for(let e=0;e<=t;e++)for(let r=0;r<=n;r++)l.x=e/t,l.y=r/n,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){let r=(n+1)*(e-1)+(t-1),i=(n+1)*e+(t-1),a=(n+1)*e+t,s=(n+1)*(e-1)+t;p.push(r,i,s),p.push(i,a,s)}}()})(),this.setIndex(p),this.setAttribute("position",new tE(u,3)),this.setAttribute("normal",new tE(c,3)),this.setAttribute("uv",new tE(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new aT(new iZ[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class aw extends tL{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){let t=[],r=new Set,n=new es,i=new es;if(null!==e.index){let a=e.attributes.position,s=e.index,o=e.groups;0===o.length&&(o=[{start:0,count:s.count,materialIndex:0}]);for(let e=0,l=o.length;e<l;++e){let l=o[e],h=l.start,u=l.count;for(let e=h,o=h+u;e<o;e+=3)for(let o=0;o<3;o++){let l=s.getX(e+o),h=s.getX(e+(o+1)%3);n.fromBufferAttribute(a,l),i.fromBufferAttribute(a,h),!0===aA(n,i,r)&&(t.push(n.x,n.y,n.z),t.push(i.x,i.y,i.z))}}}else{let a=e.attributes.position;for(let e=0,s=a.count/3;e<s;e++)for(let s=0;s<3;s++){let o=3*e+s,l=3*e+(s+1)%3;n.fromBufferAttribute(a,o),i.fromBufferAttribute(a,l),!0===aA(n,i,r)&&(t.push(n.x,n.y,n.z),t.push(i.x,i.y,i.z))}}this.setAttribute("position",new tE(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function aA(e,t,r){let n=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==r.has(n)&&!0!==r.has(i)&&(r.add(n),r.add(i),!0)}class aR extends tv{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new tf(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tf(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new O(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class aC extends iE{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function aU(e,t,r){return e&&(r||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}class aP{constructor(e,t,r,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(r),this.sampleValues=t,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,r=this._cachedIndex,n=t[r],i=t[r-1];e:{t:{let a;r:{n:if(!(e<n)){for(let a=r+2;;){if(void 0===n){if(e<i)break n;return r=t.length,this._cachedIndex=r,this.copySampleValue_(r-1)}if(r===a)break;if(i=n,e<(n=t[++r]))break t}a=t.length;break r}if(!(e>=i)){let s=t[1];e<s&&(r=2,i=s);for(let a=r-2;;){if(void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(r===a)break;if(n=i,e>=(i=t[--r-1]))break t}a=r,r=0;break r}break e}for(;r<a;){let n=r+a>>>1;e<t[n]?a=n:r=n+1}if(n=t[r],void 0===(i=t[r-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return r=t.length,this._cachedIndex=r,this.copySampleValue_(r-1)}this._cachedIndex=r,this.intervalChanged_(r,i,n)}return this.interpolate_(r,i,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n;for(let e=0;e!==n;++e)t[e]=r[i+e];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class aL extends aP{constructor(e,t,r,n){super(e,t,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,r){let n=this.parameterPositions,i=e-2,a=e+1,s=n[i],o=n[a];if(void 0===s)switch(this.getSettings_().endingStart){case 2401:i=e,s=2*t-r;break;case 2402:i=n.length-2,s=t+n[i]-n[i+1];break;default:i=e,s=r}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:a=e,o=2*r-t;break;case 2402:a=1,o=r+n[1]-n[0];break;default:a=e-1,o=t}let l=(r-t)*.5,h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-r),this._offsetPrev=i*h,this._offsetNext=a*h}interpolate_(e,t,r,n){let i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=this._offsetPrev,u=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(r-t)/(n-t),f=p*p,m=f*p,g=-c*m+2*c*f-c*p,v=(1+c)*m+(-1.5-2*c)*f+(-.5+c)*p+1,_=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f;for(let e=0;e!==s;++e)i[e]=g*a[h+e]+v*a[l+e]+_*a[o+e]+x*a[u+e];return i}}class aD extends aP{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e,t,r,n){let i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(r-t)/(n-t),u=1-h;for(let e=0;e!==s;++e)i[e]=a[l+e]*u+a[o+e]*h;return i}}class aI extends aP{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class aO{constructor(e,t,r,n){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=aU(t,this.TimeBufferType),this.values=aU(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){let t;let r=e.constructor;if(r.toJSON!==this.toJSON)t=r.toJSON(e);else{t={name:e.name,times:aU(e.times,Array),values:aU(e.values,Array)};let r=e.getInterpolation();r!==e.DefaultInterpolation&&(t.interpolation=r)}return t.type=e.ValueTypeName,t}InterpolantFactoryMethodDiscrete(e){return new aI(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new aD(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new aL(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(t)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let r=0,n=t.length;r!==n;++r)t[r]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let r=0,n=t.length;r!==n;++r)t[r]*=e}return this}trim(e,t){let r=this.times,n=r.length,i=0,a=n-1;for(;i!==n&&r[i]<e;)++i;for(;-1!==a&&r[a]>t;)--a;if(++a,0!==i||a!==n){i>=a&&(i=(a=Math.max(a,1))-1);let e=this.getValueSize();this.times=r.slice(i,a),this.values=this.values.slice(i*e,a*e)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let r=this.times,n=this.values,i=r.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==i;t++){let n=r[t];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,n),e=!1;break}if(null!==a&&a>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,n,a),e=!1;break}a=n}if(void 0!==n&&ArrayBuffer.isView(n)&&!(n instanceof DataView))for(let t=0,r=n.length;t!==r;++t){let r=n[t];if(isNaN(r)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,r),e=!1;break}}return e}optimize(){let e=this.times.slice(),t=this.values.slice(),r=this.getValueSize(),n=2302===this.getInterpolation(),i=e.length-1,a=1;for(let s=1;s<i;++s){let i=!1,o=e[s];if(o!==e[s+1]&&(1!==s||o!==e[0])){if(n)i=!0;else{let e=s*r,n=e-r,a=e+r;for(let s=0;s!==r;++s){let r=t[e+s];if(r!==t[n+s]||r!==t[a+s]){i=!0;break}}}}if(i){if(s!==a){e[a]=e[s];let n=s*r,i=a*r;for(let e=0;e!==r;++e)t[i+e]=t[n+e]}++a}}if(i>0){e[a]=e[i];for(let e=i*r,n=a*r,s=0;s!==r;++s)t[n+s]=t[e+s];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*r)):(this.times=e,this.values=t),this}clone(){let e=this.times.slice(),t=this.values.slice(),r=new this.constructor(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}aO.prototype.TimeBufferType=Float32Array,aO.prototype.ValueBufferType=Float32Array,aO.prototype.DefaultInterpolation=2301;class aN extends aO{}aN.prototype.ValueTypeName="bool",aN.prototype.ValueBufferType=Array,aN.prototype.DefaultInterpolation=2300,aN.prototype.InterpolantFactoryMethodLinear=void 0,aN.prototype.InterpolantFactoryMethodSmooth=void 0,(class extends aO{}).prototype.ValueTypeName="color",(class extends aO{}).prototype.ValueTypeName="number";class aF extends aP{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e,t,r,n){let i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(r-t)/(n-t),l=e*s;for(let e=l+s;l!==e;l+=4)ea.slerpFlat(i,0,a,l-s,a,l,o);return i}}class aB extends aO{InterpolantFactoryMethodLinear(e){return new aF(this.times,this.values,this.getValueSize(),e)}}aB.prototype.ValueTypeName="quaternion",aB.prototype.DefaultInterpolation=2301,aB.prototype.InterpolantFactoryMethodSmooth=void 0;class az extends aO{}az.prototype.ValueTypeName="string",az.prototype.ValueBufferType=Array,az.prototype.DefaultInterpolation=2300,az.prototype.InterpolantFactoryMethodLinear=void 0,az.prototype.InterpolantFactoryMethodSmooth=void 0,(class extends aO{}).prototype.ValueTypeName="vector";class ak extends tL{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){let e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}let aG="\\[\\]\\.:\\/",aV=RegExp("["+aG+"]","g"),aH="[^"+aG+"]",aW="[^"+aG.replace("\\.","")+"]",aj=/((?:WC+[\/:])*)/.source.replace("WC",aH),aX=RegExp("^"+aj+/(WCOD+)?/.source.replace("WCOD",aW)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",aH)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",aH)+"$"),aq=["material","materials","bones","map"];class aY{constructor(e,t,r){this.path=t,this.parsedPath=r||aY.parseTrackName(t),this.node=aY.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,r){return e&&e.isAnimationObjectGroup?new aY.Composite(e,t,r):new aY(e,t,r)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(aV,"")}static parseTrackName(e){let t=aX.exec(e);if(null===t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){let e=r.nodeName.substring(n+1);-1!==aq.indexOf(e)&&(r.nodeName=r.nodeName.substring(0,n),r.objectName=e)}if(null===r.propertyName||0===r.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let r=e.skeleton.getBoneByName(t);if(void 0!==r)return r}if(e.children){let r=function(e){for(let n=0;n<e.length;n++){let i=e[n];if(i.name===t||i.uuid===t)return i;let a=r(i.children);if(a)return a}return null},n=r(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)e[t++]=r[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,r=t.objectName,n=t.propertyName,i=t.propertyIndex;if(e||(e=aY.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(r){let n=t.objectIndex;switch(r){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===n){n=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(void 0===e[r]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[r]}if(void 0!==n){if(void 0===e[n]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[n]}}let a=e[n];if(void 0===a){console.error("THREE.PropertyBinding: Trying to update property for track: "+t.nodeName+"."+n+" but it wasn't found.",e);return}let s=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===n){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=i}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=n;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}aY.Composite=class{constructor(e,t,r){let n=r||aY.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();let r=this._targetGroup.nCachedObjects_,n=this._bindings[r];void 0!==n&&n.getValue(e,t)}setValue(e,t){let r=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=r.length;n!==i;++n)r[n].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].unbind()}},aY.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},aY.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},aY.prototype.GetterByBindingType=[aY.prototype._getValue_direct,aY.prototype._getValue_array,aY.prototype._getValue_arrayElement,aY.prototype._getValue_toArray],aY.prototype.SetterByBindingTypeAndVersioning=[[aY.prototype._setValue_direct,aY.prototype._setValue_direct_setNeedsUpdate,aY.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[aY.prototype._setValue_array,aY.prototype._setValue_array_setNeedsUpdate,aY.prototype._setValue_array_setMatrixWorldNeedsUpdate],[aY.prototype._setValue_arrayElement,aY.prototype._setValue_arrayElement_setNeedsUpdate,aY.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[aY.prototype._setValue_fromArray,aY.prototype._setValue_fromArray_setNeedsUpdate,aY.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);class aZ extends iy{constructor(e,t,r=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class aJ{constructor(e=1,t=0,r=0){return this.radius=e,this.phi=t,this.theta=r,this}set(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,r),this.phi=Math.acos(A(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}let aK=new es,a$=new es;class aQ{constructor(e=new es,t=new es){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){aK.subVectors(e,this.start),a$.subVectors(this.end,this.start);let r=a$.dot(a$),n=a$.dot(aK)/r;return t&&(n=A(n,0,1)),n}closestPointToPoint(e,t,r){let n=this.closestPointToPointParameter(e,t);return this.delta(r).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class a0 extends iD{constructor(e=10,t=10,r=4473924,n=8947848){r=new tf(r),n=new tf(n);let i=t/2,a=e/t,s=e/2,o=[],l=[];for(let e=0,h=0,u=-s;e<=t;e++,u+=a){o.push(-s,0,u,s,0,u),o.push(u,0,-s,u,0,s);let t=e===i?r:n;t.toArray(l,h),h+=3,t.toArray(l,h),h+=3,t.toArray(l,h),h+=3,t.toArray(l,h),h+=3}let h=new tL;h.setAttribute("position",new tE(o,3)),h.setAttribute("color",new tE(l,3)),super(h,new iE({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}let a1=new eh;class a2 extends iD{constructor(e,t=16776960){let r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),i=new tL;i.setIndex(new tS(r,1)),i.setAttribute("position",new tS(n,3)),super(i,new iE({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&a1.setFromObject(this.object),a1.isEmpty())return;let t=a1.min,r=a1.max,n=this.geometry.attributes.position,i=n.array;i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=t.x,i[4]=r.y,i[5]=r.z,i[6]=t.x,i[7]=t.y,i[8]=r.z,i[9]=r.x,i[10]=t.y,i[11]=r.z,i[12]=r.x,i[13]=r.y,i[14]=t.z,i[15]=t.x,i[16]=r.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=r.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}let a3=new es;class a4 extends e8{constructor(e=new es(0,0,1),t=new es(0,0,0),r=1,n=16776960,s=.2*r,o=.2*s){super(),this.type="ArrowHelper",void 0===i&&((i=new tL).setAttribute("position",new tE([0,0,0,0,1,0],3)),(a=new i1(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new iU(i,new iE({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new tJ(a,new t_({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{a3.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(a3,t)}}setLength(e,t=.2*e,r=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"158"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="158")}),o("5Rd1x",function(t,r){e(t.exports,"OrbitControls",()=>c);var n=s("ilwiq");let i={type:"change"},a={type:"start"},o={type:"end"},l=new n.Ray,h=new n.Plane,u=Math.cos(70*n.MathUtils.DEG2RAD);class c extends n.EventDispatcher{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new n.Vector3,this.cursor=new n.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:n.MOUSE.ROTATE,MIDDLE:n.MOUSE.DOLLY,RIGHT:n.MOUSE.PAN},this.touches={ONE:n.TOUCH.ROTATE,TWO:n.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return p.phi},this.getAzimuthalAngle=function(){return p.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",Q),this._domElementKeyEvents=e},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",Q),this._domElementKeyEvents=null},this.saveState=function(){r.target0.copy(r.target),r.position0.copy(r.object.position),r.zoom0=r.object.zoom},this.reset=function(){r.target.copy(r.target0),r.object.position.copy(r.position0),r.object.zoom=r.zoom0,r.object.updateProjectionMatrix(),r.dispatchEvent(i),r.update(),c=s.NONE},this.update=function(){let t=new n.Vector3,a=new(0,n.Quaternion)().setFromUnitVectors(e.up,new n.Vector3(0,1,0)),o=a.clone().invert(),v=new n.Vector3,_=new n.Quaternion,x=new n.Vector3,y=2*Math.PI;return function(S=null){let M=r.object.position;t.copy(M).sub(r.target),t.applyQuaternion(a),p.setFromVector3(t),r.autoRotate&&c===s.NONE&&L(null!==S?2*Math.PI/60*r.autoRotateSpeed*S:2*Math.PI/60/60*r.autoRotateSpeed),r.enableDamping?(p.theta+=f.theta*r.dampingFactor,p.phi+=f.phi*r.dampingFactor):(p.theta+=f.theta,p.phi+=f.phi);let b=r.minAzimuthAngle,E=r.maxAzimuthAngle;isFinite(b)&&isFinite(E)&&(b<-Math.PI?b+=y:b>Math.PI&&(b-=y),E<-Math.PI?E+=y:E>Math.PI&&(E-=y),b<=E?p.theta=Math.max(b,Math.min(E,p.theta)):p.theta=p.theta>(b+E)/2?Math.max(b,p.theta):Math.min(E,p.theta)),p.phi=Math.max(r.minPolarAngle,Math.min(r.maxPolarAngle,p.phi)),p.makeSafe(),!0===r.enableDamping?r.target.addScaledVector(g,r.dampingFactor):r.target.add(g),r.target.sub(r.cursor),r.target.clampLength(r.minTargetRadius,r.maxTargetRadius),r.target.add(r.cursor),r.zoomToCursor&&R||r.object.isOrthographicCamera?p.radius=k(p.radius):p.radius=k(p.radius*m),t.setFromSpherical(p),t.applyQuaternion(o),M.copy(r.target).add(t),r.object.lookAt(r.target),!0===r.enableDamping?(f.theta*=1-r.dampingFactor,f.phi*=1-r.dampingFactor,g.multiplyScalar(1-r.dampingFactor)):(f.set(0,0,0),g.set(0,0,0));let T=!1;if(r.zoomToCursor&&R){let i=null;if(r.object.isPerspectiveCamera){let e=t.length();i=k(e*m);let n=e-i;r.object.position.addScaledVector(w,n),r.object.updateMatrixWorld()}else if(r.object.isOrthographicCamera){let e=new n.Vector3(A.x,A.y,0);e.unproject(r.object),r.object.zoom=Math.max(r.minZoom,Math.min(r.maxZoom,r.object.zoom/m)),r.object.updateProjectionMatrix(),T=!0;let a=new n.Vector3(A.x,A.y,0);a.unproject(r.object),r.object.position.sub(a).add(e),r.object.updateMatrixWorld(),i=t.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),r.zoomToCursor=!1;null!==i&&(this.screenSpacePanning?r.target.set(0,0,-1).transformDirection(r.object.matrix).multiplyScalar(i).add(r.object.position):(l.origin.copy(r.object.position),l.direction.set(0,0,-1).transformDirection(r.object.matrix),Math.abs(r.object.up.dot(l.direction))<u?e.lookAt(r.target):(h.setFromNormalAndCoplanarPoint(r.object.up,r.target),l.intersectPlane(h,r.target))))}else r.object.isOrthographicCamera&&(r.object.zoom=Math.max(r.minZoom,Math.min(r.maxZoom,r.object.zoom/m)),r.object.updateProjectionMatrix(),T=!0);return m=1,R=!1,!!(T||v.distanceToSquared(r.object.position)>d||8*(1-_.dot(r.object.quaternion))>d||x.distanceToSquared(r.target)>0)&&(r.dispatchEvent(i),v.copy(r.object.position),_.copy(r.object.quaternion),x.copy(r.target),T=!1,!0)}}(),this.dispose=function(){r.domElement.removeEventListener("contextmenu",ee),r.domElement.removeEventListener("pointerdown",Z),r.domElement.removeEventListener("pointercancel",K),r.domElement.removeEventListener("wheel",$),r.domElement.removeEventListener("pointermove",J),r.domElement.removeEventListener("pointerup",K),null!==r._domElementKeyEvents&&(r._domElementKeyEvents.removeEventListener("keydown",Q),r._domElementKeyEvents=null)};let r=this,s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},c=s.NONE,d=1e-6,p=new n.Spherical,f=new n.Spherical,m=1,g=new n.Vector3,v=new n.Vector2,_=new n.Vector2,x=new n.Vector2,y=new n.Vector2,S=new n.Vector2,M=new n.Vector2,b=new n.Vector2,E=new n.Vector2,T=new n.Vector2,w=new n.Vector3,A=new n.Vector2,R=!1,C=[],U={};function P(){return Math.pow(.95,r.zoomSpeed)}function L(e){f.theta-=e}function D(e){f.phi-=e}let I=function(){let e=new n.Vector3;return function(t,r){e.setFromMatrixColumn(r,0),e.multiplyScalar(-t),g.add(e)}}(),O=function(){let e=new n.Vector3;return function(t,n){!0===r.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(r.object.up,e)),e.multiplyScalar(t),g.add(e)}}(),N=function(){let e=new n.Vector3;return function(t,n){let i=r.domElement;if(r.object.isPerspectiveCamera){let a=r.object.position;e.copy(a).sub(r.target);let s=e.length();I(2*t*(s*=Math.tan(r.object.fov/2*Math.PI/180))/i.clientHeight,r.object.matrix),O(2*n*s/i.clientHeight,r.object.matrix)}else r.object.isOrthographicCamera?(I(t*(r.object.right-r.object.left)/r.object.zoom/i.clientWidth,r.object.matrix),O(n*(r.object.top-r.object.bottom)/r.object.zoom/i.clientHeight,r.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),r.enablePan=!1)}}();function F(e){r.object.isPerspectiveCamera||r.object.isOrthographicCamera?m/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),r.enableZoom=!1)}function B(e){r.object.isPerspectiveCamera||r.object.isOrthographicCamera?m*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),r.enableZoom=!1)}function z(e){if(!r.zoomToCursor)return;R=!0;let t=r.domElement.getBoundingClientRect(),n=e.clientX-t.left,i=e.clientY-t.top,a=t.width,s=t.height;A.x=n/a*2-1,A.y=-(i/s*2)+1,w.set(A.x,A.y,1).unproject(r.object).sub(r.object.position).normalize()}function k(e){return Math.max(r.minDistance,Math.min(r.maxDistance,e))}function G(e){v.set(e.clientX,e.clientY)}function V(e){y.set(e.clientX,e.clientY)}function H(){if(1===C.length)v.set(C[0].pageX,C[0].pageY);else{let e=.5*(C[0].pageX+C[1].pageX),t=.5*(C[0].pageY+C[1].pageY);v.set(e,t)}}function W(){if(1===C.length)y.set(C[0].pageX,C[0].pageY);else{let e=.5*(C[0].pageX+C[1].pageX),t=.5*(C[0].pageY+C[1].pageY);y.set(e,t)}}function j(){let e=C[0].pageX-C[1].pageX,t=C[0].pageY-C[1].pageY;b.set(0,Math.sqrt(e*e+t*t))}function X(e){if(1==C.length)_.set(e.pageX,e.pageY);else{let t=er(e),r=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);_.set(r,n)}x.subVectors(_,v).multiplyScalar(r.rotateSpeed);let t=r.domElement;L(2*Math.PI*x.x/t.clientHeight),D(2*Math.PI*x.y/t.clientHeight),v.copy(_)}function q(e){if(1===C.length)S.set(e.pageX,e.pageY);else{let t=er(e),r=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);S.set(r,n)}M.subVectors(S,y).multiplyScalar(r.panSpeed),N(M.x,M.y),y.copy(S)}function Y(e){let t=er(e),n=e.pageX-t.x,i=e.pageY-t.y;E.set(0,Math.sqrt(n*n+i*i)),T.set(0,Math.pow(E.y/b.y,r.zoomSpeed)),F(T.y),b.copy(E)}function Z(e){!1!==r.enabled&&(0===C.length&&(r.domElement.setPointerCapture(e.pointerId),r.domElement.addEventListener("pointermove",J),r.domElement.addEventListener("pointerup",K)),C.push(e),"touch"===e.pointerType?function(e){switch(et(e),C.length){case 1:switch(r.touches.ONE){case n.TOUCH.ROTATE:if(!1===r.enableRotate)return;H(),c=s.TOUCH_ROTATE;break;case n.TOUCH.PAN:if(!1===r.enablePan)return;W(),c=s.TOUCH_PAN;break;default:c=s.NONE}break;case 2:switch(r.touches.TWO){case n.TOUCH.DOLLY_PAN:if(!1===r.enableZoom&&!1===r.enablePan)return;r.enableZoom&&j(),r.enablePan&&W(),c=s.TOUCH_DOLLY_PAN;break;case n.TOUCH.DOLLY_ROTATE:if(!1===r.enableZoom&&!1===r.enableRotate)return;r.enableZoom&&j(),r.enableRotate&&H(),c=s.TOUCH_DOLLY_ROTATE;break;default:c=s.NONE}break;default:c=s.NONE}c!==s.NONE&&r.dispatchEvent(a)}(e):function(e){let t;switch(e.button){case 0:t=r.mouseButtons.LEFT;break;case 1:t=r.mouseButtons.MIDDLE;break;case 2:t=r.mouseButtons.RIGHT;break;default:t=-1}switch(t){case n.MOUSE.DOLLY:if(!1===r.enableZoom)return;z(e),b.set(e.clientX,e.clientY),c=s.DOLLY;break;case n.MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===r.enablePan)return;V(e),c=s.PAN}else{if(!1===r.enableRotate)return;G(e),c=s.ROTATE}break;case n.MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===r.enableRotate)return;G(e),c=s.ROTATE}else{if(!1===r.enablePan)return;V(e),c=s.PAN}break;default:c=s.NONE}c!==s.NONE&&r.dispatchEvent(a)}(e))}function J(e){!1!==r.enabled&&("touch"===e.pointerType?function(e){switch(et(e),c){case s.TOUCH_ROTATE:if(!1===r.enableRotate)return;X(e),r.update();break;case s.TOUCH_PAN:if(!1===r.enablePan)return;q(e),r.update();break;case s.TOUCH_DOLLY_PAN:if(!1===r.enableZoom&&!1===r.enablePan)return;r.enableZoom&&Y(e),r.enablePan&&q(e),r.update();break;case s.TOUCH_DOLLY_ROTATE:if(!1===r.enableZoom&&!1===r.enableRotate)return;r.enableZoom&&Y(e),r.enableRotate&&X(e),r.update();break;default:c=s.NONE}}(e):function(e){switch(c){case s.ROTATE:if(!1===r.enableRotate)return;!function(e){_.set(e.clientX,e.clientY),x.subVectors(_,v).multiplyScalar(r.rotateSpeed);let t=r.domElement;L(2*Math.PI*x.x/t.clientHeight),D(2*Math.PI*x.y/t.clientHeight),v.copy(_),r.update()}(e);break;case s.DOLLY:if(!1===r.enableZoom)return;E.set(e.clientX,e.clientY),T.subVectors(E,b),T.y>0?F(P()):T.y<0&&B(P()),b.copy(E),r.update();break;case s.PAN:if(!1===r.enablePan)return;S.set(e.clientX,e.clientY),M.subVectors(S,y).multiplyScalar(r.panSpeed),N(M.x,M.y),y.copy(S),r.update()}}(e))}function K(e){(function(e){delete U[e.pointerId];for(let t=0;t<C.length;t++)if(C[t].pointerId==e.pointerId){C.splice(t,1);return}})(e),0===C.length&&(r.domElement.releasePointerCapture(e.pointerId),r.domElement.removeEventListener("pointermove",J),r.domElement.removeEventListener("pointerup",K)),r.dispatchEvent(o),c=s.NONE}function $(e){!1!==r.enabled&&!1!==r.enableZoom&&c===s.NONE&&(e.preventDefault(),r.dispatchEvent(a),z(e),e.deltaY<0?B(P()):e.deltaY>0&&F(P()),r.update(),r.dispatchEvent(o))}function Q(e){!1!==r.enabled&&!1!==r.enablePan&&function(e){let t=!1;switch(e.code){case r.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?D(2*Math.PI*r.rotateSpeed/r.domElement.clientHeight):N(0,r.keyPanSpeed),t=!0;break;case r.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?D(-2*Math.PI*r.rotateSpeed/r.domElement.clientHeight):N(0,-r.keyPanSpeed),t=!0;break;case r.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?L(2*Math.PI*r.rotateSpeed/r.domElement.clientHeight):N(r.keyPanSpeed,0),t=!0;break;case r.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?L(-2*Math.PI*r.rotateSpeed/r.domElement.clientHeight):N(-r.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),r.update())}(e)}function ee(e){!1!==r.enabled&&e.preventDefault()}function et(e){let t=U[e.pointerId];void 0===t&&(t=new n.Vector2,U[e.pointerId]=t),t.set(e.pageX,e.pageY)}function er(e){return U[(e.pointerId===C[0].pointerId?C[1]:C[0]).pointerId]}r.domElement.addEventListener("contextmenu",ee),r.domElement.addEventListener("pointerdown",Z),r.domElement.addEventListener("pointercancel",K),r.domElement.addEventListener("wheel",$,{passive:!1}),this.update()}}}),o("2qNZ3",function(t,r){e(t.exports,"Line2",()=>o);var n=s("SiDyI"),i=s("dsZVr"),a=s("0WRuh");class o extends n.LineSegments2{constructor(e=new i.LineGeometry,t=new a.LineMaterial({color:16777215*Math.random()})){super(e,t),this.isLine2=!0,this.type="Line2"}}}),o("SiDyI",function(t,r){let n,i;e(t.exports,"LineSegments2",()=>M);var a=s("ilwiq"),o=s("bQkiW"),l=s("0WRuh");let h=new a.Vector3,u=new a.Vector3,c=new a.Vector4,d=new a.Vector4,p=new a.Vector4,f=new a.Vector3,m=new a.Matrix4,g=new a.Line3,v=new a.Vector3,_=new a.Box3,x=new a.Sphere,y=new a.Vector4;function S(e,t,r){return y.set(0,0,-t,1).applyMatrix4(e.projectionMatrix),y.multiplyScalar(1/y.w),y.x=i/r.width,y.y=i/r.height,y.applyMatrix4(e.projectionMatrixInverse),y.multiplyScalar(1/y.w),Math.abs(Math.max(y.x,y.y))}class M extends a.Mesh{constructor(e=new o.LineSegmentsGeometry,t=new l.LineMaterial({color:16777215*Math.random()})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){let e=this.geometry,t=e.attributes.instanceStart,r=e.attributes.instanceEnd,n=new Float32Array(2*t.count);for(let e=0,i=0,a=t.count;e<a;e++,i+=2)h.fromBufferAttribute(t,e),u.fromBufferAttribute(r,e),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+h.distanceTo(u);let i=new a.InstancedInterleavedBuffer(n,2,1);return e.setAttribute("instanceDistanceStart",new a.InterleavedBufferAttribute(i,1,0)),e.setAttribute("instanceDistanceEnd",new a.InterleavedBufferAttribute(i,1,1)),this}raycast(e,t){let r,s;let o=this.material.worldUnits,l=e.camera;null!==l||o||console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');let h=void 0!==e.params.Line2&&e.params.Line2.threshold||0;n=e.ray;let u=this.matrixWorld,y=this.geometry,M=this.material;if(i=M.linewidth+h,null===y.boundingSphere&&y.computeBoundingSphere(),x.copy(y.boundingSphere).applyMatrix4(u),o)r=.5*i;else{let e=Math.max(l.near,x.distanceToPoint(n.origin));r=S(l,e,M.resolution)}if(x.radius+=r,!1!==n.intersectsSphere(x)){if(null===y.boundingBox&&y.computeBoundingBox(),_.copy(y.boundingBox).applyMatrix4(u),o)s=.5*i;else{let e=Math.max(l.near,_.distanceToPoint(n.origin));s=S(l,e,M.resolution)}_.expandByScalar(s),!1!==n.intersectsBox(_)&&(o?function(e,t){let r=e.matrixWorld,s=e.geometry,o=s.attributes.instanceStart,l=s.attributes.instanceEnd,h=Math.min(s.instanceCount,o.count);for(let s=0;s<h;s++){g.start.fromBufferAttribute(o,s),g.end.fromBufferAttribute(l,s),g.applyMatrix4(r);let h=new a.Vector3,u=new a.Vector3;n.distanceSqToSegment(g.start,g.end,u,h),u.distanceTo(h)<.5*i&&t.push({point:u,pointOnLine:h,distance:n.origin.distanceTo(u),object:e,face:null,faceIndex:s,uv:null,uv1:null})}}(this,t):function(e,t,r){let s=t.projectionMatrix,o=e.material.resolution,l=e.matrixWorld,h=e.geometry,u=h.attributes.instanceStart,_=h.attributes.instanceEnd,x=Math.min(h.instanceCount,u.count),y=-t.near;n.at(1,p),p.w=1,p.applyMatrix4(t.matrixWorldInverse),p.applyMatrix4(s),p.multiplyScalar(1/p.w),p.x*=o.x/2,p.y*=o.y/2,p.z=0,f.copy(p),m.multiplyMatrices(t.matrixWorldInverse,l);for(let t=0;t<x;t++){if(c.fromBufferAttribute(u,t),d.fromBufferAttribute(_,t),c.w=1,d.w=1,c.applyMatrix4(m),d.applyMatrix4(m),c.z>y&&d.z>y)continue;if(c.z>y){let e=c.z-d.z,t=(c.z-y)/e;c.lerp(d,t)}else if(d.z>y){let e=d.z-c.z,t=(d.z-y)/e;d.lerp(c,t)}c.applyMatrix4(s),d.applyMatrix4(s),c.multiplyScalar(1/c.w),d.multiplyScalar(1/d.w),c.x*=o.x/2,c.y*=o.y/2,d.x*=o.x/2,d.y*=o.y/2,g.start.copy(c),g.start.z=0,g.end.copy(d),g.end.z=0;let h=g.closestPointToPointParameter(f,!0);g.at(h,v);let p=(0,a.MathUtils).lerp(c.z,d.z,h),x=p>=-1&&p<=1,S=f.distanceTo(v)<.5*i;if(x&&S){g.start.fromBufferAttribute(u,t),g.end.fromBufferAttribute(_,t),g.start.applyMatrix4(l),g.end.applyMatrix4(l);let i=new a.Vector3,s=new a.Vector3;n.distanceSqToSegment(g.start,g.end,s,i),r.push({point:s,pointOnLine:i,distance:n.origin.distanceTo(s),object:e,face:null,faceIndex:t,uv:null,uv1:null})}}}(this,l,t))}}}}),o("bQkiW",function(t,r){e(t.exports,"LineSegmentsGeometry",()=>o);var n=s("ilwiq");let i=new n.Box3,a=new n.Vector3;class o extends n.InstancedBufferGeometry{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry",this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new n.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new n.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))}applyMatrix4(e){let t=this.attributes.instanceStart,r=this.attributes.instanceEnd;return void 0!==t&&(t.applyMatrix4(e),r.applyMatrix4(e),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));let r=new n.InstancedInterleavedBuffer(t,6,1);return this.setAttribute("instanceStart",new n.InterleavedBufferAttribute(r,3,0)),this.setAttribute("instanceEnd",new n.InterleavedBufferAttribute(r,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));let r=new n.InstancedInterleavedBuffer(t,6,1);return this.setAttribute("instanceColorStart",new n.InterleavedBufferAttribute(r,3,0)),this.setAttribute("instanceColorEnd",new n.InterleavedBufferAttribute(r,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new n.WireframeGeometry(e.geometry)),this}fromLineSegments(e){let t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new n.Box3);let e=this.attributes.instanceStart,t=this.attributes.instanceEnd;void 0!==e&&void 0!==t&&(this.boundingBox.setFromBufferAttribute(e),i.setFromBufferAttribute(t),this.boundingBox.union(i))}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new n.Sphere),null===this.boundingBox&&this.computeBoundingBox();let e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(void 0!==e&&void 0!==t){let r=this.boundingSphere.center;this.boundingBox.getCenter(r);let n=0;for(let i=0,s=e.count;i<s;i++)a.fromBufferAttribute(e,i),n=Math.max(n,r.distanceToSquared(a)),a.fromBufferAttribute(t,i),n=Math.max(n,r.distanceToSquared(a));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}}),o("0WRuh",function(t,r){e(t.exports,"LineMaterial",()=>i);var n=s("ilwiq");n.UniformsLib.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new n.Vector2(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}},n.ShaderLib.line={uniforms:(0,n.UniformsUtils).merge([n.UniformsLib.common,n.UniformsLib.fog,n.UniformsLib.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				// get the offset direction as perpendicular to the view vector
				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 offset;
				if ( position.y < 0.5 ) {

					offset = normalize( cross( start.xyz, worldDir ) );

				} else {

					offset = normalize( cross( end.xyz, worldDir ) );

				}

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// extend the line bounds to encompass  endcaps
					start.xyz += - worldDir * linewidth * 0.5;
					end.xyz += worldDir * linewidth * 0.5;

					// shift the position of the quad so it hugs the forward edge of the line
					offset.xy -= dir * forwardOffset;
					offset.z += 0.5;

				#endif

				// endcaps
				if ( position.y > 1.0 || position.y < 0.0 ) {

					offset.xy += dir * 2.0 * forwardOffset;

				}

				// adjust for linewidth
				offset *= linewidth * 0.5;

				// set the world position
				worldPos = ( position.y < 0.5 ) ? start : end;
				worldPos.xyz += offset;

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};class i extends n.ShaderMaterial{constructor(e){super({type:"LineMaterial",uniforms:(0,n.UniformsUtils).clone(n.ShaderLib.line.uniforms),vertexShader:n.ShaderLib.line.vertexShader,fragmentShader:n.ShaderLib.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){!0===e?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){!0===e!==this.dashed&&(this.needsUpdate=!0),!0===e?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(!0===e!==this.alphaToCoverage&&(this.needsUpdate=!0),!0===e?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1))}}}),o("dsZVr",function(t,r){e(t.exports,"LineGeometry",()=>i);var n=s("bQkiW");class i extends n.LineSegmentsGeometry{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){let t=e.length-3,r=new Float32Array(2*t);for(let n=0;n<t;n+=3)r[2*n]=e[n],r[2*n+1]=e[n+1],r[2*n+2]=e[n+2],r[2*n+3]=e[n+3],r[2*n+4]=e[n+4],r[2*n+5]=e[n+5];return super.setPositions(r),this}setColors(e){let t=e.length-3,r=new Float32Array(2*t);for(let n=0;n<t;n+=3)r[2*n]=e[n],r[2*n+1]=e[n+1],r[2*n+2]=e[n+2],r[2*n+3]=e[n+3],r[2*n+4]=e[n+4],r[2*n+5]=e[n+5];return super.setColors(r),this}fromLine(e){let t=e.geometry;return this.setPositions(t.attributes.position.array),this}}}),o("gbdyO",function(t,r){let n,i;e(t.exports,"Text",()=>ee);var a=s("ilwiq"),o=s("8ue7g"),l=s("ix9ca"),h=s("2y8EL"),u=s("4kOkh");let c=(0,o.defineWorkerModule)({name:"Typr Font Parser",dependencies:[/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/function(){var e,t,r;return"undefined"==typeof window&&(self.window=self),(e={},(t={parse:function(e){var r=t._bin,n=new Uint8Array(e);if("ttcf"==r.readASCII(n,0,4)){var i=4;r.readUshort(n,i),i+=2,r.readUshort(n,i),i+=2;var a=r.readUint(n,i);i+=4;for(var s=[],o=0;o<a;o++){var l=r.readUint(n,i);i+=4,s.push(t._readFont(n,l))}return s}return[t._readFont(n,0)]},_readFont:function(e,r){var n=t._bin,i=r;n.readFixed(e,r),r+=4;var a=n.readUshort(e,r);r+=2,n.readUshort(e,r),r+=2,n.readUshort(e,r),r+=2,n.readUshort(e,r),r+=2;for(var s=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GDEF","GPOS","GSUB","SVG "],o={_data:e,_offset:i},l={},h=0;h<a;h++){var u=n.readASCII(e,r,4);r+=4,n.readUint(e,r),r+=4;var c=n.readUint(e,r);r+=4;var d=n.readUint(e,r);r+=4,l[u]={offset:c,length:d}}for(h=0;h<s.length;h++){var p=s[h];l[p]&&(o[p.trim()]=t[p.trim()].parse(e,l[p].offset,l[p].length,o))}return o},_tabOffset:function(e,r,n){for(var i=t._bin,a=i.readUshort(e,n+4),s=n+12,o=0;o<a;o++){var l=i.readASCII(e,s,4);s+=4,i.readUint(e,s),s+=4;var h=i.readUint(e,s);if(s+=4,i.readUint(e,s),s+=4,l==r)return h}return 0}})._bin={readFixed:function(e,t){return(e[t]<<8|e[t+1])+(e[t+2]<<8|e[t+3])/65540},readF2dot14:function(e,r){return t._bin.readShort(e,r)/16384},readInt:function(e,r){return t._bin._view(e).getInt32(r)},readInt8:function(e,r){return t._bin._view(e).getInt8(r)},readShort:function(e,r){return t._bin._view(e).getInt16(r)},readUshort:function(e,r){return t._bin._view(e).getUint16(r)},readUshorts:function(e,r,n){for(var i=[],a=0;a<n;a++)i.push(t._bin.readUshort(e,r+2*a));return i},readUint:function(e,r){return t._bin._view(e).getUint32(r)},readUint64:function(e,r){return 4294967296*t._bin.readUint(e,r)+t._bin.readUint(e,r+4)},readASCII:function(e,t,r){for(var n="",i=0;i<r;i++)n+=String.fromCharCode(e[t+i]);return n},readUnicode:function(e,t,r){for(var n="",i=0;i<r;i++)n+=String.fromCharCode(e[t++]<<8|e[t++]);return n},_tdec:"undefined"!=typeof window&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(e,r,n){var i=t._bin._tdec;return i&&0==r&&n==e.length?i.decode(e):t._bin.readASCII(e,r,n)},readBytes:function(e,t,r){for(var n=[],i=0;i<r;i++)n.push(e[t+i]);return n},readASCIIArray:function(e,t,r){for(var n=[],i=0;i<r;i++)n.push(String.fromCharCode(e[t+i]));return n},_view:function(e){return e._dataView||(e._dataView=e.buffer?new DataView(e.buffer,e.byteOffset,e.byteLength):new DataView(new Uint8Array(e).buffer))}},t._lctf={},t._lctf.parse=function(e,r,n,i,a){var s=t._bin,o={},l=r;s.readFixed(e,r),r+=4;var h=s.readUshort(e,r);r+=2;var u=s.readUshort(e,r);r+=2;var c=s.readUshort(e,r);return r+=2,o.scriptList=t._lctf.readScriptList(e,l+h),o.featureList=t._lctf.readFeatureList(e,l+u),o.lookupList=t._lctf.readLookupList(e,l+c,a),o},t._lctf.readLookupList=function(e,r,n){var i=t._bin,a=r,s=[],o=i.readUshort(e,r);r+=2;for(var l=0;l<o;l++){var h=i.readUshort(e,r);r+=2;var u=t._lctf.readLookupTable(e,a+h,n);s.push(u)}return s},t._lctf.readLookupTable=function(e,r,n){var i=t._bin,a=r,s={tabs:[]};s.ltype=i.readUshort(e,r),r+=2,s.flag=i.readUshort(e,r),r+=2;var o=i.readUshort(e,r);r+=2;for(var l=s.ltype,h=0;h<o;h++){var u=i.readUshort(e,r);r+=2;var c=n(e,l,a+u,s);s.tabs.push(c)}return s},t._lctf.numOfOnes=function(e){for(var t=0,r=0;r<32;r++)0!=(e>>>r&1)&&t++;return t},t._lctf.readClassDef=function(e,r){var n=t._bin,i=[],a=n.readUshort(e,r);if(r+=2,1==a){var s=n.readUshort(e,r);r+=2;var o=n.readUshort(e,r);r+=2;for(var l=0;l<o;l++)i.push(s+l),i.push(s+l),i.push(n.readUshort(e,r)),r+=2}if(2==a){var h=n.readUshort(e,r);for(r+=2,l=0;l<h;l++)i.push(n.readUshort(e,r)),r+=2,i.push(n.readUshort(e,r)),r+=2,i.push(n.readUshort(e,r)),r+=2}return i},t._lctf.getInterval=function(e,t){for(var r=0;r<e.length;r+=3){var n=e[r],i=e[r+1];if(e[r+2],n<=t&&t<=i)return r}return -1},t._lctf.readCoverage=function(e,r){var n=t._bin,i={};i.fmt=n.readUshort(e,r),r+=2;var a=n.readUshort(e,r);return r+=2,1==i.fmt&&(i.tab=n.readUshorts(e,r,a)),2==i.fmt&&(i.tab=n.readUshorts(e,r,3*a)),i},t._lctf.coverageIndex=function(e,r){var n=e.tab;if(1==e.fmt)return n.indexOf(r);if(2==e.fmt){var i=t._lctf.getInterval(n,r);if(-1!=i)return n[i+2]+(r-n[i])}return -1},t._lctf.readFeatureList=function(e,r){var n=t._bin,i=r,a=[],s=n.readUshort(e,r);r+=2;for(var o=0;o<s;o++){var l=n.readASCII(e,r,4);r+=4;var h=n.readUshort(e,r);r+=2;var u=t._lctf.readFeatureTable(e,i+h);u.tag=l.trim(),a.push(u)}return a},t._lctf.readFeatureTable=function(e,r){var n=t._bin,i=r,a={},s=n.readUshort(e,r);r+=2,s>0&&(a.featureParams=i+s);var o=n.readUshort(e,r);r+=2,a.tab=[];for(var l=0;l<o;l++)a.tab.push(n.readUshort(e,r+2*l));return a},t._lctf.readScriptList=function(e,r){var n=t._bin,i=r,a={},s=n.readUshort(e,r);r+=2;for(var o=0;o<s;o++){var l=n.readASCII(e,r,4);r+=4;var h=n.readUshort(e,r);r+=2,a[l.trim()]=t._lctf.readScriptTable(e,i+h)}return a},t._lctf.readScriptTable=function(e,r){var n=t._bin,i=r,a={},s=n.readUshort(e,r);r+=2,s>0&&(a.default=t._lctf.readLangSysTable(e,i+s));var o=n.readUshort(e,r);r+=2;for(var l=0;l<o;l++){var h=n.readASCII(e,r,4);r+=4;var u=n.readUshort(e,r);r+=2,a[h.trim()]=t._lctf.readLangSysTable(e,i+u)}return a},t._lctf.readLangSysTable=function(e,r){var n=t._bin,i={};n.readUshort(e,r),r+=2,i.reqFeature=n.readUshort(e,r),r+=2;var a=n.readUshort(e,r);return r+=2,i.features=n.readUshorts(e,r,a),i},t.CFF={},t.CFF.parse=function(e,r,n){var i=t._bin;(e=new Uint8Array(e.buffer,r,n))[r=0],e[++r],e[++r],e[++r],r++;var a=[];r=t.CFF.readIndex(e,r,a);for(var s=[],o=0;o<a.length-1;o++)s.push(i.readASCII(e,r+a[o],a[o+1]-a[o]));r+=a[a.length-1];var l=[];r=t.CFF.readIndex(e,r,l);var h=[];for(o=0;o<l.length-1;o++)h.push(t.CFF.readDict(e,r+l[o],r+l[o+1]));r+=l[l.length-1];var u=h[0],c=[];r=t.CFF.readIndex(e,r,c);var d=[];for(o=0;o<c.length-1;o++)d.push(i.readASCII(e,r+c[o],c[o+1]-c[o]));if(r+=c[c.length-1],t.CFF.readSubrs(e,r,u),u.CharStrings){r=u.CharStrings,c=[],r=t.CFF.readIndex(e,r,c);var p=[];for(o=0;o<c.length-1;o++)p.push(i.readBytes(e,r+c[o],c[o+1]-c[o]));u.CharStrings=p}if(u.ROS){r=u.FDArray;var f=[];for(r=t.CFF.readIndex(e,r,f),u.FDArray=[],o=0;o<f.length-1;o++){var m=t.CFF.readDict(e,r+f[o],r+f[o+1]);t.CFF._readFDict(e,m,d),u.FDArray.push(m)}r+=f[f.length-1],r=u.FDSelect,u.FDSelect=[];var g=e[r];if(r++,3!=g)throw g;var v=i.readUshort(e,r);for(r+=2,o=0;o<v+1;o++)u.FDSelect.push(i.readUshort(e,r),e[r+2]),r+=3}return u.Encoding&&(u.Encoding=t.CFF.readEncoding(e,u.Encoding,u.CharStrings.length)),u.charset&&(u.charset=t.CFF.readCharset(e,u.charset,u.CharStrings.length)),t.CFF._readFDict(e,u,d),u},t.CFF._readFDict=function(e,r,n){var i;for(var a in r.Private&&(i=r.Private[1],r.Private=t.CFF.readDict(e,i,i+r.Private[0]),r.Private.Subrs&&t.CFF.readSubrs(e,i+r.Private.Subrs,r.Private)),r)-1!=["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(a)&&(r[a]=n[r[a]-426+35])},t.CFF.readSubrs=function(e,r,n){var i=t._bin,a=[];r=t.CFF.readIndex(e,r,a);var s=a.length;n.Bias=s<1240?107:s<33900?1131:32768,n.Subrs=[];for(var o=0;o<a.length-1;o++)n.Subrs.push(i.readBytes(e,r+a[o],a[o+1]-a[o]))},t.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],t.CFF.glyphByUnicode=function(e,t){for(var r=0;r<e.charset.length;r++)if(e.charset[r]==t)return r;return -1},t.CFF.glyphBySE=function(e,r){return r<0||r>255?-1:t.CFF.glyphByUnicode(e,t.CFF.tableSE[r])},t.CFF.readEncoding=function(e,r,n){t._bin;var i=[".notdef"],a=e[r];if(r++,0!=a)throw"error: unknown encoding format: "+a;var s=e[r];r++;for(var o=0;o<s;o++)i.push(e[r+o]);return i},t.CFF.readCharset=function(e,r,n){var i=t._bin,a=[".notdef"],s=e[r];if(r++,0==s)for(var o=0;o<n;o++){var l=i.readUshort(e,r);r+=2,a.push(l)}else{if(1!=s&&2!=s)throw"error: format: "+s;for(;a.length<n;){l=i.readUshort(e,r),r+=2;var h=0;for(1==s?(h=e[r],r++):(h=i.readUshort(e,r),r+=2),o=0;o<=h;o++)a.push(l),l++}}return a},t.CFF.readIndex=function(e,r,n){var i=t._bin,a=i.readUshort(e,r)+1,s=e[r+=2];if(r++,1==s)for(var o=0;o<a;o++)n.push(e[r+o]);else if(2==s)for(o=0;o<a;o++)n.push(i.readUshort(e,r+2*o));else if(3==s)for(o=0;o<a;o++)n.push(16777215&i.readUint(e,r+3*o-1));else if(1!=a)throw"unsupported offset size: "+s+", count: "+a;return(r+=a*s)-1},t.CFF.getCharString=function(e,r,n){var i=t._bin,a=e[r],s=e[r+1];e[r+2],e[r+3],e[r+4];var o=1,l=null,h=null;a<=20&&(l=a,o=1),12==a&&(l=100*a+s,o=2),21<=a&&a<=27&&(l=a,o=1),28==a&&(h=i.readShort(e,r+1),o=3),29<=a&&a<=31&&(l=a,o=1),32<=a&&a<=246&&(h=a-139,o=1),247<=a&&a<=250&&(h=256*(a-247)+s+108,o=2),251<=a&&a<=254&&(h=-(256*(a-251))-s-108,o=2),255==a&&(h=i.readInt(e,r+1)/65535,o=5),n.val=null!=h?h:"o"+l,n.size=o},t.CFF.readCharString=function(e,r,n){for(var i=r+n,a=t._bin,s=[];r<i;){var o=e[r],l=e[r+1];e[r+2],e[r+3],e[r+4];var h=1,u=null,c=null;o<=20&&(u=o,h=1),12==o&&(u=100*o+l,h=2),19!=o&&20!=o||(u=o,h=2),21<=o&&o<=27&&(u=o,h=1),28==o&&(c=a.readShort(e,r+1),h=3),29<=o&&o<=31&&(u=o,h=1),32<=o&&o<=246&&(c=o-139,h=1),247<=o&&o<=250&&(c=256*(o-247)+l+108,h=2),251<=o&&o<=254&&(c=-(256*(o-251))-l-108,h=2),255==o&&(c=a.readInt(e,r+1)/65535,h=5),s.push(null!=c?c:"o"+u),r+=h}return s},t.CFF.readDict=function(e,r,n){for(var i=t._bin,a={},s=[];r<n;){var o=e[r],l=e[r+1];e[r+2],e[r+3],e[r+4];var h=1,u=null,c=null;if(28==o&&(c=i.readShort(e,r+1),h=3),29==o&&(c=i.readInt(e,r+1),h=5),32<=o&&o<=246&&(c=o-139,h=1),247<=o&&o<=250&&(c=256*(o-247)+l+108,h=2),251<=o&&o<=254&&(c=-(256*(o-251))-l-108,h=2),255==o)throw c=i.readInt(e,r+1)/65535,h=5,"unknown number";if(30==o){var d=[];for(h=1;;){var p=e[r+h];h++;var f=p>>4,m=15&p;if(15!=f&&d.push(f),15!=m&&d.push(m),15==m)break}for(var g="",v=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],_=0;_<d.length;_++)g+=v[d[_]];c=parseFloat(g)}o<=21&&(u=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][o],h=1,12==o&&(u=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][l],h=2)),null!=u?(a[u]=1==s.length?s[0]:s,s=[]):s.push(c),r+=h}return a},t.cmap={},t.cmap.parse=function(e,r,n){e=new Uint8Array(e.buffer,r,n),r=0;var i=t._bin,a={};i.readUshort(e,r),r+=2;var s=i.readUshort(e,r);r+=2;var o=[];a.tables=[];for(var l=0;l<s;l++){var h=i.readUshort(e,r);r+=2;var u=i.readUshort(e,r);r+=2;var c=i.readUint(e,r);r+=4;var d="p"+h+"e"+u,p=o.indexOf(c);if(-1==p){p=a.tables.length,o.push(c);var f,m=i.readUshort(e,c);0==m?f=t.cmap.parse0(e,c):4==m?f=t.cmap.parse4(e,c):6==m?f=t.cmap.parse6(e,c):12==m?f=t.cmap.parse12(e,c):console.debug("unknown format: "+m,h,u,c),a.tables.push(f)}if(null!=a[d])throw"multiple tables for one platform+encoding";a[d]=p}return a},t.cmap.parse0=function(e,r){var n=t._bin,i={};i.format=n.readUshort(e,r),r+=2;var a=n.readUshort(e,r);r+=2,n.readUshort(e,r),r+=2,i.map=[];for(var s=0;s<a-6;s++)i.map.push(e[r+s]);return i},t.cmap.parse4=function(e,r){var n=t._bin,i=r,a={};a.format=n.readUshort(e,r),r+=2;var s=n.readUshort(e,r);r+=2,n.readUshort(e,r),r+=2;var o=n.readUshort(e,r);r+=2;var l=o/2;a.searchRange=n.readUshort(e,r),r+=2,a.entrySelector=n.readUshort(e,r),r+=2,a.rangeShift=n.readUshort(e,r),r+=2,a.endCount=n.readUshorts(e,r,l),r+=2*l+2,a.startCount=n.readUshorts(e,r,l),r+=2*l,a.idDelta=[];for(var h=0;h<l;h++)a.idDelta.push(n.readShort(e,r)),r+=2;for(a.idRangeOffset=n.readUshorts(e,r,l),r+=2*l,a.glyphIdArray=[];r<i+s;)a.glyphIdArray.push(n.readUshort(e,r)),r+=2;return a},t.cmap.parse6=function(e,r){var n=t._bin,i={};i.format=n.readUshort(e,r),r+=2,n.readUshort(e,r),r+=2,n.readUshort(e,r),r+=2,i.firstCode=n.readUshort(e,r),r+=2;var a=n.readUshort(e,r);r+=2,i.glyphIdArray=[];for(var s=0;s<a;s++)i.glyphIdArray.push(n.readUshort(e,r)),r+=2;return i},t.cmap.parse12=function(e,r){var n=t._bin,i={};i.format=n.readUshort(e,r),r+=4,n.readUint(e,r),r+=4,n.readUint(e,r),r+=4;var a=n.readUint(e,r);r+=4,i.groups=[];for(var s=0;s<a;s++){var o=r+12*s,l=n.readUint(e,o+0),h=n.readUint(e,o+4),u=n.readUint(e,o+8);i.groups.push([l,h,u])}return i},t.glyf={},t.glyf.parse=function(e,t,r,n){for(var i=[],a=0;a<n.maxp.numGlyphs;a++)i.push(null);return i},t.glyf._parseGlyf=function(e,r){var n,i=t._bin,a=e._data,s=t._tabOffset(a,"glyf",e._offset)+e.loca[r];if(e.loca[r]==e.loca[r+1])return null;var o={};if(o.noc=i.readShort(a,s),s+=2,o.xMin=i.readShort(a,s),s+=2,o.yMin=i.readShort(a,s),s+=2,o.xMax=i.readShort(a,s),s+=2,o.yMax=i.readShort(a,s),s+=2,o.xMin>=o.xMax||o.yMin>=o.yMax)return null;if(o.noc>0){o.endPts=[];for(var l=0;l<o.noc;l++)o.endPts.push(i.readUshort(a,s)),s+=2;var h=i.readUshort(a,s);if(s+=2,a.length-s<h)return null;o.instructions=i.readBytes(a,s,h),s+=h;var u=o.endPts[o.noc-1]+1;for(l=0,o.flags=[];l<u;l++){var c=a[s];if(s++,o.flags.push(c),0!=(8&c)){var d=a[s];s++;for(var p=0;p<d;p++)o.flags.push(c),l++}}for(l=0,o.xs=[];l<u;l++){var f=0!=(2&o.flags[l]),m=0!=(16&o.flags[l]);f?(o.xs.push(m?a[s]:-a[s]),s++):m?o.xs.push(0):(o.xs.push(i.readShort(a,s)),s+=2)}for(l=0,o.ys=[];l<u;l++)f=0!=(4&o.flags[l]),m=0!=(32&o.flags[l]),f?(o.ys.push(m?a[s]:-a[s]),s++):m?o.ys.push(0):(o.ys.push(i.readShort(a,s)),s+=2);var g=0,v=0;for(l=0;l<u;l++)g+=o.xs[l],v+=o.ys[l],o.xs[l]=g,o.ys[l]=v}else{o.parts=[];do{n=i.readUshort(a,s),s+=2;var _={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(o.parts.push(_),_.glyphIndex=i.readUshort(a,s),s+=2,1&n){var x=i.readShort(a,s);s+=2;var y=i.readShort(a,s);s+=2}else x=i.readInt8(a,s),s++,y=i.readInt8(a,s),s++;2&n?(_.m.tx=x,_.m.ty=y):(_.p1=x,_.p2=y),8&n?(_.m.a=_.m.d=i.readF2dot14(a,s),s+=2):64&n?(_.m.a=i.readF2dot14(a,s),s+=2,_.m.d=i.readF2dot14(a,s),s+=2):128&n&&(_.m.a=i.readF2dot14(a,s),s+=2,_.m.b=i.readF2dot14(a,s),s+=2,_.m.c=i.readF2dot14(a,s),s+=2,_.m.d=i.readF2dot14(a,s),s+=2)}while(32&n)if(256&n){var S=i.readUshort(a,s);for(s+=2,o.instr=[],l=0;l<S;l++)o.instr.push(a[s]),s++}}return o},t.GDEF={},t.GDEF.parse=function(e,r,n,i){var a=r;r+=4;var s=t._bin.readUshort(e,r);return{glyphClassDef:0===s?null:t._lctf.readClassDef(e,a+s)}},t.GPOS={},t.GPOS.parse=function(e,r,n,i){return t._lctf.parse(e,r,n,i,t.GPOS.subt)},t.GPOS.subt=function(e,r,n,i){var a=t._bin,s=n,o={};if(o.fmt=a.readUshort(e,n),n+=2,1==r||2==r||3==r||7==r||8==r&&o.fmt<=2){var l=a.readUshort(e,n);n+=2,o.coverage=t._lctf.readCoverage(e,l+s)}if(1==r&&1==o.fmt){var h=a.readUshort(e,n);n+=2,0!=h&&(o.pos=t.GPOS.readValueRecord(e,n,h))}else if(2==r&&o.fmt>=1&&o.fmt<=2){h=a.readUshort(e,n),n+=2;var u=a.readUshort(e,n);n+=2;var c=t._lctf.numOfOnes(h),d=t._lctf.numOfOnes(u);if(1==o.fmt){o.pairsets=[];var p=a.readUshort(e,n);n+=2;for(var f=0;f<p;f++){var m=s+a.readUshort(e,n);n+=2;var g=a.readUshort(e,m);m+=2;for(var v=[],_=0;_<g;_++){var x=a.readUshort(e,m);m+=2,0!=h&&(T=t.GPOS.readValueRecord(e,m,h),m+=2*c),0!=u&&(w=t.GPOS.readValueRecord(e,m,u),m+=2*d),v.push({gid2:x,val1:T,val2:w})}o.pairsets.push(v)}}if(2==o.fmt){var y=a.readUshort(e,n);n+=2;var S=a.readUshort(e,n);n+=2;var M=a.readUshort(e,n);n+=2;var b=a.readUshort(e,n);for(n+=2,o.classDef1=t._lctf.readClassDef(e,s+y),o.classDef2=t._lctf.readClassDef(e,s+S),o.matrix=[],f=0;f<M;f++){var E=[];for(_=0;_<b;_++){var T=null,w=null;0!=h&&(T=t.GPOS.readValueRecord(e,n,h),n+=2*c),0!=u&&(w=t.GPOS.readValueRecord(e,n,u),n+=2*d),E.push({val1:T,val2:w})}o.matrix.push(E)}}}else if(4==r&&1==o.fmt)o.markCoverage=t._lctf.readCoverage(e,a.readUshort(e,n)+s),o.baseCoverage=t._lctf.readCoverage(e,a.readUshort(e,n+2)+s),o.markClassCount=a.readUshort(e,n+4),o.markArray=t.GPOS.readMarkArray(e,a.readUshort(e,n+6)+s),o.baseArray=t.GPOS.readBaseArray(e,a.readUshort(e,n+8)+s,o.markClassCount);else if(6==r&&1==o.fmt)o.mark1Coverage=t._lctf.readCoverage(e,a.readUshort(e,n)+s),o.mark2Coverage=t._lctf.readCoverage(e,a.readUshort(e,n+2)+s),o.markClassCount=a.readUshort(e,n+4),o.mark1Array=t.GPOS.readMarkArray(e,a.readUshort(e,n+6)+s),o.mark2Array=t.GPOS.readBaseArray(e,a.readUshort(e,n+8)+s,o.markClassCount);else{if(9==r&&1==o.fmt){var A=a.readUshort(e,n);n+=2;var R=a.readUint(e,n);if(n+=4,9==i.ltype)i.ltype=A;else if(i.ltype!=A)throw"invalid extension substitution";return t.GPOS.subt(e,i.ltype,s+R)}console.debug("unsupported GPOS table LookupType",r,"format",o.fmt)}return o},t.GPOS.readValueRecord=function(e,r,n){var i=t._bin,a=[];return a.push(1&n?i.readShort(e,r):0),r+=1&n?2:0,a.push(2&n?i.readShort(e,r):0),r+=2&n?2:0,a.push(4&n?i.readShort(e,r):0),r+=4&n?2:0,a.push(8&n?i.readShort(e,r):0),r+=8&n?2:0,a},t.GPOS.readBaseArray=function(e,r,n){var i=t._bin,a=[],s=r,o=i.readUshort(e,r);r+=2;for(var l=0;l<o;l++){for(var h=[],u=0;u<n;u++)h.push(t.GPOS.readAnchorRecord(e,s+i.readUshort(e,r))),r+=2;a.push(h)}return a},t.GPOS.readMarkArray=function(e,r){var n=t._bin,i=[],a=r,s=n.readUshort(e,r);r+=2;for(var o=0;o<s;o++){var l=t.GPOS.readAnchorRecord(e,n.readUshort(e,r+2)+a);l.markClass=n.readUshort(e,r),i.push(l),r+=4}return i},t.GPOS.readAnchorRecord=function(e,r){var n=t._bin,i={};return i.fmt=n.readUshort(e,r),i.x=n.readShort(e,r+2),i.y=n.readShort(e,r+4),i},t.GSUB={},t.GSUB.parse=function(e,r,n,i){return t._lctf.parse(e,r,n,i,t.GSUB.subt)},t.GSUB.subt=function(e,r,n,i){var a=t._bin,s=n,o={};if(o.fmt=a.readUshort(e,n),n+=2,1!=r&&2!=r&&4!=r&&5!=r&&6!=r)return null;if(1==r||2==r||4==r||5==r&&o.fmt<=2||6==r&&o.fmt<=2){var l=a.readUshort(e,n);n+=2,o.coverage=t._lctf.readCoverage(e,s+l)}if(1==r&&o.fmt>=1&&o.fmt<=2){if(1==o.fmt)o.delta=a.readShort(e,n),n+=2;else if(2==o.fmt){var h=a.readUshort(e,n);n+=2,o.newg=a.readUshorts(e,n,h),n+=2*o.newg.length}}else if(2==r&&1==o.fmt){h=a.readUshort(e,n),n+=2,o.seqs=[];for(var u=0;u<h;u++){var c=a.readUshort(e,n)+s;n+=2;var d=a.readUshort(e,c);o.seqs.push(a.readUshorts(e,c+2,d))}}else if(4==r)for(o.vals=[],h=a.readUshort(e,n),n+=2,u=0;u<h;u++){var p=a.readUshort(e,n);n+=2,o.vals.push(t.GSUB.readLigatureSet(e,s+p))}else if(5==r&&2==o.fmt){if(2==o.fmt){var f=a.readUshort(e,n);n+=2,o.cDef=t._lctf.readClassDef(e,s+f),o.scset=[];var m=a.readUshort(e,n);for(n+=2,u=0;u<m;u++){var g=a.readUshort(e,n);n+=2,o.scset.push(0==g?null:t.GSUB.readSubClassSet(e,s+g))}}}else if(6==r&&3==o.fmt){if(3==o.fmt){for(u=0;u<3;u++){h=a.readUshort(e,n),n+=2;for(var v=[],_=0;_<h;_++)v.push(t._lctf.readCoverage(e,s+a.readUshort(e,n+2*_)));n+=2*h,0==u&&(o.backCvg=v),1==u&&(o.inptCvg=v),2==u&&(o.ahedCvg=v)}h=a.readUshort(e,n),n+=2,o.lookupRec=t.GSUB.readSubstLookupRecords(e,n,h)}}else{if(7==r&&1==o.fmt){var x=a.readUshort(e,n);n+=2;var y=a.readUint(e,n);if(n+=4,9==i.ltype)i.ltype=x;else if(i.ltype!=x)throw"invalid extension substitution";return t.GSUB.subt(e,i.ltype,s+y)}console.debug("unsupported GSUB table LookupType",r,"format",o.fmt)}return o},t.GSUB.readSubClassSet=function(e,r){var n=t._bin.readUshort,i=r,a=[],s=n(e,r);r+=2;for(var o=0;o<s;o++){var l=n(e,r);r+=2,a.push(t.GSUB.readSubClassRule(e,i+l))}return a},t.GSUB.readSubClassRule=function(e,r){var n=t._bin.readUshort,i={},a=n(e,r),s=n(e,r+=2);r+=2,i.input=[];for(var o=0;o<a-1;o++)i.input.push(n(e,r)),r+=2;return i.substLookupRecords=t.GSUB.readSubstLookupRecords(e,r,s),i},t.GSUB.readSubstLookupRecords=function(e,r,n){for(var i=t._bin.readUshort,a=[],s=0;s<n;s++)a.push(i(e,r),i(e,r+2)),r+=4;return a},t.GSUB.readChainSubClassSet=function(e,r){var n=t._bin,i=r,a=[],s=n.readUshort(e,r);r+=2;for(var o=0;o<s;o++){var l=n.readUshort(e,r);r+=2,a.push(t.GSUB.readChainSubClassRule(e,i+l))}return a},t.GSUB.readChainSubClassRule=function(e,r){for(var n=t._bin,i={},a=["backtrack","input","lookahead"],s=0;s<a.length;s++){var o=n.readUshort(e,r);r+=2,1==s&&o--,i[a[s]]=n.readUshorts(e,r,o),r+=2*i[a[s]].length}return o=n.readUshort(e,r),r+=2,i.subst=n.readUshorts(e,r,2*o),r+=2*i.subst.length,i},t.GSUB.readLigatureSet=function(e,r){var n=t._bin,i=r,a=[],s=n.readUshort(e,r);r+=2;for(var o=0;o<s;o++){var l=n.readUshort(e,r);r+=2,a.push(t.GSUB.readLigature(e,i+l))}return a},t.GSUB.readLigature=function(e,r){var n=t._bin,i={chain:[]};i.nglyph=n.readUshort(e,r),r+=2;var a=n.readUshort(e,r);r+=2;for(var s=0;s<a-1;s++)i.chain.push(n.readUshort(e,r)),r+=2;return i},t.head={},t.head.parse=function(e,r,n){var i=t._bin,a={};return i.readFixed(e,r),r+=4,a.fontRevision=i.readFixed(e,r),r+=4,i.readUint(e,r),r+=4,i.readUint(e,r),r+=4,a.flags=i.readUshort(e,r),r+=2,a.unitsPerEm=i.readUshort(e,r),r+=2,a.created=i.readUint64(e,r),r+=8,a.modified=i.readUint64(e,r),r+=8,a.xMin=i.readShort(e,r),r+=2,a.yMin=i.readShort(e,r),r+=2,a.xMax=i.readShort(e,r),r+=2,a.yMax=i.readShort(e,r),r+=2,a.macStyle=i.readUshort(e,r),r+=2,a.lowestRecPPEM=i.readUshort(e,r),r+=2,a.fontDirectionHint=i.readShort(e,r),r+=2,a.indexToLocFormat=i.readShort(e,r),r+=2,a.glyphDataFormat=i.readShort(e,r),r+=2,a},t.hhea={},t.hhea.parse=function(e,r,n){var i=t._bin,a={};return i.readFixed(e,r),r+=4,a.ascender=i.readShort(e,r),r+=2,a.descender=i.readShort(e,r),r+=2,a.lineGap=i.readShort(e,r),r+=2,a.advanceWidthMax=i.readUshort(e,r),r+=2,a.minLeftSideBearing=i.readShort(e,r),r+=2,a.minRightSideBearing=i.readShort(e,r),r+=2,a.xMaxExtent=i.readShort(e,r),r+=2,a.caretSlopeRise=i.readShort(e,r),r+=2,a.caretSlopeRun=i.readShort(e,r),r+=2,a.caretOffset=i.readShort(e,r),r+=10,a.metricDataFormat=i.readShort(e,r),r+=2,a.numberOfHMetrics=i.readUshort(e,r),r+=2,a},t.hmtx={},t.hmtx.parse=function(e,r,n,i){for(var a=t._bin,s={aWidth:[],lsBearing:[]},o=0,l=0,h=0;h<i.maxp.numGlyphs;h++)h<i.hhea.numberOfHMetrics&&(o=a.readUshort(e,r),r+=2,l=a.readShort(e,r),r+=2),s.aWidth.push(o),s.lsBearing.push(l);return s},t.kern={},t.kern.parse=function(e,r,n,i){var a=t._bin,s=a.readUshort(e,r);if(r+=2,1==s)return t.kern.parseV1(e,r-2,n,i);var o=a.readUshort(e,r);r+=2;for(var l={glyph1:[],rval:[]},h=0;h<o;h++){r+=2,n=a.readUshort(e,r),r+=2;var u=a.readUshort(e,r);r+=2;var c=u>>>8;if(0!=(c&=15))throw"unknown kern table format: "+c;r=t.kern.readFormat0(e,r,l)}return l},t.kern.parseV1=function(e,r,n,i){var a=t._bin;a.readFixed(e,r),r+=4;var s=a.readUint(e,r);r+=4;for(var o={glyph1:[],rval:[]},l=0;l<s;l++){a.readUint(e,r),r+=4;var h=a.readUshort(e,r);r+=2,a.readUshort(e,r),r+=2;var u=h>>>8;if(0!=(u&=15))throw"unknown kern table format: "+u;r=t.kern.readFormat0(e,r,o)}return o},t.kern.readFormat0=function(e,r,n){var i=t._bin,a=-1,s=i.readUshort(e,r);r+=2,i.readUshort(e,r),r+=2,i.readUshort(e,r),r+=2,i.readUshort(e,r),r+=2;for(var o=0;o<s;o++){var l=i.readUshort(e,r);r+=2;var h=i.readUshort(e,r);r+=2;var u=i.readShort(e,r);r+=2,l!=a&&(n.glyph1.push(l),n.rval.push({glyph2:[],vals:[]}));var c=n.rval[n.rval.length-1];c.glyph2.push(h),c.vals.push(u),a=l}return r},t.loca={},t.loca.parse=function(e,r,n,i){var a=t._bin,s=[],o=i.head.indexToLocFormat,l=i.maxp.numGlyphs+1;if(0==o)for(var h=0;h<l;h++)s.push(a.readUshort(e,r+(h<<1))<<1);if(1==o)for(h=0;h<l;h++)s.push(a.readUint(e,r+(h<<2)));return s},t.maxp={},t.maxp.parse=function(e,r,n){var i=t._bin,a={},s=i.readUint(e,r);return r+=4,a.numGlyphs=i.readUshort(e,r),r+=2,65536==s&&(a.maxPoints=i.readUshort(e,r),r+=2,a.maxContours=i.readUshort(e,r),r+=2,a.maxCompositePoints=i.readUshort(e,r),r+=2,a.maxCompositeContours=i.readUshort(e,r),r+=2,a.maxZones=i.readUshort(e,r),r+=2,a.maxTwilightPoints=i.readUshort(e,r),r+=2,a.maxStorage=i.readUshort(e,r),r+=2,a.maxFunctionDefs=i.readUshort(e,r),r+=2,a.maxInstructionDefs=i.readUshort(e,r),r+=2,a.maxStackElements=i.readUshort(e,r),r+=2,a.maxSizeOfInstructions=i.readUshort(e,r),r+=2,a.maxComponentElements=i.readUshort(e,r),r+=2,a.maxComponentDepth=i.readUshort(e,r),r+=2),a},t.name={},t.name.parse=function(e,r,n){var i=t._bin,a={};i.readUshort(e,r),r+=2;var s=i.readUshort(e,r);r+=2,i.readUshort(e,r);for(var o,l=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],h=r+=2,u=0;u<s;u++){var c=i.readUshort(e,r);r+=2;var d=i.readUshort(e,r);r+=2;var p=i.readUshort(e,r);r+=2;var f=i.readUshort(e,r);r+=2;var m=i.readUshort(e,r);r+=2;var g=i.readUshort(e,r);r+=2;var v,_=l[f],x=h+12*s+g;if(0==c)v=i.readUnicode(e,x,m/2);else if(3==c&&0==d)v=i.readUnicode(e,x,m/2);else if(0==d)v=i.readASCII(e,x,m);else if(1==d)v=i.readUnicode(e,x,m/2);else if(3==d)v=i.readUnicode(e,x,m/2);else{if(1!=c)throw"unknown encoding "+d+", platformID: "+c;v=i.readASCII(e,x,m),console.debug("reading unknown MAC encoding "+d+" as ASCII")}var y="p"+c+","+p.toString(16);null==a[y]&&(a[y]={}),a[y][void 0!==_?_:f]=v,a[y]._lang=p}for(var S in a)if(null!=a[S].postScriptName&&1033==a[S]._lang)return a[S];for(var S in a)if(null!=a[S].postScriptName&&0==a[S]._lang)return a[S];for(var S in a)if(null!=a[S].postScriptName&&3084==a[S]._lang)return a[S];for(var S in a)if(null!=a[S].postScriptName)return a[S];for(var S in a){o=S;break}return console.debug("returning name table with languageID "+a[o]._lang),a[o]},t["OS/2"]={},t["OS/2"].parse=function(e,r,n){var i=t._bin.readUshort(e,r);r+=2;var a={};if(0==i)t["OS/2"].version0(e,r,a);else if(1==i)t["OS/2"].version1(e,r,a);else if(2==i||3==i||4==i)t["OS/2"].version2(e,r,a);else{if(5!=i)throw"unknown OS/2 table version: "+i;t["OS/2"].version5(e,r,a)}return a},t["OS/2"].version0=function(e,r,n){var i=t._bin;return n.xAvgCharWidth=i.readShort(e,r),r+=2,n.usWeightClass=i.readUshort(e,r),r+=2,n.usWidthClass=i.readUshort(e,r),r+=2,n.fsType=i.readUshort(e,r),r+=2,n.ySubscriptXSize=i.readShort(e,r),r+=2,n.ySubscriptYSize=i.readShort(e,r),r+=2,n.ySubscriptXOffset=i.readShort(e,r),r+=2,n.ySubscriptYOffset=i.readShort(e,r),r+=2,n.ySuperscriptXSize=i.readShort(e,r),r+=2,n.ySuperscriptYSize=i.readShort(e,r),r+=2,n.ySuperscriptXOffset=i.readShort(e,r),r+=2,n.ySuperscriptYOffset=i.readShort(e,r),r+=2,n.yStrikeoutSize=i.readShort(e,r),r+=2,n.yStrikeoutPosition=i.readShort(e,r),r+=2,n.sFamilyClass=i.readShort(e,r),r+=2,n.panose=i.readBytes(e,r,10),r+=10,n.ulUnicodeRange1=i.readUint(e,r),r+=4,n.ulUnicodeRange2=i.readUint(e,r),r+=4,n.ulUnicodeRange3=i.readUint(e,r),r+=4,n.ulUnicodeRange4=i.readUint(e,r),r+=4,n.achVendID=[i.readInt8(e,r),i.readInt8(e,r+1),i.readInt8(e,r+2),i.readInt8(e,r+3)],r+=4,n.fsSelection=i.readUshort(e,r),r+=2,n.usFirstCharIndex=i.readUshort(e,r),r+=2,n.usLastCharIndex=i.readUshort(e,r),r+=2,n.sTypoAscender=i.readShort(e,r),r+=2,n.sTypoDescender=i.readShort(e,r),r+=2,n.sTypoLineGap=i.readShort(e,r),r+=2,n.usWinAscent=i.readUshort(e,r),r+=2,n.usWinDescent=i.readUshort(e,r),r+=2},t["OS/2"].version1=function(e,r,n){var i=t._bin;return r=t["OS/2"].version0(e,r,n),n.ulCodePageRange1=i.readUint(e,r),r+=4,n.ulCodePageRange2=i.readUint(e,r),r+=4},t["OS/2"].version2=function(e,r,n){var i=t._bin;return r=t["OS/2"].version1(e,r,n),n.sxHeight=i.readShort(e,r),r+=2,n.sCapHeight=i.readShort(e,r),r+=2,n.usDefault=i.readUshort(e,r),r+=2,n.usBreak=i.readUshort(e,r),r+=2,n.usMaxContext=i.readUshort(e,r),r+=2},t["OS/2"].version5=function(e,r,n){var i=t._bin;return r=t["OS/2"].version2(e,r,n),n.usLowerOpticalPointSize=i.readUshort(e,r),r+=2,n.usUpperOpticalPointSize=i.readUshort(e,r),r+=2},t.post={},t.post.parse=function(e,r,n){var i=t._bin,a={};return a.version=i.readFixed(e,r),r+=4,a.italicAngle=i.readFixed(e,r),r+=4,a.underlinePosition=i.readShort(e,r),r+=2,a.underlineThickness=i.readShort(e,r),r+=2,a},null==t&&(t={}),null==t.U&&(t.U={}),t.U.codeToGlyph=function(e,t){var r=e.cmap,n=-1;if(null!=r.p0e4?n=r.p0e4:null!=r.p3e1?n=r.p3e1:null!=r.p1e0?n=r.p1e0:null!=r.p0e3&&(n=r.p0e3),-1==n)throw"no familiar platform and encoding!";var i=r.tables[n];if(0==i.format)return t>=i.map.length?0:i.map[t];if(4==i.format){for(var a=-1,s=0;s<i.endCount.length;s++)if(t<=i.endCount[s]){a=s;break}return -1==a||i.startCount[a]>t?0:65535&(0!=i.idRangeOffset[a]?i.glyphIdArray[t-i.startCount[a]+(i.idRangeOffset[a]>>1)-(i.idRangeOffset.length-a)]:t+i.idDelta[a])}if(12==i.format){if(t>i.groups[i.groups.length-1][1])return 0;for(s=0;s<i.groups.length;s++){var o=i.groups[s];if(o[0]<=t&&t<=o[1])return o[2]+(t-o[0])}return 0}throw"unknown cmap table format "+i.format},t.U.glyphToPath=function(e,r){var n={cmds:[],crds:[]};if(e.SVG&&e.SVG.entries[r]){var i=e.SVG.entries[r];return null==i?n:("string"==typeof i&&(i=t.SVG.toPath(i),e.SVG.entries[r]=i),i)}if(e.CFF){var a={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:e.CFF.Private?e.CFF.Private.defaultWidthX:0,open:!1},s=e.CFF,o=e.CFF.Private;if(s.ROS){for(var l=0;s.FDSelect[l+2]<=r;)l+=2;o=s.FDArray[s.FDSelect[l+1]].Private}t.U._drawCFF(e.CFF.CharStrings[r],a,s,o,n)}else e.glyf&&t.U._drawGlyf(r,e,n);return n},t.U._drawGlyf=function(e,r,n){var i=r.glyf[e];null==i&&(i=r.glyf[e]=t.glyf._parseGlyf(r,e)),null!=i&&(i.noc>-1?t.U._simpleGlyph(i,n):t.U._compoGlyph(i,r,n))},t.U._simpleGlyph=function(e,r){for(var n=0;n<e.noc;n++){for(var i=0==n?0:e.endPts[n-1]+1,a=e.endPts[n],s=i;s<=a;s++){var o=s==i?a:s-1,l=s==a?i:s+1,h=1&e.flags[s],u=1&e.flags[o],c=1&e.flags[l],d=e.xs[s],p=e.ys[s];if(s==i){if(h){if(!u){t.U.P.moveTo(r,d,p);continue}t.U.P.moveTo(r,e.xs[o],e.ys[o])}else u?t.U.P.moveTo(r,e.xs[o],e.ys[o]):t.U.P.moveTo(r,(e.xs[o]+d)/2,(e.ys[o]+p)/2)}h?u&&t.U.P.lineTo(r,d,p):c?t.U.P.qcurveTo(r,d,p,e.xs[l],e.ys[l]):t.U.P.qcurveTo(r,d,p,(d+e.xs[l])/2,(p+e.ys[l])/2)}t.U.P.closePath(r)}},t.U._compoGlyph=function(e,r,n){for(var i=0;i<e.parts.length;i++){var a={cmds:[],crds:[]},s=e.parts[i];t.U._drawGlyf(s.glyphIndex,r,a);for(var o=s.m,l=0;l<a.crds.length;l+=2){var h=a.crds[l],u=a.crds[l+1];n.crds.push(h*o.a+u*o.b+o.tx),n.crds.push(h*o.c+u*o.d+o.ty)}for(l=0;l<a.cmds.length;l++)n.cmds.push(a.cmds[l])}},t.U._getGlyphClass=function(e,r){var n=t._lctf.getInterval(r,e);return -1==n?0:r[n+2]},t.U._applySubs=function(e,r,n,i){for(var a=e.length-r-1,s=0;s<n.tabs.length;s++)if(null!=n.tabs[s]){var o,l=n.tabs[s];if(!l.coverage||-1!=(o=t._lctf.coverageIndex(l.coverage,e[r]))){if(1==n.ltype)e[r],1==l.fmt?e[r]=e[r]+l.delta:e[r]=l.newg[o];else if(4==n.ltype)for(var h=l.vals[o],u=0;u<h.length;u++){var c=h[u],d=c.chain.length;if(!(d>a)){for(var p=!0,f=0,m=0;m<d;m++){for(;-1==e[r+f+(1+m)];)f++;c.chain[m]!=e[r+f+(1+m)]&&(p=!1)}if(p){for(m=0,e[r]=c.nglyph;m<d+f;m++)e[r+m+1]=-1;break}}}else if(5==n.ltype&&2==l.fmt)for(var g=t._lctf.getInterval(l.cDef,e[r]),v=l.cDef[g+2],_=l.scset[v],x=0;x<_.length;x++){var y=_[x],S=y.input;if(!(S.length>a)){for(p=!0,m=0;m<S.length;m++){var M=t._lctf.getInterval(l.cDef,e[r+1+m]);if(-1==g&&l.cDef[M+2]!=S[m]){p=!1;break}}if(p){var b=y.substLookupRecords;for(u=0;u<b.length;u+=2)b[u],b[u+1]}}}else if(6==n.ltype&&3==l.fmt){if(!t.U._glsCovered(e,l.backCvg,r-l.backCvg.length)||!t.U._glsCovered(e,l.inptCvg,r)||!t.U._glsCovered(e,l.ahedCvg,r+l.inptCvg.length))continue;var E=l.lookupRec;for(x=0;x<E.length;x+=2){g=E[x];var T=i[E[x+1]];t.U._applySubs(e,r+g,T,i)}}}}},t.U._glsCovered=function(e,r,n){for(var i=0;i<r.length;i++)if(-1==t._lctf.coverageIndex(r[i],e[n+i]))return!1;return!0},t.U.glyphsToPath=function(e,r,n){for(var i={cmds:[],crds:[]},a=0,s=0;s<r.length;s++){var o=r[s];if(-1!=o){for(var l=s<r.length-1&&-1!=r[s+1]?r[s+1]:0,h=t.U.glyphToPath(e,o),u=0;u<h.crds.length;u+=2)i.crds.push(h.crds[u]+a),i.crds.push(h.crds[u+1]);for(n&&i.cmds.push(n),u=0;u<h.cmds.length;u++)i.cmds.push(h.cmds[u]);n&&i.cmds.push("X"),a+=e.hmtx.aWidth[o],s<r.length-1&&(a+=t.U.getPairAdjustment(e,o,l))}}return i},t.U.P={},t.U.P.moveTo=function(e,t,r){e.cmds.push("M"),e.crds.push(t,r)},t.U.P.lineTo=function(e,t,r){e.cmds.push("L"),e.crds.push(t,r)},t.U.P.curveTo=function(e,t,r,n,i,a,s){e.cmds.push("C"),e.crds.push(t,r,n,i,a,s)},t.U.P.qcurveTo=function(e,t,r,n,i){e.cmds.push("Q"),e.crds.push(t,r,n,i)},t.U.P.closePath=function(e){e.cmds.push("Z")},t.U._drawCFF=function(e,r,n,i,a){for(var s=r.stack,o=r.nStems,l=r.haveWidth,h=r.width,u=r.open,c=0,d=r.x,p=r.y,f=0,m=0,g=0,v=0,_=0,x=0,y=0,S=0,M=0,b=0,E={val:0,size:0};c<e.length;){t.CFF.getCharString(e,c,E);var T=E.val;if(c+=E.size,"o1"==T||"o18"==T)s.length%2==0||l||(h=s.shift()+i.nominalWidthX),o+=s.length>>1,s.length=0,l=!0;else if("o3"==T||"o23"==T)s.length%2==0||l||(h=s.shift()+i.nominalWidthX),o+=s.length>>1,s.length=0,l=!0;else if("o4"==T)s.length>1&&!l&&(h=s.shift()+i.nominalWidthX,l=!0),u&&t.U.P.closePath(a),p+=s.pop(),t.U.P.moveTo(a,d,p),u=!0;else if("o5"==T)for(;s.length>0;)d+=s.shift(),p+=s.shift(),t.U.P.lineTo(a,d,p);else if("o6"==T||"o7"==T)for(var w=s.length,A="o6"==T,R=0;R<w;R++){var C=s.shift();A?d+=C:p+=C,A=!A,t.U.P.lineTo(a,d,p)}else if("o8"==T||"o24"==T){w=s.length;for(var U=0;U+6<=w;)f=d+s.shift(),m=p+s.shift(),g=f+s.shift(),v=m+s.shift(),d=g+s.shift(),p=v+s.shift(),t.U.P.curveTo(a,f,m,g,v,d,p),U+=6;"o24"==T&&(d+=s.shift(),p+=s.shift(),t.U.P.lineTo(a,d,p))}else{if("o11"==T)break;if("o1234"==T||"o1235"==T||"o1236"==T||"o1237"==T)"o1234"==T&&(m=p,g=(f=d+s.shift())+s.shift(),b=v=m+s.shift(),x=v,S=p,d=(y=(_=(M=g+s.shift())+s.shift())+s.shift())+s.shift(),t.U.P.curveTo(a,f,m,g,v,M,b),t.U.P.curveTo(a,_,x,y,S,d,p)),"o1235"==T&&(f=d+s.shift(),m=p+s.shift(),g=f+s.shift(),v=m+s.shift(),M=g+s.shift(),b=v+s.shift(),_=M+s.shift(),x=b+s.shift(),y=_+s.shift(),S=x+s.shift(),d=y+s.shift(),p=S+s.shift(),s.shift(),t.U.P.curveTo(a,f,m,g,v,M,b),t.U.P.curveTo(a,_,x,y,S,d,p)),"o1236"==T&&(f=d+s.shift(),m=p+s.shift(),g=f+s.shift(),b=v=m+s.shift(),x=v,y=(_=(M=g+s.shift())+s.shift())+s.shift(),S=x+s.shift(),d=y+s.shift(),t.U.P.curveTo(a,f,m,g,v,M,b),t.U.P.curveTo(a,_,x,y,S,d,p)),"o1237"==T&&(f=d+s.shift(),m=p+s.shift(),g=f+s.shift(),v=m+s.shift(),M=g+s.shift(),b=v+s.shift(),_=M+s.shift(),x=b+s.shift(),Math.abs((y=_+s.shift())-d)>Math.abs((S=x+s.shift())-p)?d=y+s.shift():p=S+s.shift(),t.U.P.curveTo(a,f,m,g,v,M,b),t.U.P.curveTo(a,_,x,y,S,d,p));else if("o14"==T){if(s.length>0&&!l&&(h=s.shift()+n.nominalWidthX,l=!0),4==s.length){var P=s.shift(),L=s.shift(),D=s.shift(),I=s.shift(),O=t.CFF.glyphBySE(n,D),N=t.CFF.glyphBySE(n,I);t.U._drawCFF(n.CharStrings[O],r,n,i,a),r.x=P,r.y=L,t.U._drawCFF(n.CharStrings[N],r,n,i,a)}u&&(t.U.P.closePath(a),u=!1)}else if("o19"==T||"o20"==T)s.length%2==0||l||(h=s.shift()+i.nominalWidthX),o+=s.length>>1,s.length=0,l=!0,c+=o+7>>3;else if("o21"==T)s.length>2&&!l&&(h=s.shift()+i.nominalWidthX,l=!0),p+=s.pop(),d+=s.pop(),u&&t.U.P.closePath(a),t.U.P.moveTo(a,d,p),u=!0;else if("o22"==T)s.length>1&&!l&&(h=s.shift()+i.nominalWidthX,l=!0),d+=s.pop(),u&&t.U.P.closePath(a),t.U.P.moveTo(a,d,p),u=!0;else if("o25"==T){for(;s.length>6;)d+=s.shift(),p+=s.shift(),t.U.P.lineTo(a,d,p);f=d+s.shift(),m=p+s.shift(),g=f+s.shift(),v=m+s.shift(),d=g+s.shift(),p=v+s.shift(),t.U.P.curveTo(a,f,m,g,v,d,p)}else if("o26"==T)for(s.length%2&&(d+=s.shift());s.length>0;)f=d,m=p+s.shift(),d=g=f+s.shift(),p=(v=m+s.shift())+s.shift(),t.U.P.curveTo(a,f,m,g,v,d,p);else if("o27"==T)for(s.length%2&&(p+=s.shift());s.length>0;)m=p,g=(f=d+s.shift())+s.shift(),v=m+s.shift(),d=g+s.shift(),p=v,t.U.P.curveTo(a,f,m,g,v,d,p);else if("o10"==T||"o29"==T){var F="o10"==T?i:n;if(0==s.length)console.debug("error: empty stack");else{var B=s.pop(),z=F.Subrs[B+F.Bias];r.x=d,r.y=p,r.nStems=o,r.haveWidth=l,r.width=h,r.open=u,t.U._drawCFF(z,r,n,i,a),d=r.x,p=r.y,o=r.nStems,l=r.haveWidth,h=r.width,u=r.open}}else if("o30"==T||"o31"==T){var k=s.length,G=(U=0,"o31"==T);for(U+=k-(w=-3&k);U<w;)G?(m=p,g=(f=d+s.shift())+s.shift(),p=(v=m+s.shift())+s.shift(),w-U==5?(d=g+s.shift(),U++):d=g,G=!1):(f=d,m=p+s.shift(),g=f+s.shift(),v=m+s.shift(),d=g+s.shift(),w-U==5?(p=v+s.shift(),U++):p=v,G=!0),t.U.P.curveTo(a,f,m,g,v,d,p),U+=4}else{if("o"==(T+"").charAt(0))throw console.debug("Unknown operation: "+T,e),T;s.push(T)}}}r.x=d,r.y=p,r.nStems=o,r.haveWidth=l,r.width=h,r.open=u},r=t,e.Typr=r,e.default={Typr:r},Object.defineProperty(e,"__esModule",{value:!0}),e).Typr},/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/function(){return function(e){var t=Uint8Array,r=Uint16Array,n=Uint32Array,i=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),a=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),s=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),o=function(e,t){for(var i=new r(31),a=0;a<31;++a)i[a]=t+=1<<e[a-1];var s=new n(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return[i,s]},l=o(i,2),h=l[0],u=l[1];h[28]=258,u[258]=28;for(var c=o(a,0)[0],d=new r(32768),p=0;p<32768;++p){var f=(43690&p)>>>1|(21845&p)<<1;f=(61680&(f=(52428&f)>>>2|(13107&f)<<2))>>>4|(3855&f)<<4,d[p]=((65280&f)>>>8|(255&f)<<8)>>>1}var m=function(e,t,n){for(var i=e.length,a=0,s=new r(t);a<i;++a)++s[e[a]-1];var o,l=new r(t);for(a=0;a<t;++a)l[a]=l[a-1]+s[a-1]<<1;if(n){o=new r(1<<t);var h=15-t;for(a=0;a<i;++a)if(e[a])for(var u=a<<4|e[a],c=t-e[a],p=l[e[a]-1]++<<c,f=p|(1<<c)-1;p<=f;++p)o[d[p]>>>h]=u}else for(o=new r(i),a=0;a<i;++a)e[a]&&(o[a]=d[l[e[a]-1]++]>>>15-e[a]);return o},g=new t(288);for(p=0;p<144;++p)g[p]=8;for(p=144;p<256;++p)g[p]=9;for(p=256;p<280;++p)g[p]=7;for(p=280;p<288;++p)g[p]=8;var v=new t(32);for(p=0;p<32;++p)v[p]=5;var _=m(g,9,1),x=m(v,5,1),y=function(e){for(var t=e[0],r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t},S=function(e,t,r){var n=t/8|0;return(e[n]|e[n+1]<<8)>>(7&t)&r},M=function(e,t){var r=t/8|0;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>(7&t)},b=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],E=function(e,t,r){var n=Error(t||b[e]);if(n.code=e,Error.captureStackTrace&&Error.captureStackTrace(n,E),!r)throw n;return n},T=function(e,o,l){var u,d,p,f,g=e.length;if(!g||l&&!l.l&&g<5)return o||new t(0);var v=!o||l,b=!l||l.i;l||(l={}),o||(o=new t(3*g));var T,w=function(e){var r=o.length;if(e>r){var n=new t(Math.max(2*r,e));n.set(o),o=n}},A=l.f||0,R=l.p||0,C=l.b||0,U=l.l,P=l.d,L=l.m,D=l.n,I=8*g;do{if(!U){l.f=A=S(e,R,1);var O=S(e,R+1,3);if(R+=3,!O){var N=e[(q=((T=R)/8|0)+(7&T&&1)+4)-4]|e[q-3]<<8,F=q+N;if(F>g){b&&E(0);break}v&&w(C+N),o.set(e.subarray(q,F),C),l.b=C+=N,l.p=R=8*F;continue}if(1==O)U=_,P=x,L=9,D=5;else if(2==O){var B=S(e,R,31)+257,z=S(e,R+10,15)+4,k=B+S(e,R+5,31)+1;R+=14;for(var G=new t(k),V=new t(19),H=0;H<z;++H)V[s[H]]=S(e,R+3*H,7);R+=3*z;var W=y(V),j=(1<<W)-1,X=m(V,W,1);for(H=0;H<k;){var q,Y=X[S(e,R,j)];if(R+=15&Y,(q=Y>>>4)<16)G[H++]=q;else{var Z=0,J=0;for(16==q?(J=3+S(e,R,3),R+=2,Z=G[H-1]):17==q?(J=3+S(e,R,7),R+=3):18==q&&(J=11+S(e,R,127),R+=7);J--;)G[H++]=Z}}var K=G.subarray(0,B),$=G.subarray(B);L=y(K),D=y($),U=m(K,L,1),P=m($,D,1)}else E(1);if(R>I){b&&E(0);break}}v&&w(C+131072);for(var Q=(1<<L)-1,ee=(1<<D)-1,et=R;;et=R){var er=(Z=U[M(e,R)&Q])>>>4;if((R+=15&Z)>I){b&&E(0);break}if(Z||E(2),er<256)o[C++]=er;else{if(256==er){et=R,U=null;break}var en=er-254;if(er>264){var ei=i[H=er-257];en=S(e,R,(1<<ei)-1)+h[H],R+=ei}var ea=P[M(e,R)&ee],es=ea>>>4;if(ea||E(3),R+=15&ea,$=c[es],es>3&&(ei=a[es],$+=M(e,R)&(1<<ei)-1,R+=ei),R>I){b&&E(0);break}v&&w(C+131072);for(var eo=C+en;C<eo;C+=4)o[C]=o[C-$],o[C+1]=o[C+1-$],o[C+2]=o[C+2-$],o[C+3]=o[C+3-$];C=eo}}l.l=U,l.p=et,l.b=C,U&&(A=1,l.m=L,l.d=P,l.n=D)}while(!A)return C==o.length?o:(u=o,(d=0)<0&&(d=0),(null==(p=C)||p>u.length)&&(p=u.length),(f=new(u instanceof r?r:u instanceof n?n:t)(p-d)).set(u.subarray(d,p)),f)},w=new t(0),A="undefined"!=typeof TextDecoder&&new TextDecoder;try{A.decode(w,{stream:!0})}catch(e){}return e.convert_streams=function(e){var t=new DataView(e),r=0;function n(){var e=t.getUint16(r);return r+=2,e}function i(){var e=t.getUint32(r);return r+=4,e}function a(e){v.setUint16(_,e),_+=2}function s(e){v.setUint32(_,e),_+=4}for(var o={signature:i(),flavor:i(),length:i(),numTables:n(),reserved:n(),totalSfntSize:i(),majorVersion:n(),minorVersion:n(),metaOffset:i(),metaLength:i(),metaOrigLength:i(),privOffset:i(),privLength:i()},l=0;Math.pow(2,l)<=o.numTables;)l++;l--;for(var h=16*Math.pow(2,l),u=16*o.numTables-h,c=12,d=[],p=0;p<o.numTables;p++)d.push({tag:i(),offset:i(),compLength:i(),origLength:i(),origChecksum:i()}),c+=16;var f,m=new Uint8Array(12+16*d.length+d.reduce(function(e,t){return e+t.origLength+4},0)),g=m.buffer,v=new DataView(g),_=0;return s(o.flavor),a(o.numTables),a(h),a(l),a(u),d.forEach(function(e){s(e.tag),s(e.origChecksum),s(c),s(e.origLength),e.outOffset=c,(c+=e.origLength)%4!=0&&(c+=4-c%4)}),d.forEach(function(t){var r=e.slice(t.offset,t.offset+t.compLength);if(t.compLength!=t.origLength){var n=new Uint8Array(t.origLength);T(new Uint8Array(r,2),n)}else n=new Uint8Array(r);m.set(n,t.outOffset);var i=0;(c=t.outOffset+t.origLength)%4!=0&&(i=4-c%4),m.set(new Uint8Array(i).buffer,t.outOffset+t.origLength),f=c+i}),g.slice(0,f)},Object.defineProperty(e,"__esModule",{value:!0}),e}({}).convert_streams},function(e,t){let r;let n={M:2,L:2,Q:4,C:6,Z:0},i={C:"18g,ca,368,1kz",D:"17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v",R:"17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6",L:"x9u,jff,a,fd,jv",T:"4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n"},a=[null,"isol","init","fina","medi"];function s(t,r){let n=t.GDEF&&t.GDEF.glyphClassDef;return n?e.U._getGlyphClass(r,n):0}function o(...e){for(let t=0;t<e.length;t++)if("number"==typeof e[t])return e[t]}return function(l){let h=new Uint8Array(l,0,4),u=e._bin.readASCII(h,0,4);if("wOFF"===u)l=t(l);else if("wOF2"===u)throw Error("woff2 fonts not supported");return function(t){let l=Object.create(null),h=t["OS/2"],u=t.hhea,c=t.head.unitsPerEm,d=o(h&&h.sTypoAscender,u&&u.ascender,c),p={unitsPerEm:c,ascender:d,descender:o(h&&h.sTypoDescender,u&&u.descender,0),capHeight:o(h&&h.sCapHeight,d),xHeight:o(h&&h.sxHeight,d),lineGap:o(h&&h.sTypoLineGap,u&&u.lineGap),supportsCodePoint:r=>e.U.codeToGlyph(t,r)>0,forEachGlyph(o,h,u,c){let d=0,f=1/p.unitsPerEm*h,m=function(t,n){let s=[];for(let r=0;r<n.length;r++){let i=n.codePointAt(r);i>65535&&r++,s.push(e.U.codeToGlyph(t,i))}let o=t.GSUB;if(o){let t;let{lookupList:l,featureList:h}=o,u=/^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,c=[];h.forEach(o=>{if(u.test(o.tag))for(let h=0;h<o.tab.length;h++){if(c[o.tab[h]])continue;c[o.tab[h]]=!0;let u=l[o.tab[h]],d=/^(isol|init|fina|medi)$/.test(o.tag);d&&!t&&(t=function(e){let t=new Uint8Array(e.length),n=32,a=1,s=-1;for(let o=0;o<e.length;o++){let l=e.codePointAt(o),h=0|function(e){if(!r){let e={R:2,L:1,D:4,C:16,U:32,T:8};for(let t in r=new Map,i){let n=0;i[t].split(",").forEach(i=>{let[a,s]=i.split("+");a=parseInt(a,36),s=s?parseInt(s,36):0,r.set(n+=a,e[t]);for(let i=s;i--;)r.set(++n,e[t])})}}return r.get(e)||32}(l),u=1;!(8&h)&&(21&n?22&h?(u=3,(1===a||3===a)&&t[s]++):33&h&&(2===a||4===a)&&t[s]--:34&n&&(2===a||4===a)&&t[s]--,a=t[o]=u,n=h,s=o,l>65535&&o++)}return t}(n));for(let r=0;r<s.length;r++)t&&d&&a[t[r]]!==o.tag||e.U._applySubs(s,r,u,l)}})}return s}(t,o),g=0,v=function(t,r){let n=new Int16Array(3*r.length),i=0;for(;i<r.length;i++){let h=r[i];if(-1===h)continue;n[3*i+2]=t.hmtx.aWidth[h];let u=t.GPOS;if(u){let c=u.lookupList;for(let u=0;u<c.length;u++){let d=c[u];for(let u=0;u<d.tabs.length;u++){let c=d.tabs[u];if(1===d.ltype){if(-1!==e._lctf.coverageIndex(c.coverage,h)&&c.pos){l(c.pos,i);break}}else if(2===d.ltype){let t=null,n=a();if(-1!==n){let a=e._lctf.coverageIndex(c.coverage,r[n]);if(-1!==a){if(1===c.fmt){let e=c.pairsets[a];for(let r=0;r<e.length;r++)e[r].gid2===h&&(t=e[r])}else if(2===c.fmt){let i=e.U._getGlyphClass(r[n],c.classDef1),a=e.U._getGlyphClass(h,c.classDef2);t=c.matrix[i][a]}if(t){t.val1&&l(t.val1,n),t.val2&&l(t.val2,i);break}}}}else if(4===d.ltype){let t=e._lctf.coverageIndex(c.markCoverage,h);if(-1!==t){let s=a(o),l=-1===s?-1:e._lctf.coverageIndex(c.baseCoverage,r[s]);if(-1!==l){let e=c.markArray[t],r=c.baseArray[l][e.markClass];n[3*i]=r.x-e.x+n[3*s]-n[3*s+2],n[3*i+1]=r.y-e.y+n[3*s+1];break}}}else if(6===d.ltype){let o=e._lctf.coverageIndex(c.mark1Coverage,h);if(-1!==o){let l=a();if(-1!==l){let a=r[l];if(3===s(t,a)){let t=e._lctf.coverageIndex(c.mark2Coverage,a);if(-1!==t){let e=c.mark1Array[o],r=c.mark2Array[t][e.markClass];n[3*i]=r.x-e.x+n[3*l]-n[3*l+2],n[3*i+1]=r.y-e.y+n[3*l+1];break}}}}}}}}else if(t.kern&&!t.cff){let e=a();if(-1!==e){let i=t.kern.glyph1.indexOf(r[e]);if(-1!==i){let r=t.kern.rval[i].glyph2.indexOf(h);-1!==r&&(n[3*e+2]+=t.kern.rval[i].vals[r])}}}}return n;function a(e){for(let t=i-1;t>=0;t--)if(-1!==r[t]&&(!e||e(r[t])))return t;return -1}function o(e){return 1===s(t,e)}function l(e,t){for(let r=0;r<3;r++)n[3*t+r]+=e[r]||0}}(t,m);return m.forEach((r,i)=>{if(-1!==r){let a=l[r];if(!a){let i,s,o,h;let{cmds:u,crds:c}=e.U.glyphToPath(t,r),d="",p=0;for(let e=0,t=u.length;e<t;e++){let t=n[u[e]];d+=u[e];for(let e=1;e<=t;e++)d+=(e>1?",":"")+c[p++]}if(c.length){i=s=1/0,o=h=-1/0;for(let e=0,t=c.length;e<t;e+=2){let t=c[e],r=c[e+1];t<i&&(i=t),r<s&&(s=r),t>o&&(o=t),r>h&&(h=r)}}else i=o=s=h=0;a=l[r]={index:r,advanceWidth:t.hmtx.aWidth[r],xMin:i,yMin:s,xMax:o,yMax:h,path:d}}c.call(null,a,d+v[3*i]*f,v[3*i+1]*f,g),d+=v[3*i+2]*f,u&&(d+=u*h)}g+=o.codePointAt(g)>65535?2:1}),d}};return p}(e.parse(l)[0])}}],init:(e,t,r)=>r(e(),t())}),d=(0,o.defineWorkerModule)({name:"FontResolver",dependencies:[function(e,t){let r=Object.create(null),n=Object.create(null);function i(t,i){let a=r[t];a?i(a):n[t]?n[t].push(i):(n[t]=[i],function(t,r){let n=e=>{console.error(`Failure loading font ${t}`,e)};try{let i=new XMLHttpRequest;i.open("get",t,!0),i.responseType="arraybuffer",i.onload=function(){if(i.status>=400)n(Error(i.statusText));else if(i.status>0)try{let n=e(i.response);n.src=t,r(n)}catch(e){n(e)}},i.onerror=n,i.send()}catch(e){n(e)}}(t,e=>{e.src=t,r[t]=e,n[t].forEach(t=>t(e)),delete n[t]}))}return function(e,n,{lang:a,fonts:s=[],style:o="normal",weight:l="normal",unicodeFontsURL:h}={}){let u=new Uint8Array(e.length),c=[];e.length||m();let d=new Map,p=[];if("italic"!==o&&(o="normal"),"number"!=typeof l&&(l="bold"===l?700:400),s&&!Array.isArray(s)&&(s=[s]),(s=s.slice().filter(e=>!e.lang||e.lang.test(a)).reverse()).length){let t=0;!function n(a=0){for(let o=a,l=e.length;o<l;o++){let a=e.codePointAt(o);if(1===t&&c[u[o-1]].supportsCodePoint(a)||/\s/.test(e[o]))u[o]=u[o-1],2===t&&(p[p.length-1][1]=o);else for(let e=u[o],l=s.length;e<=l;e++)if(e===l)(2===t?p[p.length-1]:p[p.length]=[o,o])[1]=o,t=2;else{u[o]=e;let{src:l,unicodeRange:h}=s[e];if(!h||function(e,t){for(let r=0;r<t.length;r++){let[n,i=n]=t[r];if(n<=e&&e<=i)return!0}return!1}(a,h)){let e=r[l];if(!e){i(l,()=>{n(o)});return}if(e.supportsCodePoint(a)){let r=d.get(e);"number"!=typeof r&&(r=c.length,c.push(e),d.set(e,r)),u[o]=r,t=1;break}}}a>65535&&o+1<l&&(u[o+1]=u[o],o++,2===t&&(p[p.length-1][1]=o))}f()}()}else p.push([0,e.length-1]),f();function f(){if(p.length){let r=p.map(t=>e.substring(t[0],t[1]+1)).join("\n");t.getFontsForString(r,{lang:a||void 0,style:o,weight:l,dataUrl:h}).then(({fontUrls:e,chars:t})=>{let r=c.length,n=0;p.forEach(e=>{for(let i=0,a=e[1]-e[0];i<=a;i++)u[e[0]+i]=t[n++]+r;n++});let a=0;e.forEach((t,n)=>{i(t,t=>{c[n+r]=t,++a===e.length&&m()})})})}else m()}function m(){n({chars:u,fonts:c})}}},c,/*!
Custom bundle of @unicode-font-resolver/client v1.0.2 (https://github.com/lojjic/unicode-font-resolver)
for use in Troika text rendering. 
Original MIT license applies
*/function(){return function(e){var t=function(){this.buckets=new Map};function r(e,t){var r=255&e,n=t.codePointAt(r/6|0);return 0!=((n=(n||48)-48)&1<<r%6)}function n(e,t){!function(e,t){e.replace(/U\+/gi,"").replace(/^,+|,+$/g,"").split(/,+/).map(function(e){return e.split("-").map(function(e){return parseInt(e.trim(),16)})}).forEach(function(e){var r=e[0],n=e[1];void 0===n&&(n=r),t(r,n)})}(e,function(e,r){for(var n=e;n<=r;n++)t(n)})}t.prototype.add=function(e){var t=e>>5;this.buckets.set(t,(this.buckets.get(t)||0)|1<<(31&e))},t.prototype.has=function(e){var t=this.buckets.get(e>>5);return void 0!==t&&0!=(t&1<<(31&e))},t.prototype.serialize=function(){var e=[];return this.buckets.forEach(function(t,r){e.push((+r).toString(36)+":"+t.toString(36))}),e.join(",")},t.prototype.deserialize=function(e){var t=this;this.buckets.clear(),e.split(",").forEach(function(e){var r=e.split(":");t.buckets.set(parseInt(r[0],36),parseInt(r[1],36))})};var i,a={},s={},o=new WeakMap,l="https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data",h=new Map;function u(e,t,r){return e[t]?t:e[r]?r:function(e){for(var t in e)return t}(e)}return e.CodePointSet=t,e.clearCache=function(){a={},s={}},e.getFontsForString=function(e,c){void 0===c&&(c={});var d=c.lang;void 0===d&&(d=/\p{Script=Hangul}/u.test(e)?"ko":/\p{Script=Hiragana}|\p{Script=Katakana}/u.test(e)?"ja":"en");var p=c.category;void 0===p&&(p="sans-serif");var f=c.style;void 0===f&&(f="normal");var m=c.weight;void 0===m&&(m=400);var g=(c.dataUrl||l).replace(/\/$/g,""),v=new Map,_=new Uint8Array(e.length),x={},y={},S=Array(e.length),M=new Map,b=!1;function E(e){var t=h.get(e);return t||(t=fetch(g+"/"+e).then(function(e){if(!e.ok)throw Error(e.statusText);return e.json().then(function(e){if(!Array.isArray(e)||1!==e[0])throw Error("Incorrect schema version; need 1, got "+e[0]);return e[1]})}).catch(function(t){if(g!==l)return b||(console.error('unicode-font-resolver: Failed loading from dataUrl "'+g+'", trying default CDN. '+t.message),b=!0),g=l,h.delete(e),E(e);throw t}),h.set(e,t)),t}for(var T=0;T<e.length;T++)(function(t){var r=e.codePointAt(t),n=function(e){var t=(-256&e).toString(16),r=((-256&e)+256-1).toString(16);return"codepoint-index/plane"+(e>>16)+"/"+t+"-"+r+".json"}(r);S[t]=n,a[n]||M.has(n)||M.set(n,E(n).then(function(e){a[n]=e})),r>65535&&(T=++t)})(T);return Promise.all(M.values()).then(function(){M.clear();for(var t=0;t<e.length;t++)(function(n){var i=e.codePointAt(n),o=null,l=a[S[n]],h=void 0;for(var u in l){var c=y[u];if(void 0===c&&(c=y[u]=new RegExp(u).test(d||"en")),c){for(var p in h=u,l[u])if(r(i,l[u][p])){o=p;break}break}}if(!o){i:for(var f in l)if(f!==h){for(var m in l[f])if(r(i,l[f][m])){o=m;break i}}}o||(console.debug("No font coverage for U+"+i.toString(16)),o="latin"),S[n]=o,s[o]||M.has(o)||M.set(o,E("font-meta/"+o+".json").then(function(e){s[o]=e})),i>65535&&(t=++n)})(t);return Promise.all(M.values())}).then(function(){for(var r,a=null,l=0;l<e.length;l++){var h=e.codePointAt(l);if(a&&(i||(i=new Set,n("9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000",function(e){i.add(e)})),i.has(h)||(function(e){var r=o.get(e);return r||(r=new t,n(e.ranges,function(e){return r.add(e)}),o.set(e,r)),r})(a).has(h)))_[l]=_[l-1];else{var c=x[(a=s[S[l]]).id];if(!c){var d=a.typeforms,y=u(d,p,"sans-serif"),M=u(d[y],f,"normal"),b=function(e,t){var r=t;if(!e.includes(r)){r=1/0;for(var n=0;n<e.length;n++)Math.abs(e[n]-t)<Math.abs(r-t)&&(r=e[n])}return r}(null===(r=d[y])||void 0===r?void 0:r[M],m);c=x[a.id]=g+"/font-files/"+a.id+"/"+y+"."+M+"."+b+".woff"}var E=v.get(c);null==E&&(E=v.size,v.set(c,E)),_[l]=E}h>65535&&(_[++l]=_[l-1])}return{fontUrls:Array.from(v.keys()),chars:_}})},Object.defineProperty(e,"__esModule",{value:!0}),e}({})}],init:(e,t,r)=>e(t,r())}),p=()=>(self.performance||Date).now(),f=(0,l.default)(),m=[],g=0;function v(){let e=p();for(;m.length&&p()-e<5;)m.shift()();g=m.length?setTimeout(v,0):0}let _=(...e)=>new Promise((t,r)=>{m.push(()=>{let n=p();try{f.webgl.generateIntoCanvas(...e),t({timing:p()-n})}catch(e){r(e)}}),g||(g=setTimeout(v,0))}),x={},y=0;function S(e,t,r,n,i,a,s,h,u,c){let d="TroikaTextSDFGenerator_JS_"+y++%4,m=x[d];return m||(m=x[d]={workerModule:(0,o.defineWorkerModule)({name:d,workerId:d,dependencies:[l.default,p],init(e,t){let r=e().javascript.generate;return function(...e){let n=t();return{textureData:r(...e),timing:t()-n}}},getTransferables:e=>[e.textureData.buffer]}),requests:0,idleTimer:null}),m.requests++,clearTimeout(m.idleTimer),m.workerModule(e,t,r,n,i,a).then(({textureData:r,timing:n})=>{let i=p(),a=new Uint8Array(4*r.length);for(let e=0;e<r.length;e++)a[4*e+c]=r[e];return f.webglUtils.renderImageData(s,a,h,u,e,t,1<<3-c),n+=p()-i,0==--m.requests&&(m.idleTimer=setTimeout(()=>{(0,o.terminateWorker)(d)},2e3)),{timing:n}})}let M=f.webglUtils.resizeWebGLCanvasWithoutClearing,b={defaultFontURL:null,unicodeFontsURL:null,sdfGlyphSize:64,sdfMargin:1/16,sdfExponent:9,textureWidth:2048},E=new a.Color;function T(){return(self.performance||Date).now()}let w=Object.create(null);function A({path:e,atlasIndex:t,sdfViewBox:r},{sdfGlyphSize:i,sdfCanvas:a,contextLost:s},o){if(s)return Promise.resolve({timing:-1});let{textureWidth:l,sdfExponent:h}=b,u=Math.max(r[2]-r[0],r[3]-r[1]),c=Math.floor(t/4),d=c%(l/i)*i,p=Math.floor(c/(l/i))*i;return function(e,t,r,i,a,s,o,l,h,u,c=!0){return c?_(e,t,r,i,a,s,o,l,h,u).then(null,c=>(n||(console.warn("WebGL SDF generation failed, falling back to JS",c),n=!0),S(e,t,r,i,a,s,o,l,h,u))):S(e,t,r,i,a,s,o,l,h,u)}(i,i,e,r,u,h,a,d,p,t%4,o)}function R(e){return i||(i="undefined"==typeof document?{}:document.createElement("a")),i.href=e,i.href}function C(e){if("function"!=typeof createImageBitmap){console.info("Safari<15: applying SDF canvas workaround");let{sdfCanvas:t,sdfTexture:r}=e,{width:n,height:i}=t,a=e.sdfCanvas.getContext("webgl"),s=r.image.data;s&&s.length===n*i*4||(s=new Uint8Array(n*i*4),r.image={width:n,height:i,data:s},r.flipY=!1,r.isDataTexture=!0),a.readPixels(0,0,n,i,a.RGBA,a.UNSIGNED_BYTE,s)}}let U=(0,o.defineWorkerModule)({name:"Typesetter",dependencies:[function(e,t){let r=1/0,n=/[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,i="[^\\S\\u00A0]",a=RegExp(`${i}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`);function s({text:s="",font:c,lang:d,sdfGlyphSize:p=64,fontSize:f=400,fontWeight:m=1,fontStyle:g="normal",letterSpacing:v=0,lineHeight:_="normal",maxWidth:x=r,direction:y,textAlign:S="left",textIndent:M=0,whiteSpace:b="normal",overflowWrap:E="normal",anchorX:T=0,anchorY:w=0,metricsOnly:A=!1,unicodeFontsURL:R,preResolvedFonts:C=null,includeCaretPositions:U=!1,chunkedBoundsSize:P=8192,colorRanges:L=null},D){let I=h(),O={fontLoad:0,typesetting:0};s.indexOf("\r")>-1&&(console.info("Typesetter: got text with \\r chars; normalizing to \\n"),s=s.replace(/\r\n/g,"\n").replace(/\r/g,"\n")),f=+f,v=+v,x=+x,_=_||"normal",M=+M,function({text:t,lang:r,fonts:n,style:i,weight:a,preResolvedFonts:s,unicodeFontsURL:o},l){let h=({chars:e,fonts:t})=>{let r,n;let i=[];for(let a=0;a<e.length;a++)e[a]!==n?(n=e[a],i.push(r={start:a,end:a,fontObj:t[e[a]]})):r.end=a;l(i)};s?h(s):e(t,h,{lang:r,fonts:n,style:i,weight:a,unicodeFontsURL:o})}({text:s,lang:d,style:g,weight:m,fonts:"string"==typeof c?[{src:c}]:c,unicodeFontsURL:R,preResolvedFonts:C},e=>{O.fontLoad=h()-I;let c=isFinite(x),d=null,p=null,m=null,g=null,R=null,C=null,N=null,F=null,B=0,z=0,k="nowrap"!==b,G=new Map,V=h(),H=M,W=0,j=new u,X=[j];e.forEach(e=>{let t,r;let{fontObj:o}=e,{ascender:l,descender:h,unitsPerEm:d,lineGap:p,capHeight:m,xHeight:g}=o,y=G.get(o);if(!y){let e=f/d,t="normal"===_?(l-h+p)*e:_*f,r=(t-(l-h)*e)/2,n=Math.min(t,(l-h)*e),i=(l+h)/2*e+n/2;y={index:G.size,src:o.src,fontObj:o,fontSizeMult:e,unitsPerEm:d,ascender:l*e,descender:h*e,capHeight:m*e,xHeight:g*e,lineHeight:t,baseline:-r-l*e,caretTop:(l+h)/2*e+n/2,caretBottom:i-n},G.set(o,y)}let{fontSizeMult:S}=y,b=s.slice(e.start,e.end+1);o.forEachGlyph(b,f,v,(o,l,h,d)=>{let p;l+=W,d+=e.start,t=l,r=o;let m=s.charAt(d),g=o.advanceWidth*S,_=j.count;if("isEmpty"in o||(o.isWhitespace=!!m&&new RegExp(i).test(m),o.canBreakAfter=!!m&&a.test(m),o.isEmpty=o.xMin===o.xMax||o.yMin===o.yMax||n.test(m)),!o.isWhitespace&&!o.isEmpty&&z++,k&&c&&!o.isWhitespace&&l+g+H>x&&_){if(j.glyphAt(_-1).glyphObj.canBreakAfter)p=new u,H=-l;else for(let e=_;e--;){if(0===e&&"break-word"===E){p=new u,H=-l;break}if(j.glyphAt(e).glyphObj.canBreakAfter){let t=(p=j.splitAt(e+1)).glyphAt(0).x;H-=t;for(let e=p.count;e--;)p.glyphAt(e).x-=t;break}}p&&(j.isSoftWrapped=!0,j=p,X.push(j),B=x)}let b=j.glyphAt(j.count);b.glyphObj=o,b.x=l+H,b.y=h,b.width=g,b.charIndex=d,b.fontData=y,"\n"===m&&(j=new u,X.push(j),H=-(l+g+v*f)+M)}),W=t+r.advanceWidth*S+v*f});let q=0;X.forEach(e=>{let t=!0;for(let r=e.count;r--;){let n=e.glyphAt(r);t&&!n.glyphObj.isWhitespace&&(e.width=n.x+n.width,e.width>B&&(B=e.width),t=!1);let{lineHeight:i,capHeight:a,xHeight:s,baseline:o}=n.fontData;i>e.lineHeight&&(e.lineHeight=i);let l=o-e.baseline;l<0&&(e.baseline+=l,e.cap+=l,e.ex+=l),e.cap=Math.max(e.cap,e.baseline+a),e.ex=Math.max(e.ex,e.baseline+s)}e.baseline-=q,e.cap-=q,e.ex-=q,q+=e.lineHeight});let Y=0,Z=0;if(T&&("number"==typeof T?Y=-T:"string"==typeof T&&(Y=-B*("left"===T?0:"center"===T?.5:"right"===T?1:o(T)))),w&&("number"==typeof w?Z=-w:"string"==typeof w&&(Z="top"===w?0:"top-baseline"===w?-X[0].baseline:"top-cap"===w?-X[0].cap:"top-ex"===w?-X[0].ex:"middle"===w?q/2:"bottom"===w?q:"bottom-baseline"===w?X[X.length-1].baseline:o(w)*q)),!A){let e,n;let i=t.getEmbeddingLevels(s,y);d=new Uint16Array(z),p=new Uint8Array(z),m=new Float32Array(2*z),g={},N=[r,r,-r,-r],F=[],U&&(C=new Float32Array(4*s.length)),L&&(R=new Uint8Array(3*z));let a=0,o=-1,h=-1;if(X.forEach((u,c)=>{let{count:f,width:v}=u;if(f>0){let c,_=0;for(let e=f;e--&&u.glyphAt(e).glyphObj.isWhitespace;)_++;let x=0,y=0;if("center"===S)x=(B-v)/2;else if("right"===S)x=B-v;else if("justify"===S&&u.isSoftWrapped){let e=0;for(let t=f-_;t--;)u.glyphAt(t).glyphObj.isWhitespace&&e++;y=(B-v)/e}if(y||x){let e=0;for(let t=0;t<f;t++){let r=u.glyphAt(t),n=r.glyphObj;r.x+=x+e,0!==y&&n.isWhitespace&&t<f-_&&(e+=y,r.width+=y)}}let M=t.getReorderSegments(s,i,u.glyphAt(0).charIndex,u.glyphAt(u.count-1).charIndex);for(let e=0;e<M.length;e++){let[t,r]=M[e],n=1/0,i=-1/0;for(let e=0;e<f;e++)if(u.glyphAt(e).charIndex>=t){let t=e,a=e;for(;a<f;a++){let e=u.glyphAt(a);if(e.charIndex>r)break;a<f-_&&(n=Math.min(n,e.x),i=Math.max(i,e.x+e.width))}for(let e=t;e<a;e++){let t=u.glyphAt(e);t.x=i-(t.x+t.width-n)}break}}let b=e=>c=e;for(let v=0;v<f;v++){let f=u.glyphAt(v),_=(c=f.glyphObj).index,x=1&i.levels[f.charIndex];if(x){let e=t.getMirroredCharacter(s[f.charIndex]);e&&f.fontData.fontObj.forEachGlyph(e,0,0,b)}if(U){let{charIndex:e,fontData:t}=f,r=f.x+Y,n=f.x+f.width+Y;C[4*e]=x?n:r,C[4*e+1]=x?r:n,C[4*e+2]=u.baseline+t.caretBottom+Z,C[4*e+3]=u.baseline+t.caretTop+Z;let i=e-o;i>1&&l(C,o,i),o=e}if(L){let{charIndex:e}=f;for(;e>h;)h++,L.hasOwnProperty(h)&&(n=L[h])}if(!c.isWhitespace&&!c.isEmpty){let t=a++,{fontSizeMult:i,src:s,index:o}=f.fontData,l=g[s]||(g[s]={});l[_]||(l[_]={path:c.path,pathBounds:[c.xMin,c.yMin,c.xMax,c.yMax]});let h=f.x+Y,v=f.y+u.baseline+Z;m[2*t]=h,m[2*t+1]=v;let x=h+c.xMin*i,y=v+c.yMin*i,S=h+c.xMax*i,M=v+c.yMax*i;x<N[0]&&(N[0]=x),y<N[1]&&(N[1]=y),S>N[2]&&(N[2]=S),M>N[3]&&(N[3]=M),t%P==0&&(e={start:t,end:t,rect:[r,r,-r,-r]},F.push(e)),e.end++;let b=e.rect;if(x<b[0]&&(b[0]=x),y<b[1]&&(b[1]=y),S>b[2]&&(b[2]=S),M>b[3]&&(b[3]=M),d[t]=_,p[t]=o,L){let e=3*t;R[e]=n>>16&255,R[e+1]=n>>8&255,R[e+2]=255&n}}}}}),C){let e=s.length-o;e>1&&l(C,o,e)}}let J=[];G.forEach(({index:e,src:t,unitsPerEm:r,ascender:n,descender:i,lineHeight:a,capHeight:s,xHeight:o})=>{J[e]={src:t,unitsPerEm:r,ascender:n,descender:i,lineHeight:a,capHeight:s,xHeight:o}}),O.typesetting=h()-V,D({glyphIds:d,glyphFontIndices:p,glyphPositions:m,glyphData:g,fontData:J,caretPositions:C,glyphColors:R,chunkedBounds:F,fontSize:f,topBaseline:Z+X[0].baseline,blockBounds:[Y,Z-q,Y+B,Z],visibleBounds:N,timings:O})})}function o(e){let t=e.match(/^([\d.]+)%$/),r=t?parseFloat(t[1]):NaN;return isNaN(r)?0:r/100}function l(e,t,r){let n=e[4*t],i=e[4*t+1],a=e[4*t+2],s=e[4*t+3],o=(i-n)/r;for(let i=0;i<r;i++){let r=(t+i)*4;e[r]=n+o*i,e[r+1]=n+o*(i+1),e[r+2]=a,e[r+3]=s}}function h(){return(self.performance||Date).now()}function u(){this.data=[]}let c=["glyphObj","x","y","width","charIndex","fontData"];return u.prototype={width:0,lineHeight:0,baseline:0,cap:0,ex:0,isSoftWrapped:!1,get count(){return Math.ceil(this.data.length/c.length)},glyphAt(e){let t=u.flyweight;return t.data=this.data,t.index=e,t},splitAt(e){let t=new u;return t.data=this.data.splice(e*c.length),t}},u.flyweight=c.reduce((e,t,r,n)=>(Object.defineProperty(e,t,{get(){return this.data[this.index*c.length+r]},set(e){this.data[this.index*c.length+r]=e}}),e),{data:null,index:0}),{typeset:s,measure:function(e,t){s({...e,metricsOnly:!0},e=>{let[r,n,i,a]=e.blockBounds;t({width:i-r,height:a-n})})}}},d,h.default],init:(e,t,r)=>e(t,r())}),P=(0,o.defineWorkerModule)({name:"Typesetter",dependencies:[U],init:e=>function(t){return new Promise(r=>{e.typeset(t,r)})},getTransferables(e){let t=[];for(let r in e)e[r]&&e[r].buffer&&t.push(e[r].buffer);return t}}),L={},D="aTroikaGlyphIndex";class I extends a.InstancedBufferGeometry{constructor(){super(),this.detail=1,this.curveRadius=0,this.groups=[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}],this.boundingSphere=new a.Sphere,this.boundingBox=new a.Box3}computeBoundingSphere(){}computeBoundingBox(){}setSide(e){let t=this.getIndex().count;this.setDrawRange(e===a.BackSide?t/2:0,e===a.DoubleSide?t:t/2)}set detail(e){if(e!==this._detail){this._detail=e,("number"!=typeof e||e<1)&&(e=1);let t=function(e){let t=L[e];if(!t){let r=new a.PlaneGeometry(1,1,e,e),n=r.clone(),i=r.attributes,s=n.attributes,o=new a.BufferGeometry,l=i.uv.count;for(let e=0;e<l;e++)s.position.array[3*e]*=-1,s.normal.array[3*e+2]*=-1;["position","normal","uv"].forEach(e=>{o.setAttribute(e,new a.Float32BufferAttribute([...i[e].array,...s[e].array],i[e].itemSize))}),o.setIndex([...r.index.array,...n.index.array.map(e=>e+l)]),o.translate(.5,.5,0),t=L[e]=o}return t}(e);["position","normal","uv"].forEach(e=>{this.attributes[e]=t.attributes[e].clone()}),this.setIndex(t.getIndex().clone())}}get detail(){return this._detail}set curveRadius(e){e!==this._curveRadius&&(this._curveRadius=e,this._updateBounds())}get curveRadius(){return this._curveRadius}updateGlyphs(e,t,r,n,i){O(this,"aTroikaGlyphBounds",e,4),O(this,D,t,1),O(this,"aTroikaGlyphColor",i,3),this._blockBounds=r,this._chunkedBounds=n,this.instanceCount=t.length,this._updateBounds()}_updateBounds(){let e=this._blockBounds;if(e){let{curveRadius:t,boundingBox:r}=this;if(t){let{PI:n,floor:i,min:a,max:s,sin:o,cos:l}=Math,h=n/2,u=2*n,c=Math.abs(t),d=e[0]/c,p=e[2]/c,f=i((d+h)/u)!==i((p+h)/u)?-c:a(o(d)*c,o(p)*c),m=i((d-h)/u)!==i((p-h)/u)?c:s(o(d)*c,o(p)*c),g=i((d+n)/u)!==i((p+n)/u)?2*c:s(c-l(d)*c,c-l(p)*c);r.min.set(f,e[1],t<0?-g:0),r.max.set(m,e[3],t<0?0:g)}else r.min.set(e[0],e[1],0),r.max.set(e[2],e[3],0);r.getBoundingSphere(this.boundingSphere)}}applyClipRect(e){let t=this.getAttribute(D).count,r=this._chunkedBounds;if(r)for(let n=r.length;n--;){t=r[n].end;let i=r[n].rect;if(i[1]<e.w&&i[3]>e.y&&i[0]<e.z&&i[2]>e.x)break}this.instanceCount=t}}function O(e,t,r,n){let i=e.getAttribute(t);r?i&&i.array.length===r.length?(i.array.set(r),i.needsUpdate=!0):(e.setAttribute(t,new a.InstancedBufferAttribute(r,n)),delete e._maxInstanceCount,e.dispose()):i&&e.deleteAttribute(t)}let N=`
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaDistanceOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,F=`
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaDistanceOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaDistanceOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,B=`
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaDistanceOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaOutlineOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,z=`
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaDistanceOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`,k=new a.MeshBasicMaterial({color:16777215,side:a.DoubleSide,transparent:!0}),G=new a.Matrix4,V=new a.Vector3,H=new a.Vector3,W=[],j=new a.Vector3,X="+x+y";function q(e){return Array.isArray(e)?e[0]:e}let Y=()=>{let e=new a.Mesh(new a.PlaneGeometry(1,1),k);return Y=()=>e,e},Z=()=>{let e=new a.Mesh(new a.PlaneGeometry(1,1,32,1),k);return Z=()=>e,e},J={type:"syncstart"},K={type:"synccomplete"},$=["font","fontSize","fontStyle","fontWeight","lang","letterSpacing","lineHeight","maxWidth","overflowWrap","text","direction","textAlign","textIndent","whiteSpace","anchorX","anchorY","colorRanges","sdfGlyphSize"],Q=$.concat("material","color","depthOffset","clipRect","curveRadius","orientation","glyphGeometryDetail");class ee extends a.Mesh{constructor(){super(new I,null),this.text="",this.anchorX=0,this.anchorY=0,this.curveRadius=0,this.direction="auto",this.font=null,this.unicodeFontsURL=null,this.fontSize=.1,this.fontWeight="normal",this.fontStyle="normal",this.lang=null,this.letterSpacing=0,this.lineHeight="normal",this.maxWidth=1/0,this.overflowWrap="normal",this.textAlign="left",this.textIndent=0,this.whiteSpace="normal",this.material=null,this.color=null,this.colorRanges=null,this.outlineWidth=0,this.outlineColor=0,this.outlineOpacity=1,this.outlineBlur=0,this.outlineOffsetX=0,this.outlineOffsetY=0,this.strokeWidth=0,this.strokeColor=8421504,this.strokeOpacity=1,this.fillOpacity=1,this.depthOffset=0,this.clipRect=null,this.orientation=X,this.glyphGeometryDetail=1,this.sdfGlyphSize=null,this.gpuAccelerateSDF=!0,this.debugSDF=!1}sync(e){this._needsSync&&(this._needsSync=!1,this._isSyncing?(this._queuedSyncs||(this._queuedSyncs=[])).push(e):(this._isSyncing=!0,this.dispatchEvent(J),function(e,t){e=function(e,t){for(let r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e}({},e);let r=T(),{defaultFontURL:n}=b,i=[];if(n&&i.push({label:"default",src:R(n)}),e.font&&i.push({label:"user",src:R(e.font)}),e.font=i,e.text=""+e.text,e.sdfGlyphSize=e.sdfGlyphSize||b.sdfGlyphSize,e.unicodeFontsURL=e.unicodeFontsURL||b.unicodeFontsURL,null!=e.colorRanges){let t={};for(let r in e.colorRanges)if(e.colorRanges.hasOwnProperty(r)){let n=e.colorRanges[r];"number"!=typeof n&&(n=E.set(n).getHex()),t[r]=n}e.colorRanges=t}Object.freeze(e);let{textureWidth:s,sdfExponent:o}=b,{sdfGlyphSize:l}=e,h=s/l*4,u=w[l];if(!u){let e=document.createElement("canvas");e.width=s,e.height=256*l/h,(u=w[l]={glyphCount:0,sdfGlyphSize:l,sdfCanvas:e,sdfTexture:new a.Texture(e,void 0,void 0,void 0,a.LinearFilter,a.LinearFilter),contextLost:!1,glyphsByFont:new Map}).sdfTexture.generateMipmaps=!1,function(e){let t=e.sdfCanvas;t.addEventListener("webglcontextlost",t=>{console.log("Context Lost",t),t.preventDefault(),e.contextLost=!0}),t.addEventListener("webglcontextrestored",t=>{console.log("Context Restored",t),e.contextLost=!1;let r=[];e.glyphsByFont.forEach(t=>{t.forEach(t=>{r.push(A(t,e,!0))})}),Promise.all(r).then(()=>{C(e),e.sdfTexture.needsUpdate=!0})})}(u)}let{sdfTexture:c,sdfCanvas:d}=u;P(e).then(n=>{let{glyphIds:i,glyphFontIndices:a,fontData:p,glyphPositions:f,fontSize:m,timings:g}=n,v=[],_=new Float32Array(4*i.length),x=0,y=0,S=T(),E=p.map(e=>{let t=u.glyphsByFont.get(e.src);return t||u.glyphsByFont.set(e.src,t=new Map),t});i.forEach((e,t)=>{let r=a[t],{src:s,unitsPerEm:o}=p[r],h=E[r].get(e);if(!h){let{path:t,pathBounds:i}=n.glyphData[s][e],a=Math.max(i[2]-i[0],i[3]-i[1])/l*(b.sdfMargin*l+.5),o=u.glyphCount++,c=[i[0]-a,i[1]-a,i[2]+a,i[3]+a];E[r].set(e,h={path:t,atlasIndex:o,sdfViewBox:c}),v.push(h)}let{sdfViewBox:c}=h,d=f[y++],g=f[y++],S=m/o;_[x++]=d+c[0]*S,_[x++]=g+c[1]*S,_[x++]=d+c[2]*S,_[x++]=g+c[3]*S,i[t]=h.atlasIndex}),g.quads=(g.quads||0)+(T()-S);let w=T();g.sdf={};let R=d.height,U=Math.pow(2,Math.ceil(Math.log2(Math.ceil(u.glyphCount/h)*l)));U>R&&(console.info(`Increasing SDF texture size ${R}->${U}`),M(d,s,U),c.dispose()),Promise.all(v.map(t=>A(t,u,e.gpuAccelerateSDF).then(({timing:e})=>{g.sdf[t.atlasIndex]=e}))).then(()=>{v.length&&!u.contextLost&&(C(u),c.needsUpdate=!0),g.sdfTotal=T()-w,g.total=T()-r,t(Object.freeze({parameters:e,sdfTexture:c,sdfGlyphSize:l,sdfExponent:o,glyphBounds:_,glyphAtlasIndices:i,glyphColors:n.glyphColors,caretPositions:n.caretPositions,chunkedBounds:n.chunkedBounds,ascender:n.ascender,descender:n.descender,lineHeight:n.lineHeight,capHeight:n.capHeight,xHeight:n.xHeight,topBaseline:n.topBaseline,blockBounds:n.blockBounds,visibleBounds:n.visibleBounds,timings:n.timings}))})}),Promise.resolve().then(()=>{!u.contextLost&&(d._warm||(f.webgl.isSupported(d),d._warm=!0))})}({text:this.text,font:this.font,lang:this.lang,fontSize:this.fontSize||.1,fontWeight:this.fontWeight||"normal",fontStyle:this.fontStyle||"normal",letterSpacing:this.letterSpacing||0,lineHeight:this.lineHeight||"normal",maxWidth:this.maxWidth,direction:this.direction||"auto",textAlign:this.textAlign,textIndent:this.textIndent,whiteSpace:this.whiteSpace,overflowWrap:this.overflowWrap,anchorX:this.anchorX,anchorY:this.anchorY,colorRanges:this.colorRanges,includeCaretPositions:!0,sdfGlyphSize:this.sdfGlyphSize,gpuAccelerateSDF:this.gpuAccelerateSDF,unicodeFontsURL:this.unicodeFontsURL},t=>{this._isSyncing=!1,this._textRenderInfo=t,this.geometry.updateGlyphs(t.glyphBounds,t.glyphAtlasIndices,t.blockBounds,t.chunkedBounds,t.glyphColors);let r=this._queuedSyncs;r&&(this._queuedSyncs=null,this._needsSync=!0,this.sync(()=>{r.forEach(e=>e&&e())})),this.dispatchEvent(K),e&&e()})))}onBeforeRender(e,t,r,n,i,s){this.sync(),i.isTroikaTextMaterial&&this._prepareForRender(i),i._hadOwnSide=i.hasOwnProperty("side"),this.geometry.setSide(i._actualSide=i.side),i.side=a.FrontSide}onAfterRender(e,t,r,n,i,a){i._hadOwnSide?i.side=i._actualSide:delete i.side}dispose(){this.geometry.dispose()}get textRenderInfo(){return this._textRenderInfo||null}get material(){let e=this._derivedMaterial,t=this._baseMaterial||this._defaultMaterial||(this._defaultMaterial=k.clone());if(e&&e.baseMaterial===t||(e=this._derivedMaterial=function(e){let t=(0,u.createDerivedMaterial)(e,{chained:!0,extensions:{derivatives:!0},uniforms:{uTroikaSDFTexture:{value:null},uTroikaSDFTextureSize:{value:new a.Vector2},uTroikaSDFGlyphSize:{value:0},uTroikaSDFExponent:{value:0},uTroikaTotalBounds:{value:new a.Vector4(0,0,0,0)},uTroikaClipRect:{value:new a.Vector4(0,0,0,0)},uTroikaDistanceOffset:{value:0},uTroikaOutlineOpacity:{value:0},uTroikaFillOpacity:{value:1},uTroikaPositionOffset:{value:new a.Vector2},uTroikaCurveRadius:{value:0},uTroikaBlurRadius:{value:0},uTroikaStrokeWidth:{value:0},uTroikaStrokeColor:{value:new a.Color},uTroikaStrokeOpacity:{value:1},uTroikaOrient:{value:new a.Matrix3},uTroikaUseGlyphColors:{value:!0},uTroikaSDFDebug:{value:!1}},vertexDefs:N,vertexTransform:F,fragmentDefs:B,fragmentColorTransform:z,customRewriter({vertexShader:e,fragmentShader:t}){let r=/\buniform\s+vec3\s+diffuse\b/;return r.test(t)&&(t=t.replace(r,"varying vec3 vTroikaGlyphColor").replace(/\bdiffuse\b/g,"vTroikaGlyphColor"),r.test(e)||(e=e.replace(u.voidMainRegExp,"uniform vec3 diffuse;\n$&\nvTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;\n"))),{vertexShader:e,fragmentShader:t}}});return t.transparent=!0,Object.defineProperties(t,{isTroikaTextMaterial:{value:!0},shadowSide:{get(){return this.side},set(){}}}),t}(t),t.addEventListener("dispose",function r(){t.removeEventListener("dispose",r),e.dispose()})),!this.outlineWidth&&!this.outlineBlur&&!this.outlineOffsetX&&!this.outlineOffsetY)return e;{let t=e._outlineMtl;return t||((t=e._outlineMtl=Object.create(e,{id:{value:e.id+.1}})).isTextOutlineMaterial=!0,t.depthWrite=!1,t.map=null,e.addEventListener("dispose",function r(){e.removeEventListener("dispose",r),t.dispose()})),[t,e]}}set material(e){e&&e.isTroikaTextMaterial?(this._derivedMaterial=e,this._baseMaterial=e.baseMaterial):this._baseMaterial=e}get glyphGeometryDetail(){return this.geometry.detail}set glyphGeometryDetail(e){this.geometry.detail=e}get curveRadius(){return this.geometry.curveRadius}set curveRadius(e){this.geometry.curveRadius=e}get customDepthMaterial(){return q(this.material).getDepthMaterial()}get customDistanceMaterial(){return q(this.material).getDistanceMaterial()}_prepareForRender(e){let t=e.isTextOutlineMaterial,r=e.uniforms,n=this.textRenderInfo;if(n){let e,i,a;let{sdfTexture:s,blockBounds:o}=n;r.uTroikaSDFTexture.value=s,r.uTroikaSDFTextureSize.value.set(s.image.width,s.image.height),r.uTroikaSDFGlyphSize.value=n.sdfGlyphSize,r.uTroikaSDFExponent.value=n.sdfExponent,r.uTroikaTotalBounds.value.fromArray(o),r.uTroikaUseGlyphColors.value=!t&&!!n.glyphColors;let l=0,h=0,u=0,c=0,d=0;if(t){let{outlineWidth:t,outlineOffsetX:r,outlineOffsetY:n,outlineBlur:i,outlineOpacity:a}=this;l=this._parsePercent(t)||0,h=Math.max(0,this._parsePercent(i)||0),e=a,c=this._parsePercent(r)||0,d=this._parsePercent(n)||0}else(u=Math.max(0,this._parsePercent(this.strokeWidth)||0))&&(a=this.strokeColor,r.uTroikaStrokeColor.value.set(null==a?8421504:a),null==(i=this.strokeOpacity)&&(i=1)),e=this.fillOpacity;r.uTroikaDistanceOffset.value=l,r.uTroikaPositionOffset.value.set(c,d),r.uTroikaBlurRadius.value=h,r.uTroikaStrokeWidth.value=u,r.uTroikaStrokeOpacity.value=i,r.uTroikaFillOpacity.value=null==e?1:e,r.uTroikaCurveRadius.value=this.curveRadius||0;let p=this.clipRect;if(p&&Array.isArray(p)&&4===p.length)r.uTroikaClipRect.value.fromArray(p);else{let e=100*(this.fontSize||.1);r.uTroikaClipRect.value.set(o[0]-e,o[1]-e,o[2]+e,o[3]+e)}this.geometry.applyClipRect(r.uTroikaClipRect.value)}r.uTroikaSDFDebug.value=!!this.debugSDF,e.polygonOffset=!!this.depthOffset,e.polygonOffsetFactor=e.polygonOffsetUnits=this.depthOffset||0;let i=t?this.outlineColor||0:this.color;if(null==i)delete e.color;else{let t=e.hasOwnProperty("color")?e.color:e.color=new a.Color;(i!==t._input||"object"==typeof i)&&t.set(t._input=i)}let s=this.orientation||X;if(s!==e._orientation){let t=r.uTroikaOrient.value,n=(s=s.replace(/[^-+xyz]/g,""))!==X&&s.match(/^([-+])([xyz])([-+])([xyz])$/);if(n){let[,e,r,i,a]=n;V.set(0,0,0)[r]="-"===e?1:-1,H.set(0,0,0)[a]="-"===i?-1:1,G.lookAt(j,V.cross(H),H),t.setFromMatrix4(G)}else t.identity();e._orientation=s}}_parsePercent(e){if("string"==typeof e){let t=e.match(/^(-?[\d.]+)%$/),r=t?parseFloat(t[1]):NaN;e=(isNaN(r)?0:r/100)*this.fontSize}return e}localPositionToTextCoords(e,t=new a.Vector2){t.copy(e);let r=this.curveRadius;return r&&(t.x=Math.atan2(e.x,Math.abs(r)-Math.abs(e.z))*Math.abs(r)),t}worldPositionToTextCoords(e,t=new a.Vector2){return V.copy(e),this.localPositionToTextCoords(this.worldToLocal(V),t)}raycast(e,t){let{textRenderInfo:r,curveRadius:n}=this;if(r){let i=r.blockBounds,a=n?Z():Y(),s=a.geometry,{position:o,uv:l}=s.attributes;for(let e=0;e<l.count;e++){let t=i[0]+l.getX(e)*(i[2]-i[0]),r=i[1]+l.getY(e)*(i[3]-i[1]),a=0;n&&(a=n-Math.cos(t/n)*n,t=Math.sin(t/n)*n),o.setXYZ(e,t,r,a)}s.boundingSphere=this.geometry.boundingSphere,s.boundingBox=this.geometry.boundingBox,a.matrixWorld=this.matrixWorld,a.material.side=this.material.side,W.length=0,a.raycast(e,W);for(let e=0;e<W.length;e++)W[e].object=this,t.push(W[e])}}copy(e){let t=this.geometry;return super.copy(e),this.geometry=t,Q.forEach(t=>{this[t]=e[t]}),this}clone(){return new this.constructor().copy(this)}}$.forEach(e=>{let t="_private_"+e;Object.defineProperty(ee.prototype,e,{get(){return this[t]},set(e){e!==this[t]&&(this[t]=e,this._needsSync=!0)}})}),new WeakMap,new WeakMap}),o("8ue7g",function(t,r){function n(){var e=Object.create(null);function t(e,t){var r=void 0;self.troikaDefine=function(e){return r=e};var n=URL.createObjectURL(new Blob(["/** "+e.replace(/\*/g,"")+" **/\n\ntroikaDefine(\n"+t+"\n)"],{type:"application/javascript"}));try{importScripts(n)}catch(e){console.error(e)}return URL.revokeObjectURL(n),delete self.troikaDefine,r}self.addEventListener("message",function(r){var n=r.data,i=n.messageId,a=n.action,s=n.data;try{"registerModule"===a&&function r(n,i){var a=n.id,s=n.name,o=n.dependencies;void 0===o&&(o=[]);var l=n.init;void 0===l&&(l=function(){});var h=n.getTransferables;if(void 0===h&&(h=null),!e[a])try{o=o.map(function(t){return t&&t.isWorkerModule&&(r(t,function(e){if(e instanceof Error)throw e}),t=e[t.id].value),t}),l=t("<"+s+">.init",l),h&&(h=t("<"+s+">.getTransferables",h));var u=null;"function"==typeof l?u=l.apply(void 0,o):console.error("worker module init function failed to rehydrate"),e[a]={id:a,value:u,getTransferables:h},i(u)}catch(e){e&&e.noLog||console.error(e),i(e)}}(s,function(e){e instanceof Error?postMessage({messageId:i,success:!1,error:e.message}):postMessage({messageId:i,success:!0,result:{isCallable:"function"==typeof e}})}),"callModule"===a&&function(t,r){var n,i=t.id,a=t.args;e[i]&&"function"==typeof e[i].value||r(Error("Worker module "+i+": not found or its 'init' did not return a function"));try{var s=(n=e[i]).value.apply(n,a);s&&"function"==typeof s.then?s.then(o,function(e){return r(e instanceof Error?e:Error(""+e))}):o(s)}catch(e){r(e)}function o(t){try{var n=e[i].getTransferables&&e[i].getTransferables(t);n&&Array.isArray(n)&&n.length||(n=void 0),r(t,n)}catch(e){console.error(e),r(e)}}}(s,function(e,t){e instanceof Error?postMessage({messageId:i,success:!1,error:e.message}):postMessage({messageId:i,success:!0,result:e},t||void 0)})}catch(e){postMessage({messageId:i,success:!1,error:e.stack})}})}e(t.exports,"defineWorkerModule",()=>function e(t){if((!t||"function"!=typeof t.init)&&!l)throw Error("requires `options.init` function");var r,n=t.dependencies,s=t.init,o=t.getTransferables,h=t.workerId;if(!i())return(r=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];return r._getInitResult().then(function(t){if("function"==typeof t)return t.apply(void 0,e);throw Error("Worker module function was called but `init` did not return a callable function")})})._getInitResult=function(){var e=t.dependencies,n=t.init,i=Promise.all(e=Array.isArray(e)?e.map(function(e){return e&&e._getInitResult?e._getInitResult():e}):[]).then(function(e){return n.apply(null,e)});return r._getInitResult=function(){return i},i},r;null==h&&(h="#default");var c="workerModule"+ ++a,d=t.name||c,m=null;function g(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];if(!m){m=f(h,"registerModule",g.workerModuleData);var r=function(){m=null,u[h].delete(r)};(u[h]||(u[h]=new Set)).add(r)}return m.then(function(t){if(t.isCallable)return f(h,"callModule",{id:c,args:e});throw Error("Worker module function was called but `init` did not return a callable function")})}return n=n&&n.map(function(t){return"function"!=typeof t||t.workerModuleData||(l=!0,t=e({workerId:h,name:"<"+d+"> function dependency: "+t.name,init:"function(){return (\n"+p(t)+"\n)}"}),l=!1),t&&t.workerModuleData&&(t=t.workerModuleData),t}),g.workerModuleData={isWorkerModule:!0,id:c,name:d,dependencies:n,init:p(s),getTransferables:o&&p(o)},g}),e(t.exports,"terminateWorker",()=>d),s("hPtJY");var i=function(){var e=!1;if("undefined"!=typeof window&&void 0!==window.document)try{new Worker(URL.createObjectURL(new Blob([""],{type:"application/javascript"}))).terminate(),e=!0}catch(e){console.log("Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: ["+e.message+"]")}return i=function(){return e},e},a=0,o=0,l=!1,h=Object.create(null),u=Object.create(null),c=Object.create(null);function d(e){u[e]&&u[e].forEach(function(e){e()}),h[e]&&(h[e].terminate(),delete h[e])}function p(e){var t=e.toString();return!/^function/.test(t)&&/^\w+\s*\(/.test(t)&&(t="function "+t),t}function f(e,t,r){return new Promise(function(i,a){var s=++o;c[s]=function(e){e.success?i(e.result):a(Error("Error in worker "+t+" call: "+e.error))},(function(e){var t=h[e];if(!t){var r=p(n);(t=h[e]=new Worker(URL.createObjectURL(new Blob(["/** Worker Module Bootstrap: "+e.replace(/\*/g,"")+" **/\n\n;("+r+")()"],{type:"application/javascript"})))).onmessage=function(e){var t=e.data,r=t.messageId,n=c[r];if(!n)throw Error("WorkerModule response with empty or unknown messageId");delete c[r],n(t)}}return t})(e).postMessage({messageId:s,action:t,data:r})})}}),o("hPtJY",function(e,t){var r,n,i,a=e.exports={};function s(){throw Error("setTimeout has not been defined")}function o(){throw Error("clearTimeout has not been defined")}function l(e){if(r===setTimeout)return setTimeout(e,0);if((r===s||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:s}catch(e){r=s}try{n="function"==typeof clearTimeout?clearTimeout:o}catch(e){n=o}}();var h=[],u=!1,c=-1;function d(){u&&i&&(u=!1,i.length?h=i.concat(h):c=-1,h.length&&p())}function p(){if(!u){var e=l(d);u=!0;for(var t=h.length;t;){for(i=h,h=[];++c<t;)i&&i[c].run();c=-1,t=h.length}i=null,u=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===o||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];h.push(new f(e,t)),1!==h.length||u||l(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(e){return[]},a.binding=function(e){throw Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw Error("process.chdir is not supported")},a.umask=function(){return 0}}),o("ix9ca",function(t,r){e(t.exports,"default",()=>n);function n(){return function(e){function t(e,t){for(var r,n,i,a,s,o=/([MLQCZ])([^MLQCZ]*)/g;r=o.exec(e);){var l=r[2].replace(/^\s*|\s*$/g,"").split(/[,\s]+/).map(function(e){return parseFloat(e)});switch(r[1]){case"M":a=n=l[0],s=i=l[1];break;case"L":(l[0]!==a||l[1]!==s)&&t("L",a,s,a=l[0],s=l[1]);break;case"Q":t("Q",a,s,a=l[2],s=l[3],l[0],l[1]);break;case"C":t("C",a,s,a=l[4],s=l[5],l[0],l[1],l[2],l[3]);break;case"Z":(a!==n||s!==i)&&t("L",a,s,n,i)}}}function r(e,r,n){void 0===n&&(n=16);var i={x:0,y:0};t(e,function(e,t,a,s,o,l,h,u,c){switch(e){case"L":r(t,a,s,o);break;case"Q":for(var d=t,p=a,f=1;f<n;f++)(function(e,t,r,n,i,a,s,o){var l=1-s;o.x=l*l*e+2*l*s*r+s*s*i,o.y=l*l*t+2*l*s*n+s*s*a})(t,a,l,h,s,o,f/(n-1),i),r(d,p,i.x,i.y),d=i.x,p=i.y;break;case"C":for(var m=t,g=a,v=1;v<n;v++)(function(e,t,r,n,i,a,s,o,l,h){var u=1-l;h.x=u*u*u*e+3*u*u*l*r+3*u*l*l*i+l*l*l*s,h.y=u*u*u*t+3*u*u*l*n+3*u*l*l*a+l*l*l*o})(t,a,l,h,u,c,s,o,v/(n-1),i),r(m,g,i.x,i.y),m=i.x,g=i.y}})}var n="precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}",i=new WeakMap,a={premultipliedAlpha:!1,preserveDrawingBuffer:!0,antialias:!1,depth:!1};function s(e,t){var r=e.getContext?e.getContext("webgl",a):e,n=i.get(r);if(!n){var s="undefined"!=typeof WebGL2RenderingContext&&r instanceof WebGL2RenderingContext,o={},l={},h={},u=-1,c=[];function d(e){var t=o[e];if(!t&&!(t=o[e]=r.getExtension(e)))throw Error(e+" not supported");return t}function p(e,t){var n=r.createShader(t);return r.shaderSource(n,e),r.compileShader(n),n}function f(){o={},l={},h={},u=-1,c.length=0}r.canvas.addEventListener("webglcontextlost",function(e){f(),e.preventDefault()},!1),i.set(r,n={gl:r,isWebGL2:s,getExtension:d,withProgram:function(e,t,n,i){if(!l[e]){var a={},o={},h=r.createProgram();r.attachShader(h,p(t,r.VERTEX_SHADER)),r.attachShader(h,p(n,r.FRAGMENT_SHADER)),r.linkProgram(h),l[e]={program:h,transaction:function(e){r.useProgram(h),e({setUniform:function(e,t){for(var n=[],i=arguments.length-2;i-- >0;)n[i]=arguments[i+2];var a=o[t]||(o[t]=r.getUniformLocation(h,t));r["uniform"+e].apply(r,[a].concat(n))},setAttribute:function(e,t,n,i,o){var l=a[e];l||(l=a[e]={buf:r.createBuffer(),loc:r.getAttribLocation(h,e),data:null}),r.bindBuffer(r.ARRAY_BUFFER,l.buf),r.vertexAttribPointer(l.loc,t,r.FLOAT,!1,0,0),r.enableVertexAttribArray(l.loc),s?r.vertexAttribDivisor(l.loc,i):d("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(l.loc,i),o!==l.data&&(r.bufferData(r.ARRAY_BUFFER,o,n),l.data=o)}})}}}l[e].transaction(i)},withTexture:function(e,t){u++;try{r.activeTexture(r.TEXTURE0+u);var n=h[e];n||(n=h[e]=r.createTexture(),r.bindTexture(r.TEXTURE_2D,n),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST)),r.bindTexture(r.TEXTURE_2D,n),t(n,u)}finally{u--}},withTextureFramebuffer:function(e,t,n){var i=r.createFramebuffer();c.push(i),r.bindFramebuffer(r.FRAMEBUFFER,i),r.activeTexture(r.TEXTURE0+t),r.bindTexture(r.TEXTURE_2D,e),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);try{n(i)}finally{r.deleteFramebuffer(i),r.bindFramebuffer(r.FRAMEBUFFER,c[--c.length-1]||null)}},handleContextLoss:f})}t(n)}function o(e,t,r,i,a,o,l,h){void 0===l&&(l=15),void 0===h&&(h=null),s(e,function(e){var s=e.gl,u=e.withProgram;(0,e.withTexture)("copy",function(e,c){s.texImage2D(s.TEXTURE_2D,0,s.RGBA,a,o,0,s.RGBA,s.UNSIGNED_BYTE,t),u("copy",n,"precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}",function(e){var t=e.setUniform;(0,e.setAttribute)("aUV",2,s.STATIC_DRAW,0,new Float32Array([0,0,2,0,0,2])),t("1i","image",c),s.bindFramebuffer(s.FRAMEBUFFER,h||null),s.disable(s.BLEND),s.colorMask(8&l,4&l,2&l,1&l),s.viewport(r,i,a,o),s.scissor(r,i,a,o),s.drawArrays(s.TRIANGLES,0,3)})})})}var l=Object.freeze({__proto__:null,withWebGLContext:s,renderImageData:o,resizeWebGLCanvasWithoutClearing:function(e,t,r){var n=e.width,i=e.height;s(e,function(a){var s=a.gl,l=new Uint8Array(n*i*4);s.readPixels(0,0,n,i,s.RGBA,s.UNSIGNED_BYTE,l),e.width=t,e.height=r,o(s,l,0,0,n,i)})}});function h(e,t,n,i,a,s){void 0===s&&(s=1);var o=new Uint8Array(e*t),l=i[2]-i[0],h=i[3]-i[1],u=[];r(n,function(e,t,r,n){u.push({x1:e,y1:t,x2:r,y2:n,minX:Math.min(e,r),minY:Math.min(t,n),maxX:Math.max(e,r),maxY:Math.max(t,n)})}),u.sort(function(e,t){return e.maxX-t.maxX});for(var c=0;c<e;c++)for(var d=0;d<t;d++){var p=function(e,t){for(var r=1/0,n=1/0,i=u.length;i--;){var a=u[i];if(a.maxX+n<=e)break;if(e+n>a.minX&&t-n<a.maxY&&t+n>a.minY){var s=function(e,t,r,n,i,a){var s=i-r,o=a-n,l=s*s+o*o,h=l?Math.max(0,Math.min(1,((e-r)*s+(t-n)*o)/l)):0,u=e-(r+h*s),c=t-(n+h*o);return u*u+c*c}(e,t,a.x1,a.y1,a.x2,a.y2);s<r&&(n=Math.sqrt(r=s))}}return function(e,t){for(var r=0,n=u.length;n--;){var i=u[n];if(i.maxX<=e)break;i.y1>t!=i.y2>t&&e<(i.x2-i.x1)*(t-i.y1)/(i.y2-i.y1)+i.x1&&(r+=i.y1<i.y2?1:-1)}return 0!==r}(e,t)&&(n=-n),n}(i[0]+l*(c+.5)/e,i[1]+h*(d+.5)/t),f=Math.pow(1-Math.abs(p)/a,s)/2;p<0&&(f=1-f),f=Math.max(0,Math.min(255,Math.round(255*f))),o[d*e+c]=f}return o}function u(e,t,r,n,i,a,s,o,l,h){void 0===a&&(a=1),void 0===o&&(o=0),void 0===l&&(l=0),void 0===h&&(h=0),c(e,t,r,n,i,a,s,null,o,l,h)}function c(e,t,r,n,i,a,s,l,u,c,d){void 0===a&&(a=1),void 0===u&&(u=0),void 0===c&&(c=0),void 0===d&&(d=0);for(var p=h(e,t,r,n,i,a),f=new Uint8Array(4*p.length),m=0;m<p.length;m++)f[4*m+d]=p[m];o(s,f,u,c,e,t,1<<3-d,l)}var d=Object.freeze({__proto__:null,generate:h,generateIntoCanvas:u,generateIntoFramebuffer:c}),p=new Float32Array([0,0,2,0,0,2]),f=null,m=!1,g={},v=new WeakMap;function _(e){if(!m&&!M(e))throw Error("WebGL generation not supported")}function x(e,t,r,n,i,a,o){if(void 0===a&&(a=1),void 0===o&&(o=null),!o&&!(o=f)){var l="function"==typeof OffscreenCanvas?new OffscreenCanvas(1,1):"undefined"!=typeof document?document.createElement("canvas"):null;if(!l)throw Error("OffscreenCanvas or DOM canvas not supported");o=f=l.getContext("webgl",{depth:!1})}_(o);var h=new Uint8Array(e*t*4);s(o,function(s){var o=s.gl,l=s.withTexture,u=s.withTextureFramebuffer;l("readable",function(s,l){o.texImage2D(o.TEXTURE_2D,0,o.RGBA,e,t,0,o.RGBA,o.UNSIGNED_BYTE,null),u(s,l,function(s){S(e,t,r,n,i,a,o,s,0,0,0),o.readPixels(0,0,e,t,o.RGBA,o.UNSIGNED_BYTE,h)})})});for(var u=new Uint8Array(e*t),c=0,d=0;c<h.length;c+=4)u[d++]=h[c];return u}function y(e,t,r,n,i,a,s,o,l,h){void 0===a&&(a=1),void 0===o&&(o=0),void 0===l&&(l=0),void 0===h&&(h=0),S(e,t,r,n,i,a,s,null,o,l,h)}function S(e,t,i,a,o,l,h,u,c,d,f){void 0===l&&(l=1),void 0===c&&(c=0),void 0===d&&(d=0),void 0===f&&(f=0),_(h);var m=[];r(i,function(e,t,r,n){m.push(e,t,r,n)}),m=new Float32Array(m),s(h,function(r){var i=r.gl,s=r.isWebGL2,h=r.getExtension,g=r.withProgram,v=r.withTexture,_=r.withTextureFramebuffer,x=r.handleContextLoss;if(v("rawDistances",function(r,v){(e!==r._lastWidth||t!==r._lastHeight)&&i.texImage2D(i.TEXTURE_2D,0,i.RGBA,r._lastWidth=e,r._lastHeight=t,0,i.RGBA,i.UNSIGNED_BYTE,null),g("main","precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}","precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}",function(n){var u=n.setAttribute,c=n.setUniform,d=!s&&h("ANGLE_instanced_arrays"),f=!s&&h("EXT_blend_minmax");u("aUV",2,i.STATIC_DRAW,0,p),u("aLineSegment",4,i.DYNAMIC_DRAW,1,m),c.apply(void 0,["4f","uGlyphBounds"].concat(a)),c("1f","uMaxDistance",o),c("1f","uExponent",l),_(r,v,function(r){i.enable(i.BLEND),i.colorMask(!0,!0,!0,!0),i.viewport(0,0,e,t),i.scissor(0,0,e,t),i.blendFunc(i.ONE,i.ONE),i.blendEquationSeparate(i.FUNC_ADD,s?i.MAX:f.MAX_EXT),i.clear(i.COLOR_BUFFER_BIT),s?i.drawArraysInstanced(i.TRIANGLES,0,3,m.length/4):d.drawArraysInstancedANGLE(i.TRIANGLES,0,3,m.length/4)})}),g("post",n,"precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}",function(r){r.setAttribute("aUV",2,i.STATIC_DRAW,0,p),r.setUniform("1i","tex",v),i.bindFramebuffer(i.FRAMEBUFFER,u),i.disable(i.BLEND),i.colorMask(0===f,1===f,2===f,3===f),i.viewport(c,d,e,t),i.scissor(c,d,e,t),i.drawArrays(i.TRIANGLES,0,3)})}),i.isContextLost())throw x(),Error("webgl context lost")})}function M(e){var t=e&&e!==f?e.canvas||e:g,r=v.get(t);if(void 0===r){m=!0;var n=null;try{var i=[97,106,97,61,99,137,118,80,80,118,137,99,61,97,106,97],a=x(4,4,"M8,8L16,8L24,24L16,24Z",[0,0,32,32],24,1,e);(r=a&&i.length===a.length&&a.every(function(e,t){return e===i[t]}))||(n="bad trial run results",console.info(i,a))}catch(e){r=!1,n=e.message}n&&console.warn("WebGL SDF generation not supported:",n),m=!1,v.set(t,r)}return r}var b=Object.freeze({__proto__:null,generate:x,generateIntoCanvas:y,generateIntoFramebuffer:S,isSupported:M});return e.forEachPathCommand=t,e.generate=function(e,t,r,n,i,a){void 0===i&&(i=Math.max(n[2]-n[0],n[3]-n[1])/2),void 0===a&&(a=1);try{return x.apply(b,arguments)}catch(e){return console.info("WebGL SDF generation failed, falling back to JS",e),h.apply(d,arguments)}},e.generateIntoCanvas=function(e,t,r,n,i,a,s,o,l,h){void 0===i&&(i=Math.max(n[2]-n[0],n[3]-n[1])/2),void 0===a&&(a=1),void 0===o&&(o=0),void 0===l&&(l=0),void 0===h&&(h=0);try{return y.apply(b,arguments)}catch(e){return console.info("WebGL SDF generation failed, falling back to JS",e),u.apply(d,arguments)}},e.javascript=d,e.pathToLineSegments=r,e.webgl=b,e.webglUtils=l,Object.defineProperty(e,"__esModule",{value:!0}),e}({})}}),o("2y8EL",function(t,r){e(t.exports,"default",()=>n);var n=function(){return function(e){var t,r,n,i,a={R:"13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73",EN:"1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9",ES:"17,2,6dp+1,f+1,av,16vr,mx+1,4o,2",ET:"z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj",AN:"16o+5,2j+9,2+1,35,ed,1ff2+9,87+u",CS:"18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b",B:"a,3,f+2,2v,690",S:"9,2,k",WS:"c,k,4f4,1vk+a,u,1j,335",ON:"x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i",BN:"0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1",NSM:"lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n",AL:"16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d",LRO:"6ct",RLO:"6cu",LRE:"6cq",RLE:"6cr",PDF:"6cs",LRI:"6ee",RLI:"6ef",FSI:"6eg",PDI:"6eh"},s={},o={};s.L=1,o[1]="L",Object.keys(a).forEach(function(e,t){s[e]=1<<t+1,o[s[e]]=e}),Object.freeze(s);var l=s.LRI|s.RLI|s.FSI,h=s.L|s.R|s.AL,u=s.B|s.S|s.WS|s.ON|s.FSI|s.LRI|s.RLI|s.PDI,c=s.BN|s.RLE|s.LRE|s.RLO|s.LRO|s.PDF,d=s.S|s.WS|s.B|l|s.PDI|c,p=null;function f(e){return function(){if(!p){p=new Map;var e=function(e){if(a.hasOwnProperty(e)){var t=0;a[e].split(",").forEach(function(r){var n=r.split("+"),i=n[0],a=n[1];i=parseInt(i,36),a=a?parseInt(a,36):0,p.set(t+=i,s[e]);for(var o=0;o<a;o++)p.set(++t,s[e])})}};for(var t in a)e(t)}}(),p.get(e.codePointAt(0))||s.L}var m={pairs:"14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1",canonical:"6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye"};function g(e,t){var r,n=0,i=new Map,a=t&&new Map;return e.split(",").forEach(function e(s){if(-1!==s.indexOf("+"))for(var o=+s;o--;)e(r);else{r=s;var l=s.split(">"),h=l[0],u=l[1];h=String.fromCodePoint(n+=parseInt(h,36)),u=String.fromCodePoint(n+=parseInt(u,36)),i.set(h,u),t&&a.set(u,h)}}),{map:i,reverseMap:a}}function v(){if(!t){var e=g(m.pairs,!0),i=e.map,a=e.reverseMap;t=i,r=a,n=g(m.canonical,!1).map}}function _(e){return v(),t.get(e)||null}function x(e){return v(),r.get(e)||null}function y(e){return v(),n.get(e)||null}var S=s.L,M=s.R,b=s.EN,E=s.ES,T=s.ET,w=s.AN,A=s.CS,R=s.B,C=s.S,U=s.ON,P=s.BN,L=s.NSM,D=s.AL,I=s.LRO,O=s.RLO,N=s.LRE,F=s.RLE,B=s.PDF,z=s.LRI,k=s.RLI,G=s.FSI,V=s.PDI;function H(e){return function(){if(!i){var e=g("14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1",!0),t=e.map;e.reverseMap.forEach(function(e,r){t.set(r,e)}),i=t}}(),i.get(e)||null}function W(e,t,r,n){var i=e.length;r=Math.max(0,null==r?0:+r),n=Math.min(i-1,null==n?i-1:+n);var a=[];return t.paragraphs.forEach(function(i){var s=Math.max(r,i.start),o=Math.min(n,i.end);if(s<o){for(var l=t.levels.slice(s,o+1),h=o;h>=s&&f(e[h])&d;h--)l[h]=i.level;for(var u=i.level,c=1/0,p=0;p<l.length;p++){var m=l[p];m>u&&(u=m),m<c&&(c=1|m)}for(var g=u;g>=c;g--)for(var v=0;v<l.length;v++)if(l[v]>=g){for(var _=v;v+1<l.length&&l[v+1]>=g;)v++;v>_&&a.push([_+s,v+s])}}}),a}function j(e,t,r,n){for(var i=W(e,t,r,n),a=[],s=0;s<e.length;s++)a[s]=s;return i.forEach(function(e){for(var t=e[0],r=e[1],n=a.slice(t,r+1),i=n.length;i--;)a[r-i]=n[i]}),a}return e.closingToOpeningBracket=x,e.getBidiCharType=f,e.getBidiCharTypeName=function(e){return o[f(e)]},e.getCanonicalBracket=y,e.getEmbeddingLevels=function(e,t){for(var r=new Uint32Array(e.length),n=0;n<e.length;n++)r[n]=f(e[n]);var i=new Map;function a(e,t){var n=r[e];r[e]=t,i.set(n,i.get(n)-1),n&u&&i.set(u,i.get(u)-1),i.set(t,(i.get(t)||0)+1),t&u&&i.set(u,(i.get(u)||0)+1)}for(var s=new Uint8Array(e.length),o=new Map,p=[],m=null,g=0;g<e.length;g++)m||p.push(m={start:g,end:e.length-1,level:"rtl"===t?1:"ltr"===t?0:tU(g,!1)}),r[g]&R&&(m.end=g,m=null);for(var v=F|N|O|I|l|V|B|R,H=function(e){return e+(1&e?1:2)},W=function(e){return e+(1&e?2:1)},j=0;j<p.length;j++){var X=[{_level:(m=p[j]).level,_override:0,_isolate:0}],q=void 0,Y=0,Z=0,J=0;i.clear();for(var K=m.start;K<=m.end;K++){var $=r[K];if(q=X[X.length-1],i.set($,(i.get($)||0)+1),$&u&&i.set(u,(i.get(u)||0)+1),$&v){if($&(F|N)){s[K]=q._level;var Q=($===F?W:H)(q._level);!(Q<=125)||Y||Z?!Y&&Z++:X.push({_level:Q,_override:0,_isolate:0})}else if($&(O|I)){s[K]=q._level;var ee=($===O?W:H)(q._level);!(ee<=125)||Y||Z?!Y&&Z++:X.push({_level:ee,_override:$&O?M:S,_isolate:0})}else if($&l){$&G&&($=1===tU(K+1,!0)?k:z),s[K]=q._level,q._override&&a(K,q._override);var et=($===k?W:H)(q._level);et<=125&&0===Y&&0===Z?(J++,X.push({_level:et,_override:0,_isolate:1,_isolInitIndex:K})):Y++}else if($&V){if(Y>0)Y--;else if(J>0){for(Z=0;!X[X.length-1]._isolate;)X.pop();var er=X[X.length-1]._isolInitIndex;null!=er&&(o.set(er,K),o.set(K,er)),X.pop(),J--}q=X[X.length-1],s[K]=q._level,q._override&&a(K,q._override)}else $&B?(0===Y&&(Z>0?Z--:!q._isolate&&X.length>1&&(X.pop(),q=X[X.length-1])),s[K]=q._level):$&R&&(s[K]=m.level)}else s[K]=q._level,q._override&&$!==P&&a(K,q._override)}for(var en=[],ei=null,ea=m.start;ea<=m.end;ea++){var es=r[ea];if(!(es&c)){var eo=s[ea],el=es&l,eh=es===V;ei&&eo===ei._level?(ei._end=ea,ei._endsWithIsolInit=el):en.push(ei={_start:ea,_end:ea,_level:eo,_startsWithPDI:eh,_endsWithIsolInit:el})}}for(var eu=[],ec=0;ec<en.length;ec++){var ed=en[ec];if(!ed._startsWithPDI||ed._startsWithPDI&&!o.has(ed._start)){for(var ep=[ei=ed],ef=void 0;ei&&ei._endsWithIsolInit&&null!=(ef=o.get(ei._end));)for(var em=ec+1;em<en.length;em++)if(en[em]._start===ef){ep.push(ei=en[em]);break}for(var eg=[],ev=0;ev<ep.length;ev++)for(var e_=ep[ev],ex=e_._start;ex<=e_._end;ex++)eg.push(ex);for(var ey=s[eg[0]],eS=m.level,eM=eg[0]-1;eM>=0;eM--)if(!(r[eM]&c)){eS=s[eM];break}var eb=eg[eg.length-1],eE=s[eb],eT=m.level;if(!(r[eb]&l)){for(var ew=eb+1;ew<=m.end;ew++)if(!(r[ew]&c)){eT=s[ew];break}}eu.push({_seqIndices:eg,_sosType:Math.max(eS,ey)%2?M:S,_eosType:Math.max(eT,eE)%2?M:S})}}for(var eA=0;eA<eu.length;eA++){var eR=eu[eA],eC=eR._seqIndices,eU=eR._sosType,eP=eR._eosType,eL=1&s[eC[0]]?M:S;if(i.get(L))for(var eD=0;eD<eC.length;eD++){var eI=eC[eD];if(r[eI]&L){for(var eO=eU,eN=eD-1;eN>=0;eN--)if(!(r[eC[eN]]&c)){eO=r[eC[eN]];break}a(eI,eO&(l|V)?U:eO)}}if(i.get(b))for(var eF=0;eF<eC.length;eF++){var eB=eC[eF];if(r[eB]&b)for(var ez=eF-1;ez>=-1;ez--){var ek=-1===ez?eU:r[eC[ez]];if(ek&h){ek===D&&a(eB,w);break}}}if(i.get(D))for(var eG=0;eG<eC.length;eG++){var eV=eC[eG];r[eV]&D&&a(eV,M)}if(i.get(E)||i.get(A))for(var eH=1;eH<eC.length-1;eH++){var eW=eC[eH];if(r[eW]&(E|A)){for(var ej=0,eX=0,eq=eH-1;eq>=0&&(ej=r[eC[eq]])&c;eq--);for(var eY=eH+1;eY<eC.length&&(eX=r[eC[eY]])&c;eY++);ej===eX&&(r[eW]===E?ej===b:ej&(b|w))&&a(eW,ej)}}if(i.get(b)){for(var eZ=0;eZ<eC.length;eZ++)if(r[eC[eZ]]&b){for(var eJ=eZ-1;eJ>=0&&r[eC[eJ]]&(T|c);eJ--)a(eC[eJ],b);for(eZ++;eZ<eC.length&&r[eC[eZ]]&(T|c|b);eZ++)r[eC[eZ]]!==b&&a(eC[eZ],b)}}if(i.get(T)||i.get(E)||i.get(A))for(var eK=0;eK<eC.length;eK++){var e$=eC[eK];if(r[e$]&(T|E|A)){a(e$,U);for(var eQ=eK-1;eQ>=0&&r[eC[eQ]]&c;eQ--)a(eC[eQ],U);for(var e0=eK+1;e0<eC.length&&r[eC[e0]]&c;e0++)a(eC[e0],U)}}if(i.get(b))for(var e1=0,e2=eU;e1<eC.length;e1++){var e3=eC[e1],e4=r[e3];e4&b?e2===S&&a(e3,S):e4&h&&(e2=e4)}if(i.get(u)){for(var e5=M|b|w,e6=e5|S,e8=[],e7=[],e9=0;e9<eC.length;e9++)if(r[eC[e9]]&u){var te=e[eC[e9]],tt=void 0;if(null!==_(te)){if(e7.length<63)e7.push({char:te,seqIndex:e9});else break}else if(null!==(tt=x(te)))for(var tr=e7.length-1;tr>=0;tr--){var tn=e7[tr].char;if(tn===tt||tn===x(y(te))||_(y(tn))===te){e8.push([e7[tr].seqIndex,e9]),e7.length=tr;break}}}e8.sort(function(e,t){return e[0]-t[0]});for(var ti=0;ti<e8.length;ti++){for(var ta=e8[ti],ts=ta[0],to=ta[1],tl=!1,th=0,tu=ts+1;tu<to;tu++){var tc=eC[tu];if(r[tc]&e6){tl=!0;var td=r[tc]&e5?M:S;if(td===eL){th=td;break}}}if(tl&&!th){th=eU;for(var tp=ts-1;tp>=0;tp--){var tf=eC[tp];if(r[tf]&e6){var tm=r[tf]&e5?M:S;th=tm!==eL?tm:eL;break}}}if(th){if(r[eC[ts]]=r[eC[to]]=th,th!==eL){for(var tg=ts+1;tg<eC.length;tg++)if(!(r[eC[tg]]&c)){f(e[eC[tg]])&L&&(r[eC[tg]]=th);break}}if(th!==eL){for(var tv=to+1;tv<eC.length;tv++)if(!(r[eC[tv]]&c)){f(e[eC[tv]])&L&&(r[eC[tv]]=th);break}}}}for(var t_=0;t_<eC.length;t_++)if(r[eC[t_]]&u){for(var tx=t_,ty=t_,tS=eU,tM=t_-1;tM>=0;tM--)if(r[eC[tM]]&c)tx=tM;else{tS=r[eC[tM]]&e5?M:S;break}for(var tb=eP,tE=t_+1;tE<eC.length;tE++)if(r[eC[tE]]&(u|c))ty=tE;else{tb=r[eC[tE]]&e5?M:S;break}for(var tT=tx;tT<=ty;tT++)r[eC[tT]]=tS===tb?tS:eL;t_=ty}}}for(var tw=m.start;tw<=m.end;tw++){var tA=s[tw],tR=r[tw];if(1&tA?tR&(S|b|w)&&s[tw]++:tR&M?s[tw]++:tR&(w|b)&&(s[tw]+=2),tR&c&&(s[tw]=0===tw?m.level:s[tw-1]),tw===m.end||f(e[tw])&(C|R))for(var tC=tw;tC>=0&&f(e[tC])&d;tC--)s[tC]=m.level}}return{levels:s,paragraphs:p};function tU(t,n){for(var i=t;i<e.length;i++){var a=r[i];if(a&(M|D))return 1;if(a&(R|S)||n&&a===V)break;if(a&l){var s=function(t){for(var n=1,i=t+1;i<e.length;i++){var a=r[i];if(a&R)break;if(a&V){if(0==--n)return i}else a&l&&n++}return -1}(i);i=-1===s?e.length:s}}return 0}},e.getMirroredCharacter=H,e.getMirroredCharactersMap=function(e,t,r,n){var i=e.length;r=Math.max(0,null==r?0:+r),n=Math.min(i-1,null==n?i-1:+n);for(var a=new Map,s=r;s<=n;s++)if(1&t[s]){var o=H(e[s]);null!==o&&a.set(s,o)}return a},e.getReorderSegments=W,e.getReorderedIndices=j,e.getReorderedString=function(e,t,r,n){var i=j(e,t,r,n),a=[].concat(e);return i.forEach(function(r,n){a[n]=(1&t.levels[r]?H(e[r]):null)||e[r]}),a.join("")},e.openingToClosingBracket=_,Object.defineProperty(e,"__esModule",{value:!0}),e}({})}}),o("4kOkh",function(t,r){e(t.exports,"voidMainRegExp",()=>i),e(t.exports,"createDerivedMaterial",()=>function e(t,r){let i=function(e){let t=JSON.stringify(e,f),r=g.get(t);return null==r&&g.set(t,r=++m),r}(r),s=u.get(t);if(s||u.set(t,s=Object.create(null)),s[i])return new s[i];let v=`_onBeforeCompile${i}`,_=function(e,n){t.onBeforeCompile.call(this,e,n);let s=this.customProgramCacheKey()+"|"+e.vertexShader+"|"+e.fragmentShader,o=c[s];if(!o){let t=function(e,{vertexShader:t,fragmentShader:r},n,i){let{vertexDefs:s,vertexMainIntro:o,vertexMainOutro:l,vertexTransform:h,fragmentDefs:u,fragmentMainIntro:c,fragmentMainOutro:d,fragmentColorTransform:f,customRewriter:m,timeUniform:g}=n;if(s=s||"",o=o||"",l=l||"",u=u||"",c=c||"",d=d||"",(h||m)&&(t=a(t)),(f||m)&&(r=a(r=r.replace(/^[ \t]*#include <((?:tonemapping|encodings|fog|premultiplied_alpha|dithering)_fragment)>/gm,"\n//!BEGIN_POST_CHUNK $1\n$&\n//!END_POST_CHUNK\n"))),m){let e=m({vertexShader:t,fragmentShader:r});t=e.vertexShader,r=e.fragmentShader}if(f){let e=[];r=r.replace(/^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,t=>(e.push(t),"")),d=`${f}
${e.join("\n")}
${d}`}if(g){let e=`
uniform float ${g};
`;s=e+s,u=e+u}return h&&(t=`vec3 troika_position_${i};
vec3 troika_normal_${i};
vec2 troika_uv_${i};
${t}
`,s=`${s}
void troikaVertexTransform${i}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${h}
}
`,o=`
troika_position_${i} = vec3(position);
troika_normal_${i} = vec3(normal);
troika_uv_${i} = vec2(uv);
troikaVertexTransform${i}(troika_position_${i}, troika_normal_${i}, troika_uv_${i});
${o}
`,t=t.replace(/\b(position|normal|uv)\b/g,(e,t,r,n)=>/\battribute\s+vec[23]\s+$/.test(n.substr(0,r))?t:`troika_${t}_${i}`),e.map&&e.map.channel>0||(t=t.replace(/\bMAP_UV\b/g,`troika_uv_${i}`))),{vertexShader:t=p(t,i,s,o,l),fragmentShader:r=p(r,i,u,c,d)}}(this,e,r,i);o=c[s]=t}e.vertexShader=o.vertexShader,e.fragmentShader=o.fragmentShader,l(e.uniforms,this.uniforms),r.timeUniform&&(e.uniforms[r.timeUniform]={get value(){return Date.now()-h}}),this[v]&&this[v](e)},x=function(){return y(r.chained?t:t.clone())},y=function(e){let n=Object.create(e,S);return Object.defineProperty(n,"baseMaterial",{value:t}),Object.defineProperty(n,"id",{value:d++}),n.uuid=function(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(o[255&e]+o[e>>8&255]+o[e>>16&255]+o[e>>24&255]+"-"+o[255&t]+o[t>>8&255]+"-"+o[t>>16&15|64]+o[t>>24&255]+"-"+o[63&r|128]+o[r>>8&255]+"-"+o[r>>16&255]+o[r>>24&255]+o[255&n]+o[n>>8&255]+o[n>>16&255]+o[n>>24&255]).toUpperCase()}(),n.uniforms=l({},e.uniforms,r.uniforms),n.defines=l({},e.defines,r.defines),n.defines[`TROIKA_DERIVED_MATERIAL_${i}`]="",n.extensions=l({},e.extensions,r.extensions),n._listeners=void 0,n},S={constructor:{value:x},isDerivedMaterial:{value:!0},customProgramCacheKey:{writable:!0,configurable:!0,value:function(){return t.customProgramCacheKey()+"|"+i}},onBeforeCompile:{get:()=>_,set(e){this[v]=e}},copy:{writable:!0,configurable:!0,value:function(e){return t.copy.call(this,e),t.isShaderMaterial||t.isDerivedMaterial||(l(this.extensions,e.extensions),l(this.defines,e.defines),l(this.uniforms,(0,n.UniformsUtils).clone(e.uniforms))),this}},clone:{writable:!0,configurable:!0,value:function(){return y(new t.constructor).copy(this)}},getDepthMaterial:{writable:!0,configurable:!0,value:function(){let i=this._depthMaterial;return i||((i=this._depthMaterial=e(t.isDerivedMaterial?t.getDepthMaterial():new n.MeshDepthMaterial({depthPacking:n.RGBADepthPacking}),r)).defines.IS_DEPTH_MATERIAL="",i.uniforms=this.uniforms),i}},getDistanceMaterial:{writable:!0,configurable:!0,value:function(){let i=this._distanceMaterial;return i||((i=this._distanceMaterial=e(t.isDerivedMaterial?t.getDistanceMaterial():new n.MeshDistanceMaterial,r)).defines.IS_DISTANCE_MATERIAL="",i.uniforms=this.uniforms),i}},dispose:{writable:!0,configurable:!0,value(){let{_depthMaterial:e,_distanceMaterial:r}=this;e&&e.dispose(),r&&r.dispose(),t.dispose.call(this)}}};return s[i]=x,new x});var n=s("ilwiq");let i=/\bvoid\s+main\s*\(\s*\)\s*{/g;function a(e){return e.replace(/^[ \t]*#include +<([\w\d./]+)>/gm,function(e,t){let r=n.ShaderChunk[t];return r?a(r):e})}let o=[];for(let e=0;e<256;e++)o[e]=(e<16?"0":"")+e.toString(16);let l=Object.assign||function(){let e=arguments[0];for(let t=1,r=arguments.length;t<r;t++){let r=arguments[t];if(r)for(let t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},h=Date.now(),u=new WeakMap,c=new Map,d=1e10;function p(e,t,r,n,a){return(n||a||r)&&(e=e.replace(i,`
${r}
void troikaOrigMain${t}() {`)+`
void main() {
  ${n}
  troikaOrigMain${t}();
  ${a}
}`),e}function f(e,t){return"uniforms"===e?void 0:"function"==typeof t?t.toString():t}let m=0,g=new Map;n.DoubleSide});var l=s("ilwiq"),h={};Object.defineProperty(h,"__esModule",{value:!0}),h.getRandomPoints=h.Greek=h.Label=h.VectorPlot=h.ScatterPlot=h.Frame=void 0;var u={};Object.defineProperty(u,"__esModule",{value:!0}),u.Frame=void 0;var l=s("ilwiq"),c=s("5Rd1x"),d={};Object.defineProperty(d,"__esModule",{value:!0}),d.Axes=d.NamedAxis=d.PlaneAxes=d.UnitVector=void 0;var l=s("ilwiq"),p=s("2qNZ3"),f=s("dsZVr"),m=s("0WRuh");d.UnitVector={i:new l.Vector3(1,0,0),j:new l.Vector3(0,1,0),k:new l.Vector3(0,0,1)},d.PlaneAxes={xy:{normal:d.UnitVector.k,unit:{x:d.UnitVector.i,y:d.UnitVector.j}},xz:{normal:d.UnitVector.j,unit:{x:d.UnitVector.i,z:d.UnitVector.k}},yz:{normal:d.UnitVector.i,unit:{y:d.UnitVector.j,z:d.UnitVector.k}}},d.NamedAxis={x:d.UnitVector.i,y:d.UnitVector.j,z:d.UnitVector.k};class g extends p.Line2{constructor(e,t,r,n=.01){let i=[new l.Vector3,e.multiplyScalar(t)],a=new f.LineGeometry;a.setPositions(i.flatMap(e=>e.toArray())),super(a,new m.LineMaterial({color:r,linewidth:n})),super.computeLineDistances()}}d.Axes=class{constructor(e,t,r){this.lengthX=e,this.lengthY=t,this.lengthZ=r,this.x=new g(new l.Vector3(1,0,0),1.1*this.lengthX,16711680),this.y=new g(new l.Vector3(0,1,0),1.1*this.lengthY,65280),this.z=new g(new l.Vector3(0,0,1),1.1*this.lengthZ,255),this.setGrids()}setGrids(){this.gridXZ=new l.GridHelper(Math.max(this.lengthX,this.lengthZ)),this.gridXZ.position.setX(this.lengthX/2),this.gridXZ.position.setZ(this.lengthZ/2),this.gridXY=new l.GridHelper(Math.max(this.lengthX,this.lengthY)),this.gridXY.position.setX(this.lengthX/2),this.gridXY.position.setY(this.lengthY/2),this.gridXY.rotateOnAxis(new l.Vector3(1,0,0),Math.PI/2),this.gridYZ=new l.GridHelper(Math.max(this.lengthY,this.lengthZ)),this.gridYZ.position.setY(this.lengthY/2),this.gridYZ.position.setZ(this.lengthZ/2),this.gridYZ.rotateOnAxis(new l.Vector3(0,0,1),Math.PI/2)}};class v extends l.Scene{constructor(e,t=10){super(),this.canvas=e,this.size=t,this.observer=new ResizeObserver(()=>this.onCanvasResize()),this.scene=new l.Scene,this.scene.background=new l.Color(16777215);let{clientWidth:r,clientHeight:n}=e;this.width=r,this.height=n,this.renderer=new l.WebGLRenderer({canvas:e}),this.renderer.setSize(r,n),this.setCamera(r,n),this.setControls(),this.setAxes(),this.updateOnChanges(),this.update()}setCamera(e,t){this.camera=new l.PerspectiveCamera(45,e/t,.1,1e3),this.camera.position.set(1.5*this.size,1.2*this.size,2.5*this.size),this.scene.add(this.camera)}setControls(){this.controls=new c.OrbitControls(this.camera,this.canvas),this.controls.target.set(0,0,0)}setAxes(){this.axes=new d.Axes(this.size,this.size,this.size),this.scene.add(this.axes.x),this.scene.add(this.axes.y),this.scene.add(this.axes.z),this.scene.add(this.axes.gridXY),this.scene.add(this.axes.gridXZ),this.scene.add(this.axes.gridYZ)}updateOnChanges(){this.controls.addEventListener("change",()=>this.update()),this.observer.observe(this.canvas)}update(){this.renderer.render(this.scene,this.camera)}capture(){this.renderer.render(this.scene,this.camera);let e=this.canvas.toDataURL("img/png"),t=document.createElement("a");return t.href=e,t.download="threeplot.png",t.click(),e}async addPlot(e){this.scene.add(...e.getDrawables()),e.getWritables().forEach(e=>this.addLabel(e)),this.update()}addLabel(e){this.scene.add(e),e.addEventListener("synccomplete",()=>{this.update()})}onCanvasResize(){this.camera.aspect=this.width/this.height,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height),this.update()}}u.Frame=v,Object.defineProperty(h,"Frame",{enumerable:!0,get:function(){return u.Frame}});var _={};Object.defineProperty(_,"__esModule",{value:!0}),_.ScatterPlot=void 0;var l=s("ilwiq"),x={};Object.defineProperty(x,"__esModule",{value:!0}),x.Plot=void 0,x.Plot=class{getDrawables(){return this.drawables}getWritables(){return this.writables}constructor(){this.drawables=[],this.writables=[]}};class y extends x.Plot{constructor(e,t=.2){super(),this.drawables=e.map(e=>{let r=new l.SphereGeometry(t),n=new l.MeshBasicMaterial({color:65280}),i=new l.Mesh(r,n);return i.position.set(e.x,e.y,e.z),i})}}_.ScatterPlot=y,Object.defineProperty(h,"ScatterPlot",{enumerable:!0,get:function(){return _.ScatterPlot}});var S={};Object.defineProperty(S,"__esModule",{value:!0}),S.VectorPlot=void 0;var l=s("ilwiq"),M={};Object.defineProperty(M,"__esModule",{value:!0}),M.Label=void 0;var b=s("gbdyO");class E extends b.Text{constructor(e,t){super(),this.text=t.text,this.fontSize=t.fontSize||1,this.position.x=e.x,this.position.y=e.y,this.position.z=e.z,this.anchorX=t.anchorX||"center",this.anchorY=t.anchorY||"middle",this.color=t.color||0}}M.Label=E;var T={};Object.defineProperty(T,"__esModule",{value:!0}),T.LineConfig=T.VectorPlotPlaneConfig=T.VectorPlotConfig=void 0;var w={};Object.defineProperty(w,"__esModule",{value:!0}),w.BaseConfig=void 0,w.BaseConfig=class{valueOrDefault(e,t){return!0===e?t:e}};var A={};Object.defineProperty(A,"__esModule",{value:!0}),A.VectorPlotDefault=void 0,(t=r||(A.VectorPlotDefault=r={})).primaryLine={line:{type:"solid",style:{color:0}}},t.secondaryLine={line:{type:"dashed",style:{color:0,scale:1,dashSize:.25,gapSize:.1}}};class R extends w.BaseConfig{constructor(e){super();let{angle:t,color:r,label:n,xy:i,xz:a,yz:s}=e||{};this.color=r||0,this.label=n,t&&(this.angle=new U(this.valueOrDefault(t,A.VectorPlotDefault.primaryLine))),i&&(this.xy=new C(i)),a&&(this.xz=new C(a)),s&&(this.yz=new C(s))}}T.VectorPlotConfig=R;class C extends w.BaseConfig{constructor(e){super();let{component:t,projection:r,projectionAngle:n}=e=this.valueOrDefault(e,{projection:!0,component:!0,projectionAngle:!0});r&&(this.projection=new U(this.valueOrDefault(r,A.VectorPlotDefault.secondaryLine))),t&&(this.component=new U(this.valueOrDefault(t,A.VectorPlotDefault.secondaryLine))),n&&(this.projectionAngle=new U(this.valueOrDefault(n,A.VectorPlotDefault.secondaryLine)))}}T.VectorPlotPlaneConfig=C;class U extends w.BaseConfig{constructor({line:e,label:t}){super(),this.line=e||A.VectorPlotDefault.secondaryLine.line,this.label=t}}T.LineConfig=U;class P extends x.Plot{constructor(e,t,r){var n,i,a;super(),this.origin=e,this.target=t,this.config=new T.VectorPlotConfig(r);let s=this.createVector(e,t);if(this.drawables.push(s),this.config.label&&this.writables.push(this.createLabel(s,this.config.label)),this.config.angle){let e=this.createAngleToTarget("y",null===(i=null===(n=this.config)||void 0===n?void 0:n.angle)||void 0===i?void 0:i.line);this.drawables.push(e),(null===(a=this.config.angle)||void 0===a?void 0:a.label)&&this.writables.push(this.createLabel(e,this.config.angle.label))}for(let e in d.PlaneAxes){let t=this.config[e];if(null==t?void 0:t.projection){let r=this.createProjection(e,t.projection.line);t.projection.label&&this.writables.push(this.createLabel(r,t.projection.label)),this.drawables.push(r)}if(null==t?void 0:t.component){let r=this.createComponent(e,t.component.line);t.component.label&&this.writables.push(this.createLabel(r,t.component.label)),this.drawables.push(r)}if(null==t?void 0:t.projectionAngle){let r=this.createAngleToProjection(e,t.projectionAngle.line);t.projectionAngle.label&&this.writables.push(this.createLabel(r,t.projectionAngle.label)),this.drawables.push(r)}}}createVector(e,t){let r=Math.abs(e.distanceTo(t));return new l.ArrowHelper(t.clone().normalize(),e,r,this.config.color,.2*r,.1*r)}createAngleToProjection(e,t){let r=d.PlaneAxes[e],n=r.normal,i=this.target.clone().projectOnPlane(n),a=.5*i.distanceTo(this.origin),s=0,o=i.angleTo(d.UnitVector.i);"xz"===e&&(s=-Math.PI/2,o=i.angleTo(d.UnitVector.k)),"yz"===e&&(s=Math.PI/2,o=i.angleTo(d.UnitVector.j));let h=new l.EllipseCurve(this.origin.x,this.origin.y,a,a,0,o,!1,s),{type:u,style:c}=t,p=new("dashed"===u?l.LineDashedMaterial:l.LineBasicMaterial)(c),f=new l.BufferGeometry().setFromPoints(h.getPoints(50)),m=new l.Quaternion().setFromUnitVectors(d.UnitVector.k,r.normal);return f.applyQuaternion(m),new l.Line(f,p)}createAngleToTarget(e,t){let r=this.target.clone().distanceTo(this.origin),n=this.target.clone().projectOnPlane(d.UnitVector.j),i=new l.EllipseCurve(this.origin.x,this.origin.y,r,r,0,this.target.angleTo(n),!1,0),{type:a,style:s}=t,o=new("dashed"===a?l.LineDashedMaterial:l.LineBasicMaterial)(s),h=new l.BufferGeometry().setFromPoints(i.getPoints(50));return h.applyQuaternion(new l.Quaternion().setFromAxisAngle(d.UnitVector.j,-d.UnitVector.i.angleTo(n))),new l.Line(h,o)}createProjection(e,t){let{type:r,style:n}=t,i=new("dashed"===r?l.LineDashedMaterial:l.LineBasicMaterial)(n),a=d.PlaneAxes[e].normal,s=this.target.clone().projectOnPlane(a),o=new l.BufferGeometry().setFromPoints([s,this.origin]);return new l.Line(o,i).computeLineDistances()}createLabel(e,t){let r=new l.BoxHelper(e);r.geometry.computeBoundingBox();let n=r.geometry.boundingBox;return new M.Label(n.max,{...t})}createComponent(e,t){let{type:r,style:n}=t,i=new("dashed"===r?l.LineDashedMaterial:l.LineBasicMaterial)(n),a=d.PlaneAxes[e].normal,s=this.target.clone().projectOnPlane(a),o=new l.BufferGeometry().setFromPoints([s,this.target]);return new l.Line(o,i).computeLineDistances()}}S.VectorPlot=P,Object.defineProperty(h,"VectorPlot",{enumerable:!0,get:function(){return S.VectorPlot}}),Object.defineProperty(h,"Label",{enumerable:!0,get:function(){return M.Label}});var L={};Object.defineProperty(L,"__esModule",{value:!0}),L.Greek=void 0;class D{}L.Greek=D,D.uppercaseHeta="Ͱ",D.lowercaseHeta="ͱ",D.uppercaseArchaicSampi="Ͳ",D.lowercaseArchaicSampi="ͳ",D.numeralSign="ʹ",D.lowerNumeralSign="͵",D.uppercasePamphylianDigamma="Ͷ",D.lowercasePamphylianDigamma="ͷ",D.ypogegrammeni="ͺ",D.smallReversedLunateSigmaSymbol="ͻ",D.smallDottedLunateSigmaSymbol="ͼ",D.smallReversedDottedLunateSigmaSymbol="ͽ",D.questionMark=";",D.uppercaseYot="Ϳ",D.acuteaccent="΄",D.diaeresiswithacuteaccent="΅",D.uppercaseAwithacuteaccent="Ά",D.anoTeleia="·",D.uppercaseEpsilonwithacuteaccent="Έ",D.uppercaseEtawithacuteaccent="Ή",D.uppercaseIotawithacuteaccent="Ί",D.uppercaseOmicronwithacuteaccent="Ό",D.uppercaseUpsilonwithacuteaccent="Ύ",D.uppercaseOmegawithacuteaccent="Ώ",D.lowercaseIotawithdiaeresisandacuteaccent="ΐ",D.uppercaseAlpha="Α",D.uppercaseBeta="Β",D.uppercaseGamma="Γ",D.uppercaseDelta="Δ",D.uppercaseEpsilon="Ε",D.uppercaseZeta="Ζ",D.uppercaseEta="Η",D.uppercaseTheta="Θ",D.uppercaseIota="Ι",D.uppercaseKappa="Κ",D.uppercaseLambda="Λ",D.uppercaseMu="Μ",D.uppercaseNu="Ν",D.uppercaseXi="Ξ",D.uppercaseOmicron="Ο",D.uppercasePi="Π",D.uppercaseRho="Ρ",D.uppercaseSigma="Σ",D.uppercaseTau="Τ",D.uppercaseUpsilon="Υ",D.uppercasePhi="Φ",D.uppercaseChi="Χ",D.uppercasePsi="Ψ",D.uppercaseOmega="Ω",D.uppercaseIotawithdiaeresis="Ϊ",D.uppercaseUpsilonwithdiaeresis="Ϋ",D.lowercaseAlphawithacuteaccent="ά",D.lowercaseEpsilonwithacuteaccent="έ",D.lowercaseEtawithacuteaccent="ή",D.lowercaseIotawithacuteaccent="ί",D.lowercaseUpsilonwithdiaeresisandacuteaccent="ΰ",D.lowercaseAlpha="α",D.lowercaseBeta="β",D.lowercaseGamma="γ",D.lowercaseDelta="δ",D.lowercaseEpsilon="ε",D.lowercaseZeta="ζ",D.lowercaseEta="η",D.lowercaseTheta="θ",D.lowercaseIota="ι",D.lowercaseKappa="κ",D.lowercaseLambda="λ",D.lowercaseMu="μ",D.lowercaseNu="ν",D.lowercaseXi="ξ",D.lowercaseOmicron="ο",D.lowercasePi="π",D.lowercaseRho="ρ",D.lowercaseFinalSigma="ς",D.lowercaseSigma="σ",D.lowercaseTau="τ",D.lowercaseUpsilon="υ",D.lowercasePhi="φ",D.lowercaseChi="χ",D.lowercasePsi="ψ",D.lowercaseOmega="ω",D.lowercaseIotawithdiaeresis="ϊ",D.lowercaseUpsilonwithdiaeresis="ϋ",D.lowercaseOmicronwithacuteaccent="ό",D.lowercaseUpsilonwithacuteaccent="ύ",D.lowercaseOmegawithacuteaccent="ώ",D.uppercaseKaiSymbol="Ϗ",D.betaSymbol="ϐ",D.thetaSymbol="ϑ",D.upsilonwithhookSymbol="ϒ",D.upsilonwithacuteandhookSymbol="ϓ",D.upsilonwithdiaeresisandhookSymbol="ϔ",D.phiSymbol="ϕ",D.piSymbol="ϖ",D.kaiSymbol="ϗ",D.letterQoppa="Ϙ",D.lowercaseQoppa="ϙ",D.letterStigma="Ϛ",D.lowercaseStigma="ϛ",D.letterDigamma="Ϝ",D.lowercaseDigamma="ϝ",D.letterKoppa="Ϟ",D.lowercaseKoppa="ϟ",D.letterSampi="Ϡ",D.lowercaseSampi="ϡ",D.copticuppercaseShei="Ϣ",D.copticlowercaseShei="ϣ",D.copticuppercaseFei="Ϥ",D.copticlowercaseFei="ϥ",D.copticuppercaseKhei="Ϧ",D.copticlowercaseKhei="ϧ",D.copticuppercaseHori="Ϩ",D.copticlowercaseHori="ϩ",D.copticuppercaseGangia="Ϫ",D.copticlowercaseGangia="ϫ",D.copticuppercaseShima="Ϭ",D.copticlowercaseShima="ϭ",D.copticuppercaseDei="Ϯ",D.copticlowercaseDei="ϯ",D.kappaSymbol="ϰ",D.rhoSymbol="ϱ",D.lunateSigmaSymbol="ϲ",D.letterYot="ϳ",D.uppercaseThetaSymbol="ϴ",D.lunateEpsilonSymbol="ϵ",D.reversedLunateEpsilonSymbol="϶",D.uppercaseSho="Ϸ",D.lowercaseSho="ϸ",D.uppercaseLunateSigmaSymbol="Ϲ",D.uppercaseSan="Ϻ",D.lowercaseSan="ϻ",D.rhowithstrokeSymbol="ϼ",D.uppercaseReversedLunateSigmaSymbol="Ͻ",D.uppercaseDottedLunateSigmaSymbol="Ͼ",D.uppercaseReversedDottedLunateSigmaSymbol="Ͽ",Object.defineProperty(h,"Greek",{enumerable:!0,get:function(){return L.Greek}});var I={};Object.defineProperty(I,"__esModule",{value:!0}),I.getRandomPoints=void 0;var l=s("ilwiq");I.getRandomPoints=(e=100,t=10)=>{let r=[];for(let n=0;n<e;n++){let e=Math.random()*t,n=Math.random()*t,i=Math.random()*t;r.push(new l.Vector3(e,n,i))}return r},Object.defineProperty(h,"getRandomPoints",{enumerable:!0,get:function(){return I.getRandomPoints}});const O=document.getElementById("canvas1"),N=document.getElementById("canvas2"),F=document.getElementById("canvas3"),B=(0,h.getRandomPoints)(200),z=new h.ScatterPlot(B);new h.Frame(O,10).addPlot(z),new h.Frame(N,10).addLabel(new h.Label(new l.Vector3(3,3,3),{text:`${h.Greek.lowercaseAlpha}=1/2${h.Greek.lowercasePi}`,fontSize:1})),new h.Frame(F,10).addPlot(new h.VectorPlot(new l.Vector3(0,0,0),new l.Vector3(7,6.4,4.6),{angle:{label:{text:h.Greek.uppercasePhi,anchorY:"top"}},label:{text:"v",anchorY:"bottom"},xy:{projection:{label:{text:"a",anchorY:"bottom",anchorX:"left"}},projectionAngle:{label:{text:h.Greek.lowercasePhi}},component:!0},xz:{projection:{label:{text:"b",anchorY:"bottom",anchorX:"center"}},projectionAngle:{label:{text:h.Greek.lowercaseBeta,anchorX:"right",anchorY:"bottom"}},component:!1}}));
//# sourceMappingURL=index.c4b9b15b.js.map
